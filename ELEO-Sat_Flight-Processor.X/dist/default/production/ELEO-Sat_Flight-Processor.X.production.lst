

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Oct 08 23:29:48 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    10  0000                     
    11 ;;
    12 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
    13 ;;
    14 ;; *************** function _main *****************
    15 ;; Defined at:
    16 ;;		line 14 in file "main.c"
    17 ;; Parameters:    Size  Location     Type
    18 ;;		None
    19 ;; Auto vars:     Size  Location     Type
    20 ;;  currTime        4   29[COMRAM] long 
    21 ;;  prevReadGPST    4   25[COMRAM] long 
    22 ;;  prevGetDataT    4   21[COMRAM] long 
    23 ;;  prevSendData    4   17[COMRAM] long 
    24 ;;  gpsInterval     4   13[COMRAM] long 
    25 ;;  getInterval     4    9[COMRAM] long 
    26 ;;  sendInterval    4    5[COMRAM] long 
    27 ;; Return value:  Size  Location     Type
    28 ;;		None               void
    29 ;; Registers used:
    30 ;;		wreg, status,2, status,0
    31 ;; Tracked objects:
    32 ;;		On entry : 0/0
    33 ;;		On exit  : 0/0
    34 ;;		Unchanged: 0/0
    35 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    36 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    37 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    38 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    39 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    40 ;;Total ram usage:       33 bytes
    41 ;; This function calls:
    42 ;;		Nothing
    43 ;; This function is called by:
    44 ;;		Startup code after reset
    45 ;; This function uses a non-reentrant model
    46 ;;
    47                           
    48                           	psect	text0
    49  00FF2E                     __ptext0:
    50                           	opt stack 0
    51  00FF2E                     _main:
    52                           	opt stack 31
    53  00FF2E                     l3:
    54                           
    55                           ;main.c: 30: {
    56                           ;main.c: 33: if(currTime >= prevSendDataTime + sendInterval)
    57  00FF2E  5006               	movf	main@sendInterval,w,c
    58  00FF30  2412               	addwf	main@prevSendDataTime,w,c
    59  00FF32  6E01               	movwf	??_main& (0+255),c
    60  00FF34  5007               	movf	main@sendInterval+1,w,c
    61  00FF36  2013               	addwfc	main@prevSendDataTime+1,w,c
    62  00FF38  6E02               	movwf	(??_main+1)& (0+255),c
    63  00FF3A  5008               	movf	main@sendInterval+2,w,c
    64  00FF3C  2014               	addwfc	main@prevSendDataTime+2,w,c
    65  00FF3E  6E03               	movwf	(??_main+2)& (0+255),c
    66  00FF40  5009               	movf	main@sendInterval+3,w,c
    67  00FF42  2015               	addwfc	main@prevSendDataTime+3,w,c
    68  00FF44  6E04               	movwf	(??_main+3)& (0+255),c
    69  00FF46  5021               	movf	main@currTime+3,w,c
    70  00FF48  0A80               	xorlw	128
    71  00FF4A  6E05               	movwf	(??_main+4)& (0+255),c
    72  00FF4C  5001               	movf	??_main,w,c
    73  00FF4E  5C1E               	subwf	main@currTime,w,c
    74  00FF50  5002               	movf	??_main+1,w,c
    75  00FF52  581F               	subwfb	main@currTime+1,w,c
    76  00FF54  5003               	movf	??_main+2,w,c
    77  00FF56  5820               	subwfb	main@currTime+2,w,c
    78  00FF58  5004               	movf	??_main+3,w,c
    79  00FF5A  0A80               	xorlw	128
    80  00FF5C  5805               	subwfb	(??_main+4)& (0+255),w,c
    81  00FF5E  A0D8               	btfss	status,0,c
    82  00FF60  D009               	goto	l591
    83                           
    84                           ;main.c: 34: {
    85                           ;main.c: 35: prevSendDataTime = currTime;
    86  00FF62  C01E  F012         	movff	main@currTime,main@prevSendDataTime
    87  00FF66  C01F  F013         	movff	main@currTime+1,main@prevSendDataTime+1
    88  00FF6A  C020  F014         	movff	main@currTime+2,main@prevSendDataTime+2
    89  00FF6E  C021  F015         	movff	main@currTime+3,main@prevSendDataTime+3
    90                           
    91                           ;main.c: 37: }
    92  00FF72  D7DD               	goto	l3
    93  00FF74                     l591:
    94                           
    95                           ;main.c: 39: else if(currTime >= prevGetDataTime + getInterval)
    96  00FF74  500A               	movf	main@getInterval,w,c
    97  00FF76  2416               	addwf	main@prevGetDataTime,w,c
    98  00FF78  6E01               	movwf	??_main& (0+255),c
    99  00FF7A  500B               	movf	main@getInterval+1,w,c
   100  00FF7C  2017               	addwfc	main@prevGetDataTime+1,w,c
   101  00FF7E  6E02               	movwf	(??_main+1)& (0+255),c
   102  00FF80  500C               	movf	main@getInterval+2,w,c
   103  00FF82  2018               	addwfc	main@prevGetDataTime+2,w,c
   104  00FF84  6E03               	movwf	(??_main+2)& (0+255),c
   105  00FF86  500D               	movf	main@getInterval+3,w,c
   106  00FF88  2019               	addwfc	main@prevGetDataTime+3,w,c
   107  00FF8A  6E04               	movwf	(??_main+3)& (0+255),c
   108  00FF8C  5021               	movf	main@currTime+3,w,c
   109  00FF8E  0A80               	xorlw	128
   110  00FF90  6E05               	movwf	(??_main+4)& (0+255),c
   111  00FF92  5001               	movf	??_main,w,c
   112  00FF94  5C1E               	subwf	main@currTime,w,c
   113  00FF96  5002               	movf	??_main+1,w,c
   114  00FF98  581F               	subwfb	main@currTime+1,w,c
   115  00FF9A  5003               	movf	??_main+2,w,c
   116  00FF9C  5820               	subwfb	main@currTime+2,w,c
   117  00FF9E  5004               	movf	??_main+3,w,c
   118  00FFA0  0A80               	xorlw	128
   119  00FFA2  5805               	subwfb	(??_main+4)& (0+255),w,c
   120  00FFA4  A0D8               	btfss	status,0,c
   121  00FFA6  D009               	goto	l595
   122                           
   123                           ;main.c: 40: {
   124                           ;main.c: 41: prevGetDataTime = currTime;
   125  00FFA8  C01E  F016         	movff	main@currTime,main@prevGetDataTime
   126  00FFAC  C01F  F017         	movff	main@currTime+1,main@prevGetDataTime+1
   127  00FFB0  C020  F018         	movff	main@currTime+2,main@prevGetDataTime+2
   128  00FFB4  C021  F019         	movff	main@currTime+3,main@prevGetDataTime+3
   129                           
   130                           ;main.c: 42: }
   131  00FFB8  D7BA               	goto	l3
   132  00FFBA                     l595:
   133                           
   134                           ;main.c: 44: else if(currTime >= prevReadGPSTime + gpsInterval)
   135  00FFBA  500E               	movf	main@gpsInterval,w,c
   136  00FFBC  241A               	addwf	main@prevReadGPSTime,w,c
   137  00FFBE  6E01               	movwf	??_main& (0+255),c
   138  00FFC0  500F               	movf	main@gpsInterval+1,w,c
   139  00FFC2  201B               	addwfc	main@prevReadGPSTime+1,w,c
   140  00FFC4  6E02               	movwf	(??_main+1)& (0+255),c
   141  00FFC6  5010               	movf	main@gpsInterval+2,w,c
   142  00FFC8  201C               	addwfc	main@prevReadGPSTime+2,w,c
   143  00FFCA  6E03               	movwf	(??_main+2)& (0+255),c
   144  00FFCC  5011               	movf	main@gpsInterval+3,w,c
   145  00FFCE  201D               	addwfc	main@prevReadGPSTime+3,w,c
   146  00FFD0  6E04               	movwf	(??_main+3)& (0+255),c
   147  00FFD2  5021               	movf	main@currTime+3,w,c
   148  00FFD4  0A80               	xorlw	128
   149  00FFD6  6E05               	movwf	(??_main+4)& (0+255),c
   150  00FFD8  5001               	movf	??_main,w,c
   151  00FFDA  5C1E               	subwf	main@currTime,w,c
   152  00FFDC  5002               	movf	??_main+1,w,c
   153  00FFDE  581F               	subwfb	main@currTime+1,w,c
   154  00FFE0  5003               	movf	??_main+2,w,c
   155  00FFE2  5820               	subwfb	main@currTime+2,w,c
   156  00FFE4  5004               	movf	??_main+3,w,c
   157  00FFE6  0A80               	xorlw	128
   158  00FFE8  5805               	subwfb	(??_main+4)& (0+255),w,c
   159  00FFEA  A0D8               	btfss	status,0,c
   160  00FFEC  D7A0               	goto	l3
   161                           
   162                           ;main.c: 45: {
   163                           ;main.c: 47: prevReadGPSTime = currTime;
   164  00FFEE  C01E  F01A         	movff	main@currTime,main@prevReadGPSTime
   165  00FFF2  C01F  F01B         	movff	main@currTime+1,main@prevReadGPSTime+1
   166  00FFF6  C020  F01C         	movff	main@currTime+2,main@prevReadGPSTime+2
   167  00FFFA  C021  F01D         	movff	main@currTime+3,main@prevReadGPSTime+3
   168  00FFFE  D797               	goto	l3
   169  010000                     __end_of_main:
   170                           	opt stack 0
   171  0000                     status	equ	0xFD8
   172                           
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176  00FF28                     __pcinit:
   177                           	opt stack 0
   178  00FF28                     start_initialization:
   179                           	opt stack 0
   180  00FF28                     __initialization:
   181                           	opt stack 0
   182  00FF28                     end_of_initialization:
   183                           	opt stack 0
   184  00FF28                     __end_of__initialization:
   185                           	opt stack 0
   186  00FF28  0100               	movlb	0
   187  00FF2A  EF97  F07F         	goto	_main	;jump to C main() function
   188                           status	equ	0xFD8
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	opt stack 0
   193  000001                     ??_main:
   194                           
   195                           ; 0 bytes @ 0x0
   196  000001                     	ds	5
   197  000006                     main@sendInterval:
   198                           	opt stack 0
   199                           
   200                           ; 4 bytes @ 0x5
   201  000006                     	ds	4
   202  00000A                     main@getInterval:
   203                           	opt stack 0
   204                           
   205                           ; 4 bytes @ 0x9
   206  00000A                     	ds	4
   207  00000E                     main@gpsInterval:
   208                           	opt stack 0
   209                           
   210                           ; 4 bytes @ 0xD
   211  00000E                     	ds	4
   212  000012                     main@prevSendDataTime:
   213                           	opt stack 0
   214                           
   215                           ; 4 bytes @ 0x11
   216  000012                     	ds	4
   217  000016                     main@prevGetDataTime:
   218                           	opt stack 0
   219                           
   220                           ; 4 bytes @ 0x15
   221  000016                     	ds	4
   222  00001A                     main@prevReadGPSTime:
   223                           	opt stack 0
   224                           
   225                           ; 4 bytes @ 0x19
   226  00001A                     	ds	4
   227  00001E                     main@currTime:
   228                           	opt stack 0
   229                           
   230                           ; 4 bytes @ 0x1D
   231  00001E                     	ds	4
   232                           status	equ	0xFD8
   233                           status	equ	0xFD8
   234                           
   235                           	psect	rparam
   236  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33      33
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0     180
                                              0 COMRAM    33    33      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     21      21       1       26.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Oct 08 23:29:48 2013

                      l3 FF2E      main@prevReadGPSTime 001A                      l591 FF74  
                    l595 FFBA                     _main FF2E                     start 0000  
                  ?_main 0001             main@currTime 001E                    status 000FD8  
        __initialization FF28             __end_of_main 0000                   ??_main 0001  
          __activetblptr 000000     main@prevSendDataTime 0012               __accesstop 0080  
__end_of__initialization FF28           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit FF28                  __ramtop 1000  
                __ptext0 FF2E     end_of_initialization FF28      start_initialization FF28  
        main@getInterval 000A         main@sendInterval 0006          main@gpsInterval 000E  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00D2  
    main@prevGetDataTime 0016  
