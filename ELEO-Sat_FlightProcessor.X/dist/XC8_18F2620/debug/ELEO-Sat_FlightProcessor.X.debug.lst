

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Nov 06 23:00:26 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     _ADCON0	set	4034
    31  0000                     _ADCON0bits	set	4034
    32  0000                     _ADCON1	set	4033
    33  0000                     _ADCON2	set	4032
    34  0000                     _ADRESH	set	4036
    35  0000                     _ADRESL	set	4035
    36  0000                     _INTCONbits	set	4082
    37  0000                     _IPR1bits	set	3999
    38  0000                     _PIE1bits	set	3997
    39  0000                     _PIR1bits	set	3998
    40  0000                     _PORTB	set	3969
    41  0000                     _PORTBbits	set	3969
    42  0000                     _RCONbits	set	4048
    43  0000                     _RCREG	set	4014
    44  0000                     _RCSTA	set	4011
    45  0000                     _RCSTAbits	set	4011
    46  0000                     _SPBRG	set	4015
    47  0000                     _SPBRGH	set	4016
    48  0000                     _SSPBUF	set	4041
    49  0000                     _SSPCON1	set	4038
    50  0000                     _SSPCON1bits	set	4038
    51  0000                     _SSPSTAT	set	4039
    52  0000                     _SSPSTATbits	set	4039
    53  0000                     _T0CON	set	4053
    54  0000                     _T0CONbits	set	4053
    55  0000                     _TMR0H	set	4055
    56  0000                     _TMR0L	set	4054
    57  0000                     _TRISA	set	3986
    58  0000                     _TRISAbits	set	3986
    59  0000                     _TRISB	set	3987
    60  0000                     _TRISCbits	set	3988
    61  0000                     _TXSTA	set	4012
    62  0000                     _TXSTAbits	set	4012
    63                           
    64 ;; *************** function _low_isr *****************
    65 ;; Defined at:
    66 ;;		line 73 in file "interrupts.c"
    67 ;; Parameters:    Size  Location     Type
    68 ;;		None
    69 ;; Auto vars:     Size  Location     Type
    70 ;;		None
    71 ;; Return value:  Size  Location     Type
    72 ;;		None               void
    73 ;; Registers used:
    74 ;;		None
    75 ;; Tracked objects:
    76 ;;		On entry : 0/0
    77 ;;		On exit  : 0/0
    78 ;;		Unchanged: 0/0
    79 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    80 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    81 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    82 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    83 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    84 ;;Total ram usage:       17 bytes
    85 ;; Hardware stack levels used:    1
    86 ;; Hardware stack levels required when called:    3
    87 ;; This function calls:
    88 ;;		Nothing
    89 ;; This function is called by:
    90 ;;		Interrupt level 1
    91 ;; This function uses a non-reentrant model
    92 ;;
    93                           
    94                           	psect	intcodelo
    95  000018                     __pintcodelo:
    96                           	opt stack 0
    97                           
    98                           ; #config settings
    99  000018                     _low_isr:
   100                           	opt stack 23
   101                           
   102                           ;incstack = 0
   103  000018  CFD8 F001          	movff	status,??_low_isr
   104  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   105  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   106  000024  CFFA F004          	movff	pclath,??_low_isr+3
   107  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   108  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   109  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   110  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   111  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   112  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   113  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   114  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   115  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   116  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   117  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   118  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   119  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   120  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
   121  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
   122  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   123  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   124  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
   125  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
   126  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   127  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   128  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
   129  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
   130  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
   131  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
   132  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
   133  000090  C004  FFFA         	movff	??_low_isr+3,pclath
   134  000094  C003  FFE0         	movff	??_low_isr+2,bsr
   135  000098  C002  FFE8         	movff	??_low_isr+1,wreg
   136  00009C  C001  FFD8         	movff	??_low_isr,status
   137  0000A0  0010               	retfie	
   138  0000A2                     __end_of_low_isr:
   139                           	opt stack 0
   140                           pclatu	equ	0xFFB
   141                           pclath	equ	0xFFA
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           prodh	equ	0xFF4
   147                           prodl	equ	0xFF3
   148                           fsr0h	equ	0xFEA
   149                           fsr0l	equ	0xFE9
   150                           wreg	equ	0xFE8
   151                           fsr1h	equ	0xFE2
   152                           fsr1l	equ	0xFE1
   153                           bsr	equ	0xFE0
   154                           fsr2h	equ	0xFDA
   155                           fsr2l	equ	0xFD9
   156                           status	equ	0xFD8
   157                           
   158                           	psect	cinit
   159  0003A6                     __pcinit:
   160                           	opt stack 0
   161  0003A6                     start_initialization:
   162                           	opt stack 0
   163  0003A6                     __initialization:
   164                           	opt stack 0
   165                           
   166                           ; Clear objects allocated to COMRAM (51 bytes)
   167  0003A6  EE00  F035         	lfsr	0,__pbssCOMRAM
   168  0003AA  0E33               	movlw	51
   169  0003AC                     clear_0:
   170  0003AC  6AEE               	clrf	postinc0,c
   171  0003AE  06E8               	decf	wreg,f,c
   172  0003B0  E1FD               	bnz	clear_0
   173  0003B2                     end_of_initialization:
   174                           	opt stack 0
   175  0003B2                     __end_of__initialization:
   176                           	opt stack 0
   177  0003B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  0003B4  6EF8               	movwf	tblptru,c
   179  0003B6  0100               	movlb	0
   180  0003B8  EFAF  F000         	goto	_main	;jump to C main() function
   181                           pclatu	equ	0xFFB
   182                           pclath	equ	0xFFA
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           prodh	equ	0xFF4
   188                           prodl	equ	0xFF3
   189                           postinc0	equ	0xFEE
   190                           fsr0h	equ	0xFEA
   191                           fsr0l	equ	0xFE9
   192                           wreg	equ	0xFE8
   193                           fsr1h	equ	0xFE2
   194                           fsr1l	equ	0xFE1
   195                           bsr	equ	0xFE0
   196                           fsr2h	equ	0xFDA
   197                           fsr2l	equ	0xFD9
   198                           status	equ	0xFD8
   199                           
   200                           	psect	bssCOMRAM
   201  000035                     __pbssCOMRAM:
   202                           	opt stack 0
   203  000035                     _sendBuff:
   204                           	opt stack 0
   205  000035                     	ds	41
   206  00005E                     _USART_Status:
   207                           	opt stack 0
   208  00005E                     	ds	1
   209  00005F                     _pollRecv:
   210                           	opt stack 0
   211  00005F                     	ds	1
   212  000060                     _recvIdx:
   213                           	opt stack 0
   214  000060                     	ds	1
   215  000061                     _sendIdx:
   216                           	opt stack 0
   217  000061                     	ds	1
   218  000062                     _recvBuff:
   219                           	opt stack 0
   220  000062                     	ds	6
   221                           pclatu	equ	0xFFB
   222                           pclath	equ	0xFFA
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           prodh	equ	0xFF4
   228                           prodl	equ	0xFF3
   229                           postinc0	equ	0xFEE
   230                           fsr0h	equ	0xFEA
   231                           fsr0l	equ	0xFE9
   232                           wreg	equ	0xFE8
   233                           fsr1h	equ	0xFE2
   234                           fsr1l	equ	0xFE1
   235                           bsr	equ	0xFE0
   236                           fsr2h	equ	0xFDA
   237                           fsr2l	equ	0xFD9
   238                           status	equ	0xFD8
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	opt stack 0
   243  000001                     ??_low_isr:
   244  000001                     
   245                           ; 1 bytes @ 0x0
   246  000001                     	ds	17
   247  000012                     ReadUSART@data:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x11
   251  000012                     	ds	1
   252  000013                     ?_getsUSART:
   253                           	opt stack 0
   254  000013                     getsUSART@buffer:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x12
   258  000013                     	ds	2
   259  000015                     getsUSART@len:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x14
   263  000015                     	ds	1
   264  000016                     ??_getsUSART:
   265                           
   266                           ; 0 bytes @ 0x15
   267  000016                     	ds	1
   268  000017                     getsUSART@data:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x16
   272  000017                     	ds	1
   273  000018                     getsUSART@i:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x17
   277  000018                     	ds	1
   278  000019                     ??_high_isr:
   279                           
   280                           ; 0 bytes @ 0x18
   281  000019                     	ds	15
   282  000028                     ?_OpenADC:
   283                           	opt stack 0
   284  000028                     ?_OpenTimer0:
   285                           	opt stack 0
   286  000028                     ?_OpenSPI:
   287                           	opt stack 0
   288  000028                     ?_WriteSPI:
   289                           	opt stack 0
   290  000028                     ?_ReadADC:
   291                           	opt stack 0
   292  000028                     OpenADC@config:
   293                           	opt stack 0
   294  000028                     OpenSPI@sync_mode:
   295                           	opt stack 0
   296  000028                     ReadSPI@TempVar:
   297                           	opt stack 0
   298  000028                     WriteSPI@data_out:
   299                           	opt stack 0
   300  000028                     OpenTimer0@config:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x27
   304  000028                     	ds	1
   305  000029                     ?_recvSPI:
   306                           	opt stack 0
   307  000029                     OpenADC@config2:
   308                           	opt stack 0
   309  000029                     OpenSPI@bus_mode:
   310                           	opt stack 0
   311  000029                     WriteSPI@TempVar:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x28
   315  000029                     	ds	1
   316  00002A                     ?_sendSPI:
   317                           	opt stack 0
   318  00002A                     sendSPI@slave:
   319                           	opt stack 0
   320  00002A                     OpenADC@portconfig:
   321                           	opt stack 0
   322  00002A                     OpenSPI@smp_phase:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x29
   326  00002A                     	ds	1
   327  00002B                     ??_OpenADC:
   328  00002B                     ??_setupSPI:
   329  00002B                     sendSPI@command:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x2A
   333  00002B                     	ds	1
   334  00002C                     ??_sendSPI:
   335                           
   336                           ; 0 bytes @ 0x2B
   337  00002C                     	ds	1
   338  00002D                     sendSPI@retval:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x2C
   342  00002D                     	ds	1
   343  00002E                     ??_InitApp:
   344                           
   345                           ; 0 bytes @ 0x2D
   346  00002E                     	ds	3
   347  000031                     ??_main:
   348                           
   349                           ; 0 bytes @ 0x30
   350  000031                     	ds	2
   351  000033                     main@aval:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x32
   355  000033                     	ds	2
   356                           pclatu	equ	0xFFB
   357                           pclath	equ	0xFFA
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           prodh	equ	0xFF4
   363                           prodl	equ	0xFF3
   364                           postinc0	equ	0xFEE
   365                           fsr0h	equ	0xFEA
   366                           fsr0l	equ	0xFE9
   367                           wreg	equ	0xFE8
   368                           fsr1h	equ	0xFE2
   369                           fsr1l	equ	0xFE1
   370                           bsr	equ	0xFE0
   371                           fsr2h	equ	0xFDA
   372                           fsr2l	equ	0xFD9
   373                           status	equ	0xFD8
   374                           
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 38 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  aval            2   50[COMRAM] unsigned int 
   385 ;; Return value:  Size  Location     Type
   386 ;;		None               void
   387 ;; Registers used:
   388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;Total ram usage:        4 bytes
   399 ;; Hardware stack levels required when called:    7
   400 ;; This function calls:
   401 ;;		_ConfigureOscillator
   402 ;;		_InitApp
   403 ;;		_sendSPI
   404 ;;		_ConvertADC
   405 ;;		_BusyADC
   406 ;;		_ReadADC
   407 ;;		_recvSPI
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text0
   414  00015E                     __ptext0:
   415                           	opt stack 0
   416  00015E                     _main:
   417                           	opt stack 23
   418                           
   419                           ;main.c: 40: ConfigureOscillator();
   420                           
   421                           ;incstack = 0
   422                           ;incstack = 0
   423  00015E  ECFA  F001         	call	_ConfigureOscillator	;wreg free
   424                           
   425                           ;main.c: 43: InitApp();
   426  000162  EC43  F001         	call	_InitApp	;wreg free
   427  000166                     l53:
   428                           
   429                           ;main.c: 53: {
   430                           ;main.c: 55: sendSPI(Power, switch1_on);
   431  000166  6E31               	movwf	??_main& (0+255),c
   432  000168  0E00               	movlw	0
   433  00016A  6E2A               	movwf	?_sendSPI,c
   434  00016C  5031               	movf	??_main& (0+255),w,c
   435  00016E  6E32               	movwf	(??_main+1)& (0+255),c
   436  000170  0E03               	movlw	3
   437  000172  6E2B               	movwf	?_sendSPI+1,c
   438  000174  5032               	movf	(??_main+1)& (0+255),w,c
   439  000176  EC7F  F001         	call	_sendSPI	;wreg free
   440                           
   441                           ;main.c: 56: _delay((unsigned long)((1)*(20000000/4000.0)));
   442  00017A  0E07               	movlw	7
   443  00017C  6E31               	movwf	??_main& (0+255),c
   444  00017E  0E7D               	movlw	125
   445  000180                     u237:
   446  000180  2EE8               	decfsz	wreg,f,c
   447  000182  D7FE               	goto	u237
   448  000184  2E31               	decfsz	??_main& (0+255),f,c
   449  000186  D7FC               	goto	u237
   450                           
   451                           ;main.c: 58: ConvertADC();
   452  000188  ECF8  F001         	call	_ConvertADC	;wreg free
   453  00018C                     l923:
   454  00018C  ECF2  F001         	call	_BusyADC	;wreg free
   455  000190  0900               	iorlw	0
   456  000192  A4D8               	btfss	status,2,c
   457  000194  D7FB               	goto	l923
   458                           
   459                           ;main.c: 60: unsigned int aval = ReadADC();
   460  000196  ECED  F001         	call	_ReadADC	;wreg free
   461  00019A  C028  F033         	movff	?_ReadADC,main@aval
   462  00019E  C029  F034         	movff	?_ReadADC+1,main@aval+1
   463                           
   464                           ;main.c: 62: if(aval > 128)
   465  0001A2  0E81               	movlw	129
   466  0001A4  5C33               	subwf	main@aval,w,c
   467  0001A6  0E00               	movlw	0
   468  0001A8  5834               	subwfb	main@aval+1,w,c
   469  0001AA  A0D8               	btfss	status,0,c
   470  0001AC  D002               	goto	l57
   471                           
   472                           ;main.c: 63: PORTBbits.RB0 = 1;
   473  0001AE  8081               	bsf	3969,0,c	;volatile
   474  0001B0  D001               	goto	l931
   475  0001B2                     l57:
   476                           
   477                           ;main.c: 64: else
   478                           ;main.c: 65: PORTBbits.RB0 = 0;
   479  0001B2  9081               	bcf	3969,0,c	;volatile
   480  0001B4                     l931:
   481                           
   482                           ;main.c: 67: recvSPI(Power);
   483  0001B4  6E31               	movwf	??_main& (0+255),c
   484  0001B6  0E00               	movlw	0
   485  0001B8  6E29               	movwf	?_recvSPI,c
   486  0001BA  5031               	movf	??_main& (0+255),w,c
   487  0001BC  ECE7  F001         	call	_recvSPI	;wreg free
   488                           
   489                           ;main.c: 68: _delay((unsigned long)((10)*(20000000/4000.0)));
   490  0001C0  0E41               	movlw	65
   491  0001C2  6E31               	movwf	??_main& (0+255),c
   492  0001C4  0EEE               	movlw	238
   493  0001C6                     u247:
   494  0001C6  2EE8               	decfsz	wreg,f,c
   495  0001C8  D7FE               	goto	u247
   496  0001CA  2E31               	decfsz	??_main& (0+255),f,c
   497  0001CC  D7FC               	goto	u247
   498  0001CE  F000               	nop	
   499  0001D0  D7CA               	goto	l53
   500  0001D2                     __end_of_main:
   501                           	opt stack 0
   502                           pclatu	equ	0xFFB
   503                           pclath	equ	0xFFA
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           prodh	equ	0xFF4
   509                           prodl	equ	0xFF3
   510                           postinc0	equ	0xFEE
   511                           fsr0h	equ	0xFEA
   512                           fsr0l	equ	0xFE9
   513                           wreg	equ	0xFE8
   514                           fsr1h	equ	0xFE2
   515                           fsr1l	equ	0xFE1
   516                           bsr	equ	0xFE0
   517                           fsr2h	equ	0xFDA
   518                           fsr2l	equ	0xFD9
   519                           status	equ	0xFD8
   520                           
   521 ;; *************** function _recvSPI *****************
   522 ;; Defined at:
   523 ;;		line 69 in file "spi_comm.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  slave           1   40[COMRAM] enum E3674
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      unsigned char 
   530 ;; Registers used:
   531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;Total ram usage:        1 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    5
   544 ;; This function calls:
   545 ;;		_ReadSPI
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text1
   552  0003CE                     __ptext1:
   553                           	opt stack 0
   554  0003CE                     _recvSPI:
   555                           	opt stack 24
   556                           
   557                           ;spi_comm.c: 70: (PORTBbits.RB0 = 0);
   558                           
   559                           ;incstack = 0
   560                           ;incstack = 0
   561  0003CE  9081               	bcf	3969,0,c	;volatile
   562                           
   563                           ;spi_comm.c: 73: ReadSPI();
   564  0003D0  ECDE  F001         	call	_ReadSPI	;wreg free
   565                           
   566                           ;spi_comm.c: 74: (PORTBbits.RB0 = 1);
   567  0003D4  8081               	bsf	3969,0,c	;volatile
   568                           
   569                           ;spi_comm.c: 75: return SSPBUF;
   570                           ;	Return value of _recvSPI is never used
   571  0003D6  50C9               	movf	4041,w,c	;volatile
   572  0003D8  0012               	return	
   573  0003DA                     __end_of_recvSPI:
   574                           	opt stack 0
   575                           pclatu	equ	0xFFB
   576                           pclath	equ	0xFFA
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           prodh	equ	0xFF4
   582                           prodl	equ	0xFF3
   583                           postinc0	equ	0xFEE
   584                           fsr0h	equ	0xFEA
   585                           fsr0l	equ	0xFE9
   586                           wreg	equ	0xFE8
   587                           fsr1h	equ	0xFE2
   588                           fsr1l	equ	0xFE1
   589                           bsr	equ	0xFE0
   590                           fsr2h	equ	0xFDA
   591                           fsr2l	equ	0xFD9
   592                           status	equ	0xFD8
   593                           
   594 ;; *************** function _ReadSPI *****************
   595 ;; Defined at:
   596 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_read.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  TempVar         1   39[COMRAM] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      unsigned char 
   603 ;; Registers used:
   604 ;;		wreg, status,2
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;Total ram usage:        1 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    4
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_recvSPI
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text2
   625  0003BC                     __ptext2:
   626                           	opt stack 0
   627  0003BC                     _ReadSPI:
   628                           	opt stack 24
   629                           
   630                           ;incstack = 0
   631                           ;incstack = 0
   632  0003BC  CFC9 F028          	movff	4041,ReadSPI@TempVar	;volatile
   633  0003C0  969E               	bcf	3998,3,c	;volatile
   634  0003C2  0E00               	movlw	0
   635  0003C4  6EC9               	movwf	4041,c	;volatile
   636  0003C6                     l214:
   637  0003C6  A69E               	btfss	3998,3,c	;volatile
   638  0003C8  D7FE               	goto	l214
   639                           
   640                           ;	Return value of _ReadSPI is never used
   641  0003CA  50C9               	movf	4041,w,c	;volatile
   642  0003CC  0012               	return	
   643  0003CE                     __end_of_ReadSPI:
   644                           	opt stack 0
   645                           pclatu	equ	0xFFB
   646                           pclath	equ	0xFFA
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           prodh	equ	0xFF4
   652                           prodl	equ	0xFF3
   653                           postinc0	equ	0xFEE
   654                           fsr0h	equ	0xFEA
   655                           fsr0l	equ	0xFE9
   656                           wreg	equ	0xFE8
   657                           fsr1h	equ	0xFE2
   658                           fsr1l	equ	0xFE1
   659                           bsr	equ	0xFE0
   660                           fsr2h	equ	0xFDA
   661                           fsr2l	equ	0xFD9
   662                           status	equ	0xFD8
   663                           
   664 ;; *************** function _ReadADC *****************
   665 ;; Defined at:
   666 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcread.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2   39[COMRAM] int 
   673 ;; Registers used:
   674 ;;		wreg, status,2
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        2 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    4
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text3
   695  0003DA                     __ptext3:
   696                           	opt stack 0
   697  0003DA                     _ReadADC:
   698                           	opt stack 25
   699                           
   700                           ;incstack = 0
   701                           ;incstack = 0
   702  0003DA  50C4               	movf	4036,w,c	;volatile
   703  0003DC  6E29               	movwf	?_ReadADC+1,c
   704  0003DE  50C3               	movf	4035,w,c	;volatile
   705  0003E0  6E28               	movwf	?_ReadADC,c
   706  0003E2  0012               	return	
   707  0003E4                     __end_of_ReadADC:
   708                           	opt stack 0
   709                           pclatu	equ	0xFFB
   710                           pclath	equ	0xFFA
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           prodh	equ	0xFF4
   716                           prodl	equ	0xFF3
   717                           postinc0	equ	0xFEE
   718                           fsr0h	equ	0xFEA
   719                           fsr0l	equ	0xFE9
   720                           wreg	equ	0xFE8
   721                           fsr1h	equ	0xFE2
   722                           fsr1l	equ	0xFE1
   723                           bsr	equ	0xFE0
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8
   727                           
   728 ;; *************** function _BusyADC *****************
   729 ;; Defined at:
   730 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcbusy.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      unsigned char 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    4
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text4
   759  0003E4                     __ptext4:
   760                           	opt stack 0
   761  0003E4                     _BusyADC:
   762                           	opt stack 25
   763                           
   764                           ;incstack = 0
   765                           ;incstack = 0
   766  0003E4  30C2               	rrcf	4034,w,c	;volatile
   767  0003E6  0B01               	andlw	1
   768  0003E8  0012               	return	
   769  0003EA                     __end_of_BusyADC:
   770                           	opt stack 0
   771                           pclatu	equ	0xFFB
   772                           pclath	equ	0xFFA
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           prodh	equ	0xFF4
   778                           prodl	equ	0xFF3
   779                           postinc0	equ	0xFEE
   780                           fsr0h	equ	0xFEA
   781                           fsr0l	equ	0xFE9
   782                           wreg	equ	0xFE8
   783                           fsr1h	equ	0xFE2
   784                           fsr1l	equ	0xFE1
   785                           bsr	equ	0xFE0
   786                           fsr2h	equ	0xFDA
   787                           fsr2l	equ	0xFD9
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function _ConvertADC *****************
   791 ;; Defined at:
   792 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		None
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    4
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text5
   821  0003F0                     __ptext5:
   822                           	opt stack 0
   823  0003F0                     _ConvertADC:
   824                           	opt stack 25
   825                           
   826                           ;incstack = 0
   827                           ;incstack = 0
   828  0003F0  82C2               	bsf	4034,1,c	;volatile
   829  0003F2  0012               	return	
   830  0003F4                     __end_of_ConvertADC:
   831                           	opt stack 0
   832                           pclatu	equ	0xFFB
   833                           pclath	equ	0xFFA
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           prodh	equ	0xFF4
   839                           prodl	equ	0xFF3
   840                           postinc0	equ	0xFEE
   841                           fsr0h	equ	0xFEA
   842                           fsr0l	equ	0xFE9
   843                           wreg	equ	0xFE8
   844                           fsr1h	equ	0xFE2
   845                           fsr1l	equ	0xFE1
   846                           bsr	equ	0xFE0
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function _sendSPI *****************
   852 ;; Defined at:
   853 ;;		line 42 in file "spi_comm.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  slave           1   41[COMRAM] enum E3674
   856 ;;  command         1   42[COMRAM] enum E3679
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  retval          1   44[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;Total ram usage:        4 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    5
   875 ;; This function calls:
   876 ;;		_WriteSPI
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text6
   883  0002FE                     __ptext6:
   884                           	opt stack 0
   885  0002FE                     _sendSPI:
   886                           	opt stack 24
   887                           
   888                           ;spi_comm.c: 43: char retval = 0x00;
   889                           
   890                           ;incstack = 0
   891                           ;incstack = 0
   892  0002FE  6E2C               	movwf	??_sendSPI& (0+255),c
   893  000300  0E00               	movlw	0
   894  000302  6E2D               	movwf	sendSPI@retval,c
   895  000304  502C               	movf	??_sendSPI& (0+255),w,c
   896                           
   897                           ;spi_comm.c: 45: switch(slave)
   898  000306  D00A               	goto	l957
   899  000308                     l108:
   900                           
   901                           ;spi_comm.c: 50: (PORTBbits.RB0 = 0);
   902  000308  9081               	bcf	3969,0,c	;volatile
   903  00030A                     l953:
   904  00030A  C02B  F028         	movff	sendSPI@command,?_WriteSPI
   905  00030E  ECC5  F001         	call	_WriteSPI	;wreg free
   906  000312  0900               	iorlw	0
   907  000314  A4D8               	btfss	status,2,c
   908  000316  D7F9               	goto	l953
   909                           
   910                           ;spi_comm.c: 57: (PORTBbits.RB0 = 1);
   911  000318  8081               	bsf	3969,0,c	;volatile
   912                           
   913                           ;spi_comm.c: 58: break;
   914  00031A  D007               	goto	l115
   915  00031C                     l957:
   916  00031C  502A               	movf	sendSPI@slave,w,c
   917                           
   918                           ; Switch size 1, requested type "space"
   919                           ; Number of cases is 3, Range of values is 0 to 2
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte           10     6 (average)
   923                           ;	Chosen strategy is simple_byte
   924  00031E  0A00               	xorlw	0	; case 0
   925  000320  B4D8               	btfsc	status,2,c
   926  000322  D7F2               	goto	l108
   927  000324  0A01               	xorlw	1	; case 1
   928  000326  A4D8               	btfss	status,2,c
   929  000328  0A03               	xorlw	3	; case 2
   930  00032A                     l115:
   931  00032A  0012               	return	
   932  00032C                     __end_of_sendSPI:
   933                           	opt stack 0
   934                           pclatu	equ	0xFFB
   935                           pclath	equ	0xFFA
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           prodh	equ	0xFF4
   941                           prodl	equ	0xFF3
   942                           postinc0	equ	0xFEE
   943                           fsr0h	equ	0xFEA
   944                           fsr0l	equ	0xFE9
   945                           wreg	equ	0xFE8
   946                           fsr1h	equ	0xFE2
   947                           fsr1l	equ	0xFE1
   948                           bsr	equ	0xFE0
   949                           fsr2h	equ	0xFDA
   950                           fsr2l	equ	0xFD9
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _WriteSPI *****************
   954 ;; Defined at:
   955 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_writ.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  data_out        1   39[COMRAM] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  TempVar         1   40[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      char 
   962 ;; Registers used:
   963 ;;		wreg
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    4
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_sendSPI
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text7
   984  00038A                     __ptext7:
   985                           	opt stack 0
   986  00038A                     _WriteSPI:
   987                           	opt stack 24
   988                           
   989                           ;incstack = 0
   990                           ;incstack = 0
   991  00038A  CFC9 F029          	movff	4041,WriteSPI@TempVar	;volatile
   992  00038E  969E               	bcf	3998,3,c	;volatile
   993  000390  9EC6               	bcf	4038,7,c	;volatile
   994  000392  C028  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   995  000396  AEC6               	btfss	4038,7,c	;volatile
   996  000398  D002               	goto	l231
   997  00039A  0EFF               	movlw	255
   998  00039C  D003               	goto	l229
   999  00039E                     l231:
  1000  00039E  A69E               	btfss	3998,3,c	;volatile
  1001  0003A0  D7FE               	goto	l231
  1002  0003A2  0E00               	movlw	0
  1003  0003A4                     l229:
  1004  0003A4  0012               	return	
  1005  0003A6                     __end_of_WriteSPI:
  1006                           	opt stack 0
  1007                           pclatu	equ	0xFFB
  1008                           pclath	equ	0xFFA
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           prodh	equ	0xFF4
  1014                           prodl	equ	0xFF3
  1015                           postinc0	equ	0xFEE
  1016                           fsr0h	equ	0xFEA
  1017                           fsr0l	equ	0xFE9
  1018                           wreg	equ	0xFE8
  1019                           fsr1h	equ	0xFE2
  1020                           fsr1l	equ	0xFE1
  1021                           bsr	equ	0xFE0
  1022                           fsr2h	equ	0xFDA
  1023                           fsr2l	equ	0xFD9
  1024                           status	equ	0xFD8
  1025                           
  1026 ;; *************** function _InitApp *****************
  1027 ;; Defined at:
  1028 ;;		line 31 in file "user.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;		None               void
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;Total ram usage:        3 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    6
  1049 ;; This function calls:
  1050 ;;		_CloseADC
  1051 ;;		_OpenADC
  1052 ;;		_setupSPI
  1053 ;;		_OpenTimer0
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text8
  1060  000286                     __ptext8:
  1061                           	opt stack 0
  1062  000286                     _InitApp:
  1063                           	opt stack 23
  1064                           
  1065                           ;user.c: 35: ADCON1 = 0b00001010;
  1066                           
  1067                           ;incstack = 0
  1068                           ;incstack = 0
  1069  000286  0E0A               	movlw	10
  1070  000288  6EC1               	movwf	4033,c	;volatile
  1071                           
  1072                           ;user.c: 36: TRISA = 0b00000001;
  1073  00028A  0E01               	movlw	1
  1074  00028C  6E92               	movwf	3986,c	;volatile
  1075                           
  1076                           ;user.c: 37: TRISB = 0b00000000;
  1077  00028E  0E00               	movlw	0
  1078  000290  6E93               	movwf	3987,c	;volatile
  1079                           
  1080                           ;user.c: 38: PORTB = 0x00;
  1081  000292  0E00               	movlw	0
  1082  000294  6E81               	movwf	3969,c	;volatile
  1083                           
  1084                           ;user.c: 39: PORTBbits.RB0 = 1;
  1085  000296  8081               	bsf	3969,0,c	;volatile
  1086                           
  1087                           ;user.c: 42: CloseADC();
  1088  000298  ECF5  F001         	call	_CloseADC	;wreg free
  1089                           
  1090                           ;user.c: 43: OpenADC(0b11011111 & 0b11110011 & 0b11111111,
  1091                           ;user.c: 44: 0b10000111 & 0b01111111 & 0b11111100,
  1092                           ;user.c: 45: 0b11111111);
  1093  00029C  6E2E               	movwf	??_InitApp& (0+255),c
  1094  00029E  0ED3               	movlw	211
  1095  0002A0  6E28               	movwf	?_OpenADC,c
  1096  0002A2  502E               	movf	??_InitApp& (0+255),w,c
  1097  0002A4  6E2F               	movwf	(??_InitApp+1)& (0+255),c
  1098  0002A6  0E04               	movlw	4
  1099  0002A8  6E29               	movwf	?_OpenADC+1,c
  1100  0002AA  502F               	movf	(??_InitApp+1)& (0+255),w,c
  1101  0002AC  6E30               	movwf	(??_InitApp+2)& (0+255),c
  1102  0002AE  0EFF               	movlw	255
  1103  0002B0  6E2A               	movwf	?_OpenADC+2,c
  1104  0002B2  5030               	movf	(??_InitApp+2)& (0+255),w,c
  1105  0002B4  ECE9  F000         	call	_OpenADC	;wreg free
  1106                           
  1107                           ;user.c: 47: setupSPI();
  1108  0002B8  EC96  F001         	call	_setupSPI	;wreg free
  1109                           
  1110                           ;user.c: 52: OpenTimer0(0b01111111 & 0b10111111 & 0b11011111 & 0b11110111);
  1111  0002BC  6E2E               	movwf	??_InitApp& (0+255),c
  1112  0002BE  0E17               	movlw	23
  1113  0002C0  6E28               	movwf	?_OpenTimer0,c
  1114  0002C2  502E               	movf	??_InitApp& (0+255),w,c
  1115  0002C4  ECA7  F001         	call	_OpenTimer0	;wreg free
  1116                           
  1117                           ;user.c: 57: RCONbits.IPEN = 1;
  1118  0002C8  8ED0               	bsf	4048,7,c	;volatile
  1119                           
  1120                           ;user.c: 59: (INTCONbits.GIE = 1);
  1121  0002CA  8EF2               	bsf	intcon,7,c	;volatile
  1122  0002CC  0012               	return	
  1123  0002CE                     __end_of_InitApp:
  1124                           	opt stack 0
  1125                           pclatu	equ	0xFFB
  1126                           pclath	equ	0xFFA
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           prodh	equ	0xFF4
  1132                           prodl	equ	0xFF3
  1133                           intcon	equ	0xFF2
  1134                           postinc0	equ	0xFEE
  1135                           fsr0h	equ	0xFEA
  1136                           fsr0l	equ	0xFE9
  1137                           wreg	equ	0xFE8
  1138                           fsr1h	equ	0xFE2
  1139                           fsr1l	equ	0xFE1
  1140                           bsr	equ	0xFE0
  1141                           fsr2h	equ	0xFDA
  1142                           fsr2l	equ	0xFD9
  1143                           status	equ	0xFD8
  1144                           
  1145 ;; *************** function _OpenTimer0 *****************
  1146 ;; Defined at:
  1147 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  config          1   39[COMRAM] unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;		None               void
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1161 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;Total ram usage:        1 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    4
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_InitApp
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text9
  1176  00034E                     __ptext9:
  1177                           	opt stack 0
  1178  00034E                     _OpenTimer0:
  1179                           	opt stack 24
  1180                           
  1181                           ;incstack = 0
  1182                           ;incstack = 0
  1183  00034E  5028               	movf	OpenTimer0@config,w,c
  1184  000350  0B7F               	andlw	127
  1185  000352  6ED5               	movwf	4053,c	;volatile
  1186  000354  0E00               	movlw	0
  1187  000356  6ED7               	movwf	4055,c	;volatile
  1188  000358  0E00               	movlw	0
  1189  00035A  6ED6               	movwf	4054,c	;volatile
  1190  00035C  94F2               	bcf	intcon,2,c	;volatile
  1191  00035E  AE28               	btfss	OpenTimer0@config,7,c
  1192  000360  D002               	goto	l246
  1193  000362  8AF2               	bsf	intcon,5,c	;volatile
  1194  000364  D001               	goto	l247
  1195  000366                     l246:
  1196  000366  9AF2               	bcf	intcon,5,c	;volatile
  1197  000368                     l247:
  1198  000368  8ED5               	bsf	4053,7,c	;volatile
  1199  00036A  0012               	return	
  1200  00036C                     __end_of_OpenTimer0:
  1201                           	opt stack 0
  1202                           pclatu	equ	0xFFB
  1203                           pclath	equ	0xFFA
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           prodh	equ	0xFF4
  1209                           prodl	equ	0xFF3
  1210                           intcon	equ	0xFF2
  1211                           postinc0	equ	0xFEE
  1212                           fsr0h	equ	0xFEA
  1213                           fsr0l	equ	0xFE9
  1214                           wreg	equ	0xFE8
  1215                           fsr1h	equ	0xFE2
  1216                           fsr1l	equ	0xFE1
  1217                           bsr	equ	0xFE0
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           status	equ	0xFD8
  1221                           
  1222 ;; *************** function _setupSPI *****************
  1223 ;; Defined at:
  1224 ;;		line 27 in file "spi_comm.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;		None               void
  1231 ;; Registers used:
  1232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        3 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    5
  1245 ;; This function calls:
  1246 ;;		_OpenSPI
  1247 ;; This function is called by:
  1248 ;;		_InitApp
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text10
  1253  00032C                     __ptext10:
  1254                           	opt stack 0
  1255  00032C                     _setupSPI:
  1256                           	opt stack 23
  1257                           
  1258                           ;spi_comm.c: 28: (PORTBbits.RB0 = 1);
  1259                           
  1260                           ;incstack = 0
  1261                           ;incstack = 0
  1262  00032C  8081               	bsf	3969,0,c	;volatile
  1263                           
  1264                           ;spi_comm.c: 29: (SSPCON1 &=0xDF);
  1265  00032E  9AC6               	bcf	4038,5,c	;volatile
  1266                           
  1267                           ;spi_comm.c: 30: OpenSPI(0b00000000 & 0b00000101, 0b00000001, 0b00000000);
  1268  000330  6E2B               	movwf	??_setupSPI& (0+255),c
  1269  000332  0E00               	movlw	0
  1270  000334  6E28               	movwf	?_OpenSPI,c
  1271  000336  502B               	movf	??_setupSPI& (0+255),w,c
  1272  000338  6E2C               	movwf	(??_setupSPI+1)& (0+255),c
  1273  00033A  0E01               	movlw	1
  1274  00033C  6E29               	movwf	?_OpenSPI+1,c
  1275  00033E  502C               	movf	(??_setupSPI+1)& (0+255),w,c
  1276  000340  6E2D               	movwf	(??_setupSPI+2)& (0+255),c
  1277  000342  0E00               	movlw	0
  1278  000344  6E2A               	movwf	?_OpenSPI+2,c
  1279  000346  502D               	movf	(??_setupSPI+2)& (0+255),w,c
  1280  000348  EC17  F001         	call	_OpenSPI	;wreg free
  1281  00034C  0012               	return	
  1282  00034E                     __end_of_setupSPI:
  1283                           	opt stack 0
  1284                           pclatu	equ	0xFFB
  1285                           pclath	equ	0xFFA
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           prodh	equ	0xFF4
  1291                           prodl	equ	0xFF3
  1292                           intcon	equ	0xFF2
  1293                           postinc0	equ	0xFEE
  1294                           fsr0h	equ	0xFEA
  1295                           fsr0l	equ	0xFE9
  1296                           wreg	equ	0xFE8
  1297                           fsr1h	equ	0xFE2
  1298                           fsr1l	equ	0xFE1
  1299                           bsr	equ	0xFE0
  1300                           fsr2h	equ	0xFDA
  1301                           fsr2l	equ	0xFD9
  1302                           status	equ	0xFD8
  1303                           
  1304 ;; *************** function _OpenSPI *****************
  1305 ;; Defined at:
  1306 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_open.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  sync_mode       1   39[COMRAM] unsigned char 
  1309 ;;  bus_mode        1   40[COMRAM] unsigned char 
  1310 ;;  smp_phase       1   41[COMRAM] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;		None               void
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;Total ram usage:        3 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    4
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_setupSPI
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text11
  1337  00022E                     __ptext11:
  1338                           	opt stack 0
  1339  00022E                     _OpenSPI:
  1340                           	opt stack 23
  1341                           
  1342                           ;incstack = 0
  1343                           ;incstack = 0
  1344  00022E  0E3F               	movlw	63
  1345  000230  16C7               	andwf	4039,f,c	;volatile
  1346  000232  0E00               	movlw	0
  1347  000234  6EC6               	movwf	4038,c	;volatile
  1348  000236  5028               	movf	OpenSPI@sync_mode,w,c
  1349  000238  12C6               	iorwf	4038,f,c	;volatile
  1350  00023A  502A               	movf	OpenSPI@smp_phase,w,c
  1351  00023C  12C7               	iorwf	4039,f,c	;volatile
  1352  00023E  D005               	goto	l1021
  1353  000240                     l197:
  1354  000240  8CC7               	bsf	4039,6,c	;volatile
  1355  000242  D015               	goto	l1025
  1356  000244                     l199:
  1357  000244  8CC7               	bsf	4039,6,c	;volatile
  1358  000246                     l200:
  1359  000246  88C6               	bsf	4038,4,c	;volatile
  1360  000248  D012               	goto	l1025
  1361  00024A                     l1021:
  1362  00024A  5029               	movf	OpenSPI@bus_mode,w,c
  1363                           
  1364                           ; Switch size 1, requested type "space"
  1365                           ; Number of cases is 3, Range of values is 0 to 3
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte           10     6 (average)
  1369                           ;	Chosen strategy is simple_byte
  1370  00024C  0A00               	xorlw	0	; case 0
  1371  00024E  B4D8               	btfsc	status,2,c
  1372  000250  D7F7               	goto	l197
  1373  000252  0A02               	xorlw	2	; case 2
  1374  000254  B4D8               	btfsc	status,2,c
  1375  000256  D7F6               	goto	l199
  1376  000258  0A01               	xorlw	1	; case 3
  1377  00025A  B4D8               	btfsc	status,2,c
  1378  00025C  D7F4               	goto	l200
  1379  00025E  D007               	goto	l1025
  1380  000260                     l203:
  1381  000260  8694               	bsf	3988,3,c	;volatile
  1382  000262  8A92               	bsf	3986,5,c	;volatile
  1383  000264  D00C               	goto	l204
  1384  000266                     l205:
  1385  000266  8694               	bsf	3988,3,c	;volatile
  1386  000268  D00A               	goto	l204
  1387  00026A                     l206:
  1388  00026A  9694               	bcf	3988,3,c	;volatile
  1389  00026C  D008               	goto	l204
  1390  00026E                     l1025:
  1391  00026E  5028               	movf	OpenSPI@sync_mode,w,c
  1392                           
  1393                           ; Switch size 1, requested type "space"
  1394                           ; Number of cases is 2, Range of values is 4 to 5
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte            7     4 (average)
  1398                           ;	Chosen strategy is simple_byte
  1399  000270  0A04               	xorlw	4	; case 4
  1400  000272  B4D8               	btfsc	status,2,c
  1401  000274  D7F5               	goto	l203
  1402  000276  0A01               	xorlw	1	; case 5
  1403  000278  B4D8               	btfsc	status,2,c
  1404  00027A  D7F5               	goto	l205
  1405  00027C  D7F6               	goto	l206
  1406  00027E                     l204:
  1407  00027E  8894               	bsf	3988,4,c	;volatile
  1408  000280  9A94               	bcf	3988,5,c	;volatile
  1409  000282  8AC6               	bsf	4038,5,c	;volatile
  1410  000284  0012               	return	
  1411  000286                     __end_of_OpenSPI:
  1412                           	opt stack 0
  1413                           pclatu	equ	0xFFB
  1414                           pclath	equ	0xFFA
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           intcon	equ	0xFF2
  1422                           postinc0	equ	0xFEE
  1423                           fsr0h	equ	0xFEA
  1424                           fsr0l	equ	0xFE9
  1425                           wreg	equ	0xFE8
  1426                           fsr1h	equ	0xFE2
  1427                           fsr1l	equ	0xFE1
  1428                           bsr	equ	0xFE0
  1429                           fsr2h	equ	0xFDA
  1430                           fsr2l	equ	0xFD9
  1431                           status	equ	0xFD8
  1432                           
  1433 ;; *************** function _OpenADC *****************
  1434 ;; Defined at:
  1435 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  config          1   39[COMRAM] unsigned char 
  1438 ;;  config2         1   40[COMRAM] unsigned char 
  1439 ;;  portconfig      1   41[COMRAM] unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;		None               void
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        5 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    4
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_InitApp
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text12
  1466  0001D2                     __ptext12:
  1467                           	opt stack 0
  1468  0001D2                     _OpenADC:
  1469                           	opt stack 24
  1470                           
  1471                           ;incstack = 0
  1472                           ;incstack = 0
  1473  0001D2  0E00               	movlw	0
  1474  0001D4  6EC2               	movwf	4034,c	;volatile
  1475  0001D6  0E00               	movlw	0
  1476  0001D8  6EC0               	movwf	4032,c	;volatile
  1477  0001DA  90D8               	bcf	status,0,c
  1478  0001DC  3029               	rrcf	OpenADC@config2,w,c
  1479  0001DE  0B3C               	andlw	60
  1480  0001E0  6EC2               	movwf	4034,c	;volatile
  1481  0001E2  C029  F02B         	movff	OpenADC@config2,??_OpenADC
  1482  0001E6  3A2B               	swapf	??_OpenADC,f,c
  1483  0001E8  0EF0               	movlw	240
  1484  0001EA  162B               	andwf	??_OpenADC,f,c
  1485  0001EC  0E30               	movlw	48
  1486  0001EE  162B               	andwf	??_OpenADC,f,c
  1487  0001F0  502A               	movf	OpenADC@portconfig,w,c
  1488  0001F2  0B0F               	andlw	15
  1489  0001F4  102B               	iorwf	??_OpenADC,w,c
  1490  0001F6  6EC1               	movwf	4033,c	;volatile
  1491  0001F8  C028  F02B         	movff	OpenADC@config,??_OpenADC
  1492  0001FC  90D8               	bcf	status,0,c
  1493  0001FE  362B               	rlcf	??_OpenADC,f,c
  1494  000200  90D8               	bcf	status,0,c
  1495  000202  362B               	rlcf	??_OpenADC,f,c
  1496  000204  0E38               	movlw	56
  1497  000206  162B               	andwf	??_OpenADC,f,c
  1498  000208  C028  F02C         	movff	OpenADC@config,??_OpenADC+1
  1499  00020C  3A2C               	swapf	??_OpenADC+1,f,c
  1500  00020E  0E0F               	movlw	15
  1501  000210  162C               	andwf	??_OpenADC+1,f,c
  1502  000212  0E07               	movlw	7
  1503  000214  162C               	andwf	??_OpenADC+1,f,c
  1504  000216  5028               	movf	OpenADC@config,w,c
  1505  000218  0B80               	andlw	128
  1506  00021A  102C               	iorwf	??_OpenADC+1,w,c
  1507  00021C  102B               	iorwf	??_OpenADC,w,c
  1508  00021E  6EC0               	movwf	4032,c	;volatile
  1509  000220  AE29               	btfss	OpenADC@config2,7,c
  1510  000222  D003               	goto	l173
  1511  000224  9C9E               	bcf	3998,6,c	;volatile
  1512  000226  8C9D               	bsf	3997,6,c	;volatile
  1513  000228  8CF2               	bsf	intcon,6,c	;volatile
  1514  00022A                     l173:
  1515  00022A  80C2               	bsf	4034,0,c	;volatile
  1516  00022C  0012               	return	
  1517  00022E                     __end_of_OpenADC:
  1518                           	opt stack 0
  1519                           pclatu	equ	0xFFB
  1520                           pclath	equ	0xFFA
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           intcon	equ	0xFF2
  1528                           postinc0	equ	0xFEE
  1529                           fsr0h	equ	0xFEA
  1530                           fsr0l	equ	0xFE9
  1531                           wreg	equ	0xFE8
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           bsr	equ	0xFE0
  1535                           fsr2h	equ	0xFDA
  1536                           fsr2l	equ	0xFD9
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function _CloseADC *****************
  1540 ;; Defined at:
  1541 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcclose.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;		None               void
  1548 ;; Registers used:
  1549 ;;		None
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    4
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_InitApp
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text13
  1570  0003EA                     __ptext13:
  1571                           	opt stack 0
  1572  0003EA                     _CloseADC:
  1573                           	opt stack 24
  1574                           
  1575                           ;incstack = 0
  1576                           ;incstack = 0
  1577  0003EA  90C2               	bcf	4034,0,c	;volatile
  1578  0003EC  9C9D               	bcf	3997,6,c	;volatile
  1579  0003EE  0012               	return	
  1580  0003F0                     __end_of_CloseADC:
  1581                           	opt stack 0
  1582                           pclatu	equ	0xFFB
  1583                           pclath	equ	0xFFA
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           prodh	equ	0xFF4
  1589                           prodl	equ	0xFF3
  1590                           intcon	equ	0xFF2
  1591                           postinc0	equ	0xFEE
  1592                           fsr0h	equ	0xFEA
  1593                           fsr0l	equ	0xFE9
  1594                           wreg	equ	0xFE8
  1595                           fsr1h	equ	0xFE2
  1596                           fsr1l	equ	0xFE1
  1597                           bsr	equ	0xFE0
  1598                           fsr2h	equ	0xFDA
  1599                           fsr2l	equ	0xFD9
  1600                           status	equ	0xFD8
  1601                           
  1602 ;; *************** function _ConfigureOscillator *****************
  1603 ;; Defined at:
  1604 ;;		line 25 in file "system.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;		None               void
  1611 ;; Registers used:
  1612 ;;		None
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;Total ram usage:        0 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    4
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text14
  1633  0003F4                     __ptext14:
  1634                           	opt stack 0
  1635  0003F4                     _ConfigureOscillator:
  1636                           	opt stack 25
  1637                           
  1638                           ;incstack = 0
  1639                           ;incstack = 0
  1640  0003F4  0012               	return	
  1641  0003F6                     __end_of_ConfigureOscillator:
  1642                           	opt stack 0
  1643                           pclatu	equ	0xFFB
  1644                           pclath	equ	0xFFA
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           prodh	equ	0xFF4
  1650                           prodl	equ	0xFF3
  1651                           intcon	equ	0xFF2
  1652                           postinc0	equ	0xFEE
  1653                           fsr0h	equ	0xFEA
  1654                           fsr0l	equ	0xFE9
  1655                           wreg	equ	0xFE8
  1656                           fsr1h	equ	0xFE2
  1657                           fsr1l	equ	0xFE1
  1658                           bsr	equ	0xFE0
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _high_isr *****************
  1664 ;; Defined at:
  1665 ;;		line 38 in file "interrupts.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:       15 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    2
  1686 ;; This function calls:
  1687 ;;		_getsUSART
  1688 ;; This function is called by:
  1689 ;;		Interrupt level 2
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	intcode
  1694  000008                     __pintcode:
  1695                           	opt stack 0
  1696  000008                     _high_isr:
  1697                           	opt stack 23
  1698                           
  1699                           ;incstack = 0
  1700  000008  CFFA F01A          	movff	pclath,??_high_isr+1
  1701  00000C  CFFB F01B          	movff	pclatu,??_high_isr+2
  1702  000010  ED53  F000         	call	int_func,f	;refresh shadow registers
  1703                           pclatu	equ	0xFFB
  1704                           pclath	equ	0xFFA
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           prodh	equ	0xFF4
  1710                           prodl	equ	0xFF3
  1711                           intcon	equ	0xFF2
  1712                           postinc0	equ	0xFEE
  1713                           fsr0h	equ	0xFEA
  1714                           fsr0l	equ	0xFE9
  1715                           wreg	equ	0xFE8
  1716                           fsr1h	equ	0xFE2
  1717                           fsr1l	equ	0xFE1
  1718                           bsr	equ	0xFE0
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           
  1723                           	psect	intcode_body
  1724  0000A6                     __pintcode_body:
  1725                           	opt stack 23
  1726  0000A6                     int_func:
  1727                           	opt stack 23
  1728  0000A6  0006               	pop		; remove dummy address from shadow register refresh
  1729  0000A8  CFE9 F01C          	movff	fsr0l,??_high_isr+3
  1730  0000AC  CFEA F01D          	movff	fsr0h,??_high_isr+4
  1731  0000B0  CFE1 F01E          	movff	fsr1l,??_high_isr+5
  1732  0000B4  CFE2 F01F          	movff	fsr1h,??_high_isr+6
  1733  0000B8  CFD9 F020          	movff	fsr2l,??_high_isr+7
  1734  0000BC  CFDA F021          	movff	fsr2h,??_high_isr+8
  1735  0000C0  CFF3 F022          	movff	prodl,??_high_isr+9
  1736  0000C4  CFF4 F023          	movff	prodh,??_high_isr+10
  1737  0000C8  CFF6 F024          	movff	tblptrl,??_high_isr+11
  1738  0000CC  CFF7 F025          	movff	tblptrh,??_high_isr+12
  1739  0000D0  CFF8 F026          	movff	tblptru,??_high_isr+13
  1740  0000D4  CFF5 F027          	movff	tablat,??_high_isr+14
  1741  0000D8                     
  1742                           ;interrupts.c: 50: if((PIR1bits.RCIF))
  1743  0000D8  AA9E               	btfss	3998,5,c	;volatile
  1744  0000DA  D001               	goto	i2u1_41
  1745  0000DC  D001               	goto	i2u1_40
  1746  0000DE                     i2u1_41:
  1747  0000DE  D022               	goto	i2l19
  1748  0000E0                     i2u1_40:
  1749  0000E0                     
  1750                           ;interrupts.c: 51: {
  1751                           ;interrupts.c: 52: getsUSART((char *) recvBuff, 6);
  1752  0000E0  0E00               	movlw	high _recvBuff
  1753  0000E2  6E14               	movwf	?_getsUSART+1,c
  1754  0000E4  0E62               	movlw	low _recvBuff
  1755  0000E6  6E13               	movwf	?_getsUSART,c
  1756  0000E8  6E19               	movwf	??_high_isr& (0+255),c
  1757  0000EA  0E06               	movlw	6
  1758  0000EC  6E15               	movwf	?_getsUSART+2,c
  1759  0000EE  5019               	movf	??_high_isr& (0+255),w,c
  1760  0000F0  EC67  F001         	call	_getsUSART	;wreg free
  1761  0000F4                     
  1762                           ;interrupts.c: 53: if(recvBuff[0] == 0x4E && recvBuff[1] == 0x4E && recvBuff[2] == 0x4E)
  1763  0000F4  5062               	movf	_recvBuff,w,c
  1764  0000F6  0A4E               	xorlw	78
  1765  0000F8  A4D8               	btfss	status,2,c
  1766  0000FA  D001               	goto	i2u2_41
  1767  0000FC  D001               	goto	i2u2_40
  1768  0000FE                     i2u2_41:
  1769  0000FE  D012               	goto	i2l19
  1770  000100                     i2u2_40:
  1771  000100  5063               	movf	_recvBuff+1,w,c
  1772  000102  0A4E               	xorlw	78
  1773  000104  A4D8               	btfss	status,2,c
  1774  000106  D001               	goto	i2u3_41
  1775  000108  D001               	goto	i2u3_40
  1776  00010A                     i2u3_41:
  1777  00010A  D00C               	goto	i2l19
  1778  00010C                     i2u3_40:
  1779  00010C  5064               	movf	_recvBuff+2,w,c
  1780  00010E  0A4E               	xorlw	78
  1781  000110  A4D8               	btfss	status,2,c
  1782  000112  D001               	goto	i2u4_41
  1783  000114  D001               	goto	i2u4_40
  1784  000116                     i2u4_41:
  1785  000116  D006               	goto	i2l19
  1786  000118                     i2u4_40:
  1787  000118                     
  1788                           ;interrupts.c: 54: {
  1789                           ;interrupts.c: 55: pollRecv = 1;
  1790  000118  6E19               	movwf	??_high_isr& (0+255),c
  1791  00011A  0E01               	movlw	1
  1792  00011C  6E5F               	movwf	_pollRecv,c
  1793  00011E  5019               	movf	??_high_isr& (0+255),w,c
  1794  000120  D001               	goto	i2l19
  1795  000122  D000               	goto	i2l19
  1796  000124                     i2l19:
  1797  000124  C027  FFF5         	movff	??_high_isr+14,tablat
  1798  000128  C026  FFF8         	movff	??_high_isr+13,tblptru
  1799  00012C  C025  FFF7         	movff	??_high_isr+12,tblptrh
  1800  000130  C024  FFF6         	movff	??_high_isr+11,tblptrl
  1801  000134  C023  FFF4         	movff	??_high_isr+10,prodh
  1802  000138  C022  FFF3         	movff	??_high_isr+9,prodl
  1803  00013C  C021  FFDA         	movff	??_high_isr+8,fsr2h
  1804  000140  C020  FFD9         	movff	??_high_isr+7,fsr2l
  1805  000144  C01F  FFE2         	movff	??_high_isr+6,fsr1h
  1806  000148  C01E  FFE1         	movff	??_high_isr+5,fsr1l
  1807  00014C  C01D  FFEA         	movff	??_high_isr+4,fsr0h
  1808  000150  C01C  FFE9         	movff	??_high_isr+3,fsr0l
  1809  000154  C01B  FFFB         	movff	??_high_isr+2,pclatu
  1810  000158  C01A  FFFA         	movff	??_high_isr+1,pclath
  1811  00015C  0011               	retfie		f
  1812  00015E                     __end_of_high_isr:
  1813                           	opt stack 0
  1814                           pclatu	equ	0xFFB
  1815                           pclath	equ	0xFFA
  1816                           tblptru	equ	0xFF8
  1817                           tblptrh	equ	0xFF7
  1818                           tblptrl	equ	0xFF6
  1819                           tablat	equ	0xFF5
  1820                           prodh	equ	0xFF4
  1821                           prodl	equ	0xFF3
  1822                           intcon	equ	0xFF2
  1823                           postinc0	equ	0xFEE
  1824                           fsr0h	equ	0xFEA
  1825                           fsr0l	equ	0xFE9
  1826                           wreg	equ	0xFE8
  1827                           fsr1h	equ	0xFE2
  1828                           fsr1l	equ	0xFE1
  1829                           bsr	equ	0xFE0
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _getsUSART *****************
  1835 ;; Defined at:
  1836 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\ugets.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  1839 ;;		 -> recvBuff(6), 
  1840 ;;  len             1   20[COMRAM] unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  i               1   23[COMRAM] unsigned char 
  1843 ;;  data            1   22[COMRAM] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;		None               void
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:        6 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		_ReadUSART
  1862 ;; This function is called by:
  1863 ;;		_high_isr
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text17
  1868  0002CE                     __ptext17:
  1869                           	opt stack 0
  1870  0002CE                     _getsUSART:
  1871                           	opt stack 23
  1872                           
  1873                           ;incstack = 0
  1874                           ;incstack = 0
  1875  0002CE  6E16               	movwf	??_getsUSART& (0+255),c
  1876  0002D0  0E00               	movlw	0
  1877  0002D2  6E18               	movwf	getsUSART@i,c
  1878  0002D4  5016               	movf	??_getsUSART& (0+255),w,c
  1879  0002D6  D00E               	goto	i2l915
  1880  0002D8                     i2l257:
  1881  0002D8  AA9E               	btfss	3998,5,c	;volatile
  1882  0002DA  D7FE               	goto	i2l257
  1883  0002DC  ECB6  F001         	call	_ReadUSART	;wreg free
  1884  0002E0  6E17               	movwf	getsUSART@data,c
  1885  0002E2  C013  FFD9         	movff	getsUSART@buffer,fsr2l
  1886  0002E6  C014  FFDA         	movff	getsUSART@buffer+1,fsr2h
  1887  0002EA  C017  FFDF         	movff	getsUSART@data,indf2
  1888  0002EE  4A13               	infsnz	getsUSART@buffer,f,c
  1889  0002F0  2A14               	incf	getsUSART@buffer+1,f,c
  1890  0002F2  2A18               	incf	getsUSART@i,f,c
  1891  0002F4                     i2l915:
  1892  0002F4  5015               	movf	getsUSART@len,w,c
  1893  0002F6  5C18               	subwf	getsUSART@i,w,c
  1894  0002F8  B0D8               	btfsc	status,0,c
  1895  0002FA  0012               	return	
  1896  0002FC  D7ED               	goto	i2l257
  1897  0002FE                     __end_of_getsUSART:
  1898                           	opt stack 0
  1899                           pclatu	equ	0xFFB
  1900                           pclath	equ	0xFFA
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           prodh	equ	0xFF4
  1906                           prodl	equ	0xFF3
  1907                           intcon	equ	0xFF2
  1908                           postinc0	equ	0xFEE
  1909                           fsr0h	equ	0xFEA
  1910                           fsr0l	equ	0xFE9
  1911                           wreg	equ	0xFE8
  1912                           fsr1h	equ	0xFE2
  1913                           fsr1l	equ	0xFE1
  1914                           bsr	equ	0xFE0
  1915                           indf2	equ	0xFDF
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _ReadUSART *****************
  1921 ;; Defined at:
  1922 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  data            1   17[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      unsigned char 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        1 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_getsUSART
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text18
  1950  00036C                     __ptext18:
  1951                           	opt stack 0
  1952  00036C                     _ReadUSART:
  1953                           	opt stack 23
  1954                           
  1955                           ;incstack = 0
  1956                           ;incstack = 0
  1957  00036C  0EF2               	movlw	242
  1958  00036E  165E               	andwf	_USART_Status,f,c
  1959  000370  ACAB               	btfss	4011,6,c	;volatile
  1960  000372  D003               	goto	i2l303
  1961  000374  905E               	bcf	_USART_Status,0,c
  1962  000376  B0AB               	btfsc	4011,0,c	;volatile
  1963  000378  805E               	bsf	_USART_Status,0,c
  1964  00037A                     i2l303:
  1965  00037A  B4AB               	btfsc	4011,2,c	;volatile
  1966  00037C  845E               	bsf	_USART_Status,2,c
  1967  00037E  B2AB               	btfsc	4011,1,c	;volatile
  1968  000380  865E               	bsf	_USART_Status,3,c
  1969  000382  CFAE F012          	movff	4014,ReadUSART@data	;volatile
  1970  000386  5012               	movf	ReadUSART@data,w,c
  1971  000388  0012               	return	
  1972  00038A                     __end_of_ReadUSART:
  1973                           	opt stack 0
  1974  0000                     pclatu	equ	0xFFB
  1975                           pclath	equ	0xFFA
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           prodh	equ	0xFF4
  1981                           prodl	equ	0xFF3
  1982                           intcon	equ	0xFF2
  1983                           postinc0	equ	0xFEE
  1984                           fsr0h	equ	0xFEA
  1985                           fsr0l	equ	0xFE9
  1986                           wreg	equ	0xFE8
  1987                           fsr1h	equ	0xFE2
  1988                           fsr1l	equ	0xFE1
  1989                           bsr	equ	0xFE0
  1990                           indf2	equ	0xFDF
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           pclatu	equ	0xFFB
  1995                           pclath	equ	0xFFA
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           intcon	equ	0xFF2
  2003                           postinc0	equ	0xFEE
  2004                           fsr0h	equ	0xFEA
  2005                           fsr0l	equ	0xFE9
  2006                           wreg	equ	0xFE8
  2007                           fsr1h	equ	0xFE2
  2008                           fsr1l	equ	0xFE1
  2009                           bsr	equ	0xFE0
  2010                           indf2	equ	0xFDF
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8
  2014                           
  2015                           	psect	rparam
  2016  0000                     pclatu	equ	0xFFB
  2017                           pclath	equ	0xFFA
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           fsr0h	equ	0xFEA
  2027                           fsr0l	equ	0xFE9
  2028                           wreg	equ	0xFE8
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           bsr	equ	0xFE0
  2032                           indf2	equ	0xFDF
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     52     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> recvBuff(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_InitApp
    _recvSPI->_ReadSPI
    _sendSPI->_WriteSPI
    _InitApp->_setupSPI
    _setupSPI->_OpenSPI

Critical Paths under _high_isr in COMRAM

    _high_isr->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     255
                                             48 COMRAM     4     4      0
                _ConfigureOscillator
                            _InitApp
                            _sendSPI
                         _ConvertADC
                            _BusyADC
                            _ReadADC
                            _recvSPI
 ---------------------------------------------------------------------------------
 (1) _recvSPI                                              1     0      1       0
                                             40 COMRAM     1     0      1
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (2) _ReadSPI                                              1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendSPI                                              4     2      2      45
                                             41 COMRAM     4     2      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     1      1      15
                                             39 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0     195
                                             45 COMRAM     3     3      0
                           _CloseADC
                            _OpenADC
                           _setupSPI
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     0      1      30
                                             39 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _setupSPI                                             3     3      0      60
                                             42 COMRAM     3     3      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     0      3      60
                                             39 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     105
                                             39 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            15    15      0      75
                                             24 COMRAM    15    15      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (6) _getsUSART                                            6     3      3      75
                                             18 COMRAM     6     3      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _CloseADC
     _OpenADC
     _setupSPI
       _OpenSPI
     _OpenTimer0
   _sendSPI
     _WriteSPI
   _ConvertADC
   _BusyADC
   _ReadADC
   _recvSPI
     _ReadSPI

 _low_isr (ROOT)

 _high_isr (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     34      67       1       81.1%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       9       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67       6        0.0%
DATA                 0      0      70       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Nov 06 23:00:26 2013

                 _SSPSTATbits 000FC7                            l53 0166                            l57 01B2  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                   __CFG_OSC$EC 000000  
                __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000  
                         l200 0246                           l203 0260                           l115 032A  
                         l204 027E                           l108 0308                           l205 0266  
                         l206 026A                           l214 03C6                           l231 039E  
                         l173 022A                           l229 03A4                           l246 0366  
                         l247 0368                           l197 0240                           l199 0244  
                         l931 01B4                           l923 018C                           l953 030A  
                         l957 031C                  getsUSART@len 0015                  __CFG_CPB$OFF 000000  
                         u237 0180                           u247 01C6                  __CFG_CPD$OFF 000000  
                         wreg 000FE8                          l1021 024A                          l1025 026E  
               getsUSART@data 0017                          i1l22 005C                          i2l17 0124  
                        i2l18 0122                          i2l19 0124                          _main 015E  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 00A2                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000               __end_of_BusyADC 03EA               __end_of_ReadADC 03E4  
             __end_of_InitApp 02CE               __end_of_ReadSPI 03CE               __end_of_OpenADC 022E  
             __end_of_OpenSPI 0286                         ?_main 0001                         _T0CON 000FD5  
                       i2l303 037A                         i2l257 02D8                         i2l901 010C  
                       i2l903 0118                         i2l915 02F4                         i2l893 00D8  
                       i2l895 00E0                         i2l897 00F4                         i2l899 0100  
                       _RCREG 000FAE                         _RCSTA 000FAB                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _SPBRG 000FAF                         _PORTB 000F81  
                       _TRISA 000F92                         _TRISB 000F93                         _TXSTA 000FAC  
         _ConfigureOscillator 03F4                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             __end_of_recvSPI 03DA               __end_of_sendSPI 032C                    _ConvertADC 03F0  
             __end_of_low_isr 00A2                         tablat 000FF5                         status 000FD8  
        ?_ConfigureOscillator 0001              __end_of_CloseADC 03F0               __initialization 03A6  
                __end_of_main 01D2                        ??_main 0031                 __activetblptr 000002  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _ADRESH 000FC4                        _ADRESL 000FC3              __end_of_WriteSPI 03A6  
             getsUSART@buffer 0013                    _OpenTimer0 034E            __size_of_ReadUSART 001E  
                      _SPBRGH 000FB0                        i2u1_40 00E0                        i2u1_41 00DE  
                      i2u2_40 0100                        i2u2_41 00FE                        i2u3_40 010C  
                      i2u3_41 010A                        i2u4_40 0118                        i2u4_41 0116  
                      _SSPBUF 000FC9                     ??_BusyADC 0028                     ??_ReadADC 002A  
                   ??_InitApp 002E                     ??_ReadSPI 0028         ??_ConfigureOscillator 0028  
                   ??_OpenADC 002B                     ??_OpenSPI 002B                __CFG_XINST$OFF 000000  
            __end_of_high_isr 015E                __CFG_STVREN$ON 000000                 sendSPI@retval 002D  
            OpenTimer0@config 0028                        clear_0 03AC               WriteSPI@TempVar 0029  
                   ??_recvSPI 002A                     ??_sendSPI 002C              __end_of_setupSPI 034E  
                   ??_low_isr 0001                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                   ?_ConvertADC 0001                    __accesstop 0080  
     __end_of__initialization 03B2               __CFG_PBADEN$OFF 000000                __pcstackCOMRAM 0001  
           __end_of_ReadUSART 038A            __size_of_getsUSART 0030                 ReadUSART@data 0012  
                   ?_CloseADC 0001                   ?_OpenTimer0 0028           __size_of_ConvertADC 0004  
                   ?_WriteSPI 0028                    ??_CloseADC 0028                       _SSPCON1 000FC6  
                   ?_high_isr 0001                       _SSPSTAT 000FC7                       _BusyADC 03E4  
                     _ReadADC 03DA                       _InitApp 0286                       _ReadSPI 03BC  
                     _OpenADC 01D2                       _OpenSPI 022E                       __Hparam 0000  
                     __Lparam 0000             __end_of_getsUSART 02FE                     ?_setupSPI 0001  
              sendSPI@command 002B                       __pcinit 03A6                       __ramtop 1000  
                  ??_WriteSPI 0029           __size_of_OpenTimer0 001E                       __ptext0 015E  
                     __ptext1 03CE                       __ptext2 03BC                       __ptext3 03DA  
                     __ptext4 03E4                       __ptext5 03F0                       __ptext6 02FE  
                     __ptext7 038A                       __ptext8 0286                       __ptext9 034E  
                   _T0CONbits 000FD5                       _recvSPI 03CE                       _recvIdx 0060  
                     _sendSPI 02FE                       _sendIdx 0061                       _low_isr 0018  
              OpenADC@config2 0029                    ??_high_isr 0019                __pintcode_body 00A6  
        end_of_initialization 03B2                 __Lmediumconst 0000                       int_func 00A6  
                   _RCSTAbits 000FAB                    ??_setupSPI 002B              WriteSPI@data_out 0028  
                     postinc0 000FEE                     _PORTBbits 000F81                     _TRISAbits 000F92  
                   _TRISCbits 000F94                  recvSPI@slave 0029                    getsUSART@i 0018  
                ??_ConvertADC 0028   __end_of_ConfigureOscillator 03F6                     _TXSTAbits 000FAC  
          __end_of_ConvertADC 03F4              OpenSPI@smp_phase 002A           start_initialization 03A6  
                   _ReadUSART 036C                ReadSPI@TempVar 0028              OpenSPI@sync_mode 0028  
                ??_OpenTimer0 0029             __size_of_CloseADC 0006                  sendSPI@slave 002A  
            __CFG_LPT1OSC$OFF 000000            __end_of_OpenTimer0 036C             __size_of_WriteSPI 001C  
                 __pbssCOMRAM 0035                    ?_ReadUSART 0001             __size_of_high_isr 0156  
                    ?_BusyADC 0001                      ?_ReadADC 0028                      ?_InitApp 0001  
                    ?_ReadSPI 0001             OpenADC@portconfig 002A                      ?_OpenADC 0028  
                    ?_OpenSPI 0028             __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  
           __size_of_setupSPI 0022                     _getsUSART 02CE                   __pintcodelo 0018  
                    ?_recvSPI 0029                      ?_sendSPI 002A                      ?_low_isr 0001  
               OpenADC@config 0028                      _IPR1bits 000F9F                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                  ?_getsUSART 0013               OpenSPI@bus_mode 0029                    _ADCON0bits 000FC2  
                 ??_ReadUSART 0012                      _CloseADC 03EA              __size_of_BusyADC 0006  
            __size_of_ReadADC 000A              __size_of_InitApp 0048              __size_of_ReadSPI 0012  
                    __Hrparam 0000              __size_of_OpenADC 005C                      __Lrparam 0000  
            __size_of_OpenSPI 0058            __CFG_BOREN$SBORDIS 000000                      _WriteSPI 038A  
            __size_of_recvSPI 000C              __size_of_sendSPI 002E              __size_of_low_isr 008A  
                    __ptext10 032C                      __ptext11 022E                      __ptext12 01D2  
                    __ptext13 03EA                      __ptext14 03F4                      __ptext17 02CE  
                    __ptext18 036C                      _high_isr 0008                 __size_of_main 0074  
                    _recvBuff 0062                      _sendBuff 0035  __size_of_ConfigureOscillator 0002  
                    _pollRecv 005F                      _setupSPI 032C                      main@aval 0033  
                 ??_getsUSART 0016                    _INTCONbits 000FF2                      intlevel1 0000  
                    intlevel2 0000                   _SSPCON1bits 000FC6                  _USART_Status 005E  
