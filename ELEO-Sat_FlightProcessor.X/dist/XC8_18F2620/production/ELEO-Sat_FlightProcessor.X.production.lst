

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Sat Nov 09 05:15:58 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     _ADCON0	set	4034
    38  0000                     _ADCON0bits	set	4034
    39  0000                     _ADCON1	set	4033
    40  0000                     _ADCON2	set	4032
    41  0000                     _ADRESH	set	4036
    42  0000                     _ADRESL	set	4035
    43  0000                     _INTCONbits	set	4082
    44  0000                     _IPR1bits	set	3999
    45  0000                     _PIE1bits	set	3997
    46  0000                     _PIR1bits	set	3998
    47  0000                     _PORTB	set	3969
    48  0000                     _PORTBbits	set	3969
    49  0000                     _RCONbits	set	4048
    50  0000                     _RCREG	set	4014
    51  0000                     _RCSTA	set	4011
    52  0000                     _RCSTAbits	set	4011
    53  0000                     _SPBRG	set	4015
    54  0000                     _SPBRGH	set	4016
    55  0000                     _SSPBUF	set	4041
    56  0000                     _SSPCON1	set	4038
    57  0000                     _SSPCON1bits	set	4038
    58  0000                     _SSPSTAT	set	4039
    59  0000                     _SSPSTATbits	set	4039
    60  0000                     _T0CON	set	4053
    61  0000                     _T0CONbits	set	4053
    62  0000                     _TMR0H	set	4055
    63  0000                     _TMR0L	set	4054
    64  0000                     _TRISA	set	3986
    65  0000                     _TRISAbits	set	3986
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISCbits	set	3988
    68  0000                     _TXREG	set	4013
    69  0000                     _TXSTA	set	4012
    70  0000                     _TXSTAbits	set	4012
    71                           
    72 ;; *************** function _low_isr *****************
    73 ;; Defined at:
    74 ;;		line 73 in file "interrupts.c"
    75 ;; Parameters:    Size  Location     Type
    76 ;;		None
    77 ;; Auto vars:     Size  Location     Type
    78 ;;		None
    79 ;; Return value:  Size  Location     Type
    80 ;;		None               void
    81 ;; Registers used:
    82 ;;		None
    83 ;; Tracked objects:
    84 ;;		On entry : 0/0
    85 ;;		On exit  : 0/0
    86 ;;		Unchanged: 0/0
    87 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    88 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    89 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    90 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    91 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    92 ;;Total ram usage:       17 bytes
    93 ;; Hardware stack levels used:    1
    94 ;; Hardware stack levels required when called:    3
    95 ;; This function calls:
    96 ;;		Nothing
    97 ;; This function is called by:
    98 ;;		Interrupt level 1
    99 ;; This function uses a non-reentrant model
   100 ;;
   101                           
   102                           	psect	intcodelo
   103  000018                     __pintcodelo:
   104                           	opt stack 0
   105                           
   106                           ; #config settings
   107  000018                     _low_isr:
   108                           	opt stack 24
   109                           
   110                           ;incstack = 0
   111  000018  CFD8 F001          	movff	status,??_low_isr
   112  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   113  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   114  000024  CFFA F004          	movff	pclath,??_low_isr+3
   115  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   116  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   117  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   118  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   119  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   120  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   121  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   122  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   123  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   124  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   125  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   126  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   127  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   128  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
   129  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
   130  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   131  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   132  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
   133  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
   134  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   135  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   136  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
   137  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
   138  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
   139  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
   140  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
   141  000090  C004  FFFA         	movff	??_low_isr+3,pclath
   142  000094  C003  FFE0         	movff	??_low_isr+2,bsr
   143  000098  C002  FFE8         	movff	??_low_isr+1,wreg
   144  00009C  C001  FFD8         	movff	??_low_isr,status
   145  0000A0  0010               	retfie	
   146  0000A2                     __end_of_low_isr:
   147                           	opt stack 0
   148                           pclatu	equ	0xFFB
   149                           pclath	equ	0xFFA
   150                           tblptru	equ	0xFF8
   151                           tblptrh	equ	0xFF7
   152                           tblptrl	equ	0xFF6
   153                           tablat	equ	0xFF5
   154                           prodh	equ	0xFF4
   155                           prodl	equ	0xFF3
   156                           fsr0h	equ	0xFEA
   157                           fsr0l	equ	0xFE9
   158                           wreg	equ	0xFE8
   159                           fsr1h	equ	0xFE2
   160                           fsr1l	equ	0xFE1
   161                           bsr	equ	0xFE0
   162                           fsr2h	equ	0xFDA
   163                           fsr2l	equ	0xFD9
   164                           status	equ	0xFD8
   165                           
   166                           	psect	cinit
   167  00069A                     __pcinit:
   168                           	opt stack 0
   169  00069A                     start_initialization:
   170                           	opt stack 0
   171  00069A                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to COMRAM (50 bytes)
   175  00069A  EE00  F037         	lfsr	0,__pbssCOMRAM
   176  00069E  0E32               	movlw	50
   177  0006A0                     clear_0:
   178  0006A0  6AEE               	clrf	postinc0,c
   179  0006A2  06E8               	decf	wreg,f,c
   180  0006A4  E1FD               	bnz	clear_0
   181  0006A6                     end_of_initialization:
   182                           	opt stack 0
   183  0006A6                     __end_of__initialization:
   184                           	opt stack 0
   185  0006A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  0006A8  6EF8               	movwf	tblptru,c
   187  0006AA  0100               	movlb	0
   188  0006AC  EF53  F000         	goto	_main	;jump to C main() function
   189                           pclatu	equ	0xFFB
   190                           pclath	equ	0xFFA
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           prodh	equ	0xFF4
   196                           prodl	equ	0xFF3
   197                           postinc0	equ	0xFEE
   198                           fsr0h	equ	0xFEA
   199                           fsr0l	equ	0xFE9
   200                           wreg	equ	0xFE8
   201                           fsr1h	equ	0xFE2
   202                           fsr1l	equ	0xFE1
   203                           bsr	equ	0xFE0
   204                           fsr2h	equ	0xFDA
   205                           fsr2l	equ	0xFD9
   206                           status	equ	0xFD8
   207                           
   208                           	psect	bssCOMRAM
   209  000037                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000037                     _sendBuff:
   212                           	opt stack 0
   213  000037                     	ds	40
   214  00005F                     _USART_Status:
   215                           	opt stack 0
   216  00005F                     	ds	1
   217  000060                     _pollRecv:
   218                           	opt stack 0
   219  000060                     	ds	1
   220  000061                     _recvIdx:
   221                           	opt stack 0
   222  000061                     	ds	1
   223  000062                     _sendIdx:
   224                           	opt stack 0
   225  000062                     	ds	1
   226  000063                     _recvBuff:
   227                           	opt stack 0
   228  000063                     	ds	6
   229                           pclatu	equ	0xFFB
   230                           pclath	equ	0xFFA
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           prodh	equ	0xFF4
   236                           prodl	equ	0xFF3
   237                           postinc0	equ	0xFEE
   238                           fsr0h	equ	0xFEA
   239                           fsr0l	equ	0xFE9
   240                           wreg	equ	0xFE8
   241                           fsr1h	equ	0xFE2
   242                           fsr1l	equ	0xFE1
   243                           bsr	equ	0xFE0
   244                           fsr2h	equ	0xFDA
   245                           fsr2l	equ	0xFD9
   246                           status	equ	0xFD8
   247                           
   248                           	psect	cstackCOMRAM
   249  000001                     __pcstackCOMRAM:
   250                           	opt stack 0
   251  000001                     ??_low_isr:
   252  000001                     
   253                           ; 1 bytes @ 0x0
   254  000001                     	ds	17
   255  000012                     ReadUSART@data:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x11
   259  000012                     	ds	1
   260  000013                     ?_getsUSART:
   261                           	opt stack 0
   262  000013                     getsUSART@buffer:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x12
   266  000013                     	ds	2
   267  000015                     getsUSART@len:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x14
   271  000015                     	ds	1
   272  000016                     ??_getsUSART:
   273                           
   274                           ; 0 bytes @ 0x15
   275  000016                     	ds	1
   276  000017                     getsUSART@data:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x16
   280  000017                     	ds	1
   281  000018                     getsUSART@i:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x17
   285  000018                     	ds	1
   286  000019                     ??_high_isr:
   287                           
   288                           ; 0 bytes @ 0x18
   289  000019                     	ds	15
   290  000028                     ?_WriteTimer0:
   291                           	opt stack 0
   292  000028                     ?_OpenADC:
   293                           	opt stack 0
   294  000028                     ?_OpenTimer0:
   295                           	opt stack 0
   296  000028                     ?_OpenSPI:
   297                           	opt stack 0
   298  000028                     ?_OpenUSART:
   299                           	opt stack 0
   300  000028                     ?_WriteUSART:
   301                           	opt stack 0
   302  000028                     ?_selectTemp:
   303                           	opt stack 0
   304  000028                     ?_WriteSPI:
   305                           	opt stack 0
   306  000028                     ?_ReadADC:
   307                           	opt stack 0
   308  000028                     selectTemp@sel:
   309                           	opt stack 0
   310  000028                     OpenADC@config:
   311                           	opt stack 0
   312  000028                     OpenSPI@sync_mode:
   313                           	opt stack 0
   314  000028                     ReadSPI@TempVar:
   315                           	opt stack 0
   316  000028                     WriteSPI@data_out:
   317                           	opt stack 0
   318  000028                     OpenTimer0@config:
   319                           	opt stack 0
   320  000028                     OpenUSART@config:
   321                           	opt stack 0
   322  000028                     WriteUSART@data:
   323                           	opt stack 0
   324  000028                     WriteTimer0@timer0:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x27
   328  000028                     	ds	1
   329  000029                     ?_recvSPI:
   330                           	opt stack 0
   331  000029                     recvSPI@slave:
   332                           	opt stack 0
   333  000029                     OpenADC@config2:
   334                           	opt stack 0
   335  000029                     OpenSPI@bus_mode:
   336                           	opt stack 0
   337  000029                     WriteSPI@TempVar:
   338                           	opt stack 0
   339  000029                     sendXbee@i:
   340                           	opt stack 0
   341  000029                     OpenUSART@spbrg:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x28
   345  000029                     	ds	1
   346  00002A                     ?_readTemperature:
   347                           	opt stack 0
   348  00002A                     ?_sendSPI:
   349                           	opt stack 0
   350  00002A                     readTemperature@sel:
   351                           	opt stack 0
   352  00002A                     sendSPI@slave:
   353                           	opt stack 0
   354  00002A                     OpenADC@portconfig:
   355                           	opt stack 0
   356  00002A                     OpenSPI@smp_phase:
   357                           	opt stack 0
   358  00002A                     WriteTimer0@timer:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x29
   362  00002A                     	ds	1
   363  00002B                     ??_readTemperature:
   364  00002B                     ??_OpenADC:
   365  00002B                     ??_setupSPI:
   366  00002B                     ??_initXbee:
   367  00002B                     sendSPI@command:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x2A
   371  00002B                     	ds	1
   372  00002C                     readTemperature@TemperatureReading:
   373                           	opt stack 0
   374  00002C                     initXbee@i:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x2B
   378  00002C                     	ds	2
   379  00002E                     initXbee@i_752:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x2D
   383  00002E                     	ds	2
   384  000030                     ??_InitApp:
   385                           
   386                           ; 0 bytes @ 0x2F
   387  000030                     	ds	3
   388  000033                     ??_main:
   389                           
   390                           ; 0 bytes @ 0x32
   391  000033                     	ds	2
   392  000035                     main@i:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x34
   396  000035                     	ds	2
   397                           pclatu	equ	0xFFB
   398                           pclath	equ	0xFFA
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           prodh	equ	0xFF4
   404                           prodl	equ	0xFF3
   405                           postinc0	equ	0xFEE
   406                           fsr0h	equ	0xFEA
   407                           fsr0l	equ	0xFE9
   408                           wreg	equ	0xFE8
   409                           fsr1h	equ	0xFE2
   410                           fsr1l	equ	0xFE1
   411                           bsr	equ	0xFE0
   412                           fsr2h	equ	0xFDA
   413                           fsr2l	equ	0xFD9
   414                           status	equ	0xFD8
   415                           
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 38 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  i               2   52[COMRAM] int 
   426 ;; Return value:  Size  Location     Type
   427 ;;		None               void
   428 ;; Registers used:
   429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;Total ram usage:        4 bytes
   440 ;; Hardware stack levels required when called:    7
   441 ;; This function calls:
   442 ;;		_ConfigureOscillator
   443 ;;		_InitApp
   444 ;;		_sendXbee
   445 ;;		_readTemperature
   446 ;;		_sendSPI
   447 ;;		_recvSPI
   448 ;;		_WriteTimer0
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text0
   455  0000A6                     __ptext0:
   456                           	opt stack 0
   457  0000A6                     _main:
   458                           	opt stack 24
   459                           
   460                           ;main.c: 40: ConfigureOscillator();
   461                           
   462                           ;incstack = 0
   463                           ;incstack = 0
   464  0000A6  EC7F  F003         	call	_ConfigureOscillator	;wreg free
   465                           
   466                           ;main.c: 43: InitApp();
   467  0000AA  EC49  F002         	call	_InitApp	;wreg free
   468  0000AE                     l997:
   469                           
   470                           ;main.c: 49: {
   471                           ;main.c: 52: if(pollRecv)
   472  0000AE  5060               	movf	_pollRecv,w,c
   473  0000B0  B4D8               	btfsc	status,2,c
   474  0000B2  D01F               	goto	l56
   475                           
   476                           ;main.c: 53: {
   477                           ;main.c: 55: sendXbee();
   478  0000B4  ECA1  F002         	call	_sendXbee	;wreg free
   479                           
   480                           ;main.c: 56: for(int i=0; i<6; i++)
   481  0000B8  0E00               	movlw	0
   482  0000BA  6E36               	movwf	main@i+1,c
   483  0000BC  0E00               	movlw	0
   484  0000BE  6E35               	movwf	main@i,c
   485  0000C0  5036               	movf	main@i+1,w,c
   486  0000C2  0A80               	xorlw	128
   487  0000C4  0F80               	addlw	-128
   488  0000C6  0E06               	movlw	6
   489  0000C8  B4D8               	btfsc	status,2,c
   490  0000CA  5C35               	subwf	main@i,w,c
   491  0000CC  B0D8               	btfsc	status,0,c
   492  0000CE  D00B               	goto	l1013
   493                           
   494                           ;main.c: 57: recvBuff[i] = 0;
   495  0000D0  0E63               	movlw	low _recvBuff
   496  0000D2  2435               	addwf	main@i,w,c
   497  0000D4  6ED9               	movwf	fsr2l,c
   498  0000D6  0E00               	movlw	high _recvBuff
   499  0000D8  2036               	addwfc	main@i+1,w,c
   500  0000DA  6EDA               	movwf	fsr2h,c
   501  0000DC  0E00               	movlw	0
   502  0000DE  6EDF               	movwf	indf2,c
   503  0000E0  4A35               	infsnz	main@i,f,c
   504  0000E2  2A36               	incf	main@i+1,f,c
   505  0000E4  D7ED               	goto	L1
   506  0000E6                     l1013:
   507                           
   508                           ;main.c: 58: pollRecv = 0;
   509  0000E6  6E33               	movwf	??_main& (0+255),c
   510  0000E8  0E00               	movlw	0
   511  0000EA  6E60               	movwf	_pollRecv,c
   512  0000EC  5033               	movf	??_main& (0+255),w,c
   513                           
   514                           ;main.c: 59: PORTBbits.RB2 ^= 1;
   515  0000EE  7481               	btg	3969,2,c	;volatile
   516                           
   517                           ;main.c: 60: }
   518  0000F0  D7DE               	goto	l997
   519  0000F2                     l56:
   520                           
   521                           ;main.c: 62: else if(INTCONbits.TMR0IF)
   522  0000F2  A4F2               	btfss	intcon,2,c	;volatile
   523  0000F4  D7DC               	goto	l997
   524                           
   525                           ;main.c: 63: {
   526                           ;main.c: 65: readTemperature(1);
   527  0000F6  6E33               	movwf	??_main& (0+255),c
   528  0000F8  0E01               	movlw	1
   529  0000FA  6E2A               	movwf	?_readTemperature,c
   530  0000FC  5033               	movf	??_main& (0+255),w,c
   531  0000FE  ECB3  F001         	call	_readTemperature	;wreg free
   532                           
   533                           ;main.c: 66: readTemperature(2);
   534  000102  6E33               	movwf	??_main& (0+255),c
   535  000104  0E02               	movlw	2
   536  000106  6E2A               	movwf	?_readTemperature,c
   537  000108  5033               	movf	??_main& (0+255),w,c
   538  00010A  ECB3  F001         	call	_readTemperature	;wreg free
   539                           
   540                           ;main.c: 67: readTemperature(3);
   541  00010E  6E33               	movwf	??_main& (0+255),c
   542  000110  0E03               	movlw	3
   543  000112  6E2A               	movwf	?_readTemperature,c
   544  000114  5033               	movf	??_main& (0+255),w,c
   545  000116  ECB3  F001         	call	_readTemperature	;wreg free
   546                           
   547                           ;main.c: 68: readTemperature(4);
   548  00011A  6E33               	movwf	??_main& (0+255),c
   549  00011C  0E04               	movlw	4
   550  00011E  6E2A               	movwf	?_readTemperature,c
   551  000120  5033               	movf	??_main& (0+255),w,c
   552  000122  ECB3  F001         	call	_readTemperature	;wreg free
   553                           
   554                           ;main.c: 71: sendSPI(Power, R_Current);
   555  000126  6E33               	movwf	??_main& (0+255),c
   556  000128  0E00               	movlw	0
   557  00012A  6E2A               	movwf	?_sendSPI,c
   558  00012C  5033               	movf	??_main& (0+255),w,c
   559  00012E  6E34               	movwf	(??_main+1)& (0+255),c
   560  000130  0E09               	movlw	9
   561  000132  6E2B               	movwf	?_sendSPI+1,c
   562  000134  5034               	movf	(??_main+1)& (0+255),w,c
   563  000136  ECEE  F002         	call	_sendSPI	;wreg free
   564                           
   565                           ;main.c: 72: _delay((unsigned long)((100)*(20000000/4000000.0)));
   566  00013A  0EA6               	movlw	166
   567  00013C                     u417:
   568  00013C  2EE8               	decfsz	wreg,f,c
   569  00013E  D7FE               	goto	u417
   570  000140  D000               	nop2		;nop
   571                           
   572                           ;main.c: 73: sendBuff[12] = recvSPI(Power);
   573  000142  6E33               	movwf	??_main& (0+255),c
   574  000144  0E00               	movlw	0
   575  000146  6E29               	movwf	?_recvSPI,c
   576  000148  5033               	movf	??_main& (0+255),w,c
   577  00014A  EC12  F003         	call	_recvSPI	;wreg free
   578  00014E  6E43               	movwf	_sendBuff+12,c
   579                           
   580                           ;main.c: 74: _delay((unsigned long)((100)*(20000000/4000000.0)));
   581  000150  0EA6               	movlw	166
   582  000152                     u427:
   583  000152  2EE8               	decfsz	wreg,f,c
   584  000154  D7FE               	goto	u427
   585  000156  D000               	nop2		;nop
   586                           
   587                           ;main.c: 75: sendBuff[13] = recvSPI(Power);
   588  000158  6E33               	movwf	??_main& (0+255),c
   589  00015A  0E00               	movlw	0
   590  00015C  6E29               	movwf	?_recvSPI,c
   591  00015E  5033               	movf	??_main& (0+255),w,c
   592  000160  EC12  F003         	call	_recvSPI	;wreg free
   593  000164  6E44               	movwf	_sendBuff+13,c
   594                           
   595                           ;main.c: 76: _delay((unsigned long)((1)*(20000000/4000.0)));
   596  000166  0E07               	movlw	7
   597  000168  6E33               	movwf	??_main& (0+255),c
   598  00016A  0E7D               	movlw	125
   599  00016C                     u437:
   600  00016C  2EE8               	decfsz	wreg,f,c
   601  00016E  D7FE               	goto	u437
   602  000170  2E33               	decfsz	??_main& (0+255),f,c
   603  000172  D7FC               	goto	u437
   604                           
   605                           ;main.c: 79: sendSPI(Power, Solar_Current);
   606  000174  6E33               	movwf	??_main& (0+255),c
   607  000176  0E00               	movlw	0
   608  000178  6E2A               	movwf	?_sendSPI,c
   609  00017A  5033               	movf	??_main& (0+255),w,c
   610  00017C  6E34               	movwf	(??_main+1)& (0+255),c
   611  00017E  0E0A               	movlw	10
   612  000180  6E2B               	movwf	?_sendSPI+1,c
   613  000182  5034               	movf	(??_main+1)& (0+255),w,c
   614  000184  ECEE  F002         	call	_sendSPI	;wreg free
   615                           
   616                           ;main.c: 80: _delay((unsigned long)((100)*(20000000/4000000.0)));
   617  000188  0EA6               	movlw	166
   618  00018A                     u447:
   619  00018A  2EE8               	decfsz	wreg,f,c
   620  00018C  D7FE               	goto	u447
   621  00018E  D000               	nop2		;nop
   622                           
   623                           ;main.c: 81: sendBuff[14] = recvSPI(Power);
   624  000190  6E33               	movwf	??_main& (0+255),c
   625  000192  0E00               	movlw	0
   626  000194  6E29               	movwf	?_recvSPI,c
   627  000196  5033               	movf	??_main& (0+255),w,c
   628  000198  EC12  F003         	call	_recvSPI	;wreg free
   629  00019C  6E45               	movwf	_sendBuff+14,c
   630                           
   631                           ;main.c: 82: _delay((unsigned long)((100)*(20000000/4000000.0)));
   632  00019E  0EA6               	movlw	166
   633  0001A0                     u457:
   634  0001A0  2EE8               	decfsz	wreg,f,c
   635  0001A2  D7FE               	goto	u457
   636  0001A4  D000               	nop2		;nop
   637                           
   638                           ;main.c: 83: sendBuff[15] = recvSPI(Power);
   639  0001A6  6E33               	movwf	??_main& (0+255),c
   640  0001A8  0E00               	movlw	0
   641  0001AA  6E29               	movwf	?_recvSPI,c
   642  0001AC  5033               	movf	??_main& (0+255),w,c
   643  0001AE  EC12  F003         	call	_recvSPI	;wreg free
   644  0001B2  6E46               	movwf	_sendBuff+15,c
   645                           
   646                           ;main.c: 84: _delay((unsigned long)((1)*(20000000/4000.0)));
   647  0001B4  0E07               	movlw	7
   648  0001B6  6E33               	movwf	??_main& (0+255),c
   649  0001B8  0E7D               	movlw	125
   650  0001BA                     u467:
   651  0001BA  2EE8               	decfsz	wreg,f,c
   652  0001BC  D7FE               	goto	u467
   653  0001BE  2E33               	decfsz	??_main& (0+255),f,c
   654  0001C0  D7FC               	goto	u467
   655                           
   656                           ;main.c: 87: sendSPI(Power, Solar_Voltage);
   657  0001C2  6E33               	movwf	??_main& (0+255),c
   658  0001C4  0E00               	movlw	0
   659  0001C6  6E2A               	movwf	?_sendSPI,c
   660  0001C8  5033               	movf	??_main& (0+255),w,c
   661  0001CA  6E34               	movwf	(??_main+1)& (0+255),c
   662  0001CC  0E0B               	movlw	11
   663  0001CE  6E2B               	movwf	?_sendSPI+1,c
   664  0001D0  5034               	movf	(??_main+1)& (0+255),w,c
   665  0001D2  ECEE  F002         	call	_sendSPI	;wreg free
   666                           
   667                           ;main.c: 88: _delay((unsigned long)((100)*(20000000/4000000.0)));
   668  0001D6  0EA6               	movlw	166
   669  0001D8                     u477:
   670  0001D8  2EE8               	decfsz	wreg,f,c
   671  0001DA  D7FE               	goto	u477
   672  0001DC  D000               	nop2		;nop
   673                           
   674                           ;main.c: 89: sendBuff[16] = recvSPI(Power);
   675  0001DE  6E33               	movwf	??_main& (0+255),c
   676  0001E0  0E00               	movlw	0
   677  0001E2  6E29               	movwf	?_recvSPI,c
   678  0001E4  5033               	movf	??_main& (0+255),w,c
   679  0001E6  EC12  F003         	call	_recvSPI	;wreg free
   680  0001EA  6E47               	movwf	_sendBuff+16,c
   681                           
   682                           ;main.c: 90: _delay((unsigned long)((100)*(20000000/4000000.0)));
   683  0001EC  0EA6               	movlw	166
   684  0001EE                     u487:
   685  0001EE  2EE8               	decfsz	wreg,f,c
   686  0001F0  D7FE               	goto	u487
   687  0001F2  D000               	nop2		;nop
   688                           
   689                           ;main.c: 91: sendBuff[17] = recvSPI(Power);
   690  0001F4  6E33               	movwf	??_main& (0+255),c
   691  0001F6  0E00               	movlw	0
   692  0001F8  6E29               	movwf	?_recvSPI,c
   693  0001FA  5033               	movf	??_main& (0+255),w,c
   694  0001FC  EC12  F003         	call	_recvSPI	;wreg free
   695  000200  6E48               	movwf	_sendBuff+17,c
   696                           
   697                           ;main.c: 92: _delay((unsigned long)((1)*(20000000/4000.0)));
   698  000202  0E07               	movlw	7
   699  000204  6E33               	movwf	??_main& (0+255),c
   700  000206  0E7D               	movlw	125
   701  000208                     u497:
   702  000208  2EE8               	decfsz	wreg,f,c
   703  00020A  D7FE               	goto	u497
   704  00020C  2E33               	decfsz	??_main& (0+255),f,c
   705  00020E  D7FC               	goto	u497
   706                           
   707                           ;main.c: 94: INTCONbits.TMR0IF = 0;
   708  000210  94F2               	bcf	intcon,2,c	;volatile
   709                           
   710                           ;main.c: 95: WriteTimer0(0x0000);
   711  000212  0E00               	movlw	0
   712  000214  6E29               	movwf	?_WriteTimer0+1,c
   713  000216  0E00               	movlw	0
   714  000218  6E28               	movwf	?_WriteTimer0,c
   715  00021A  EC61  F003         	call	_WriteTimer0	;wreg free
   716  00021E  D747               	goto	l997
   717  000220                     __end_of_main:
   718                           	opt stack 0
   719                           pclatu	equ	0xFFB
   720                           pclath	equ	0xFFA
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           prodh	equ	0xFF4
   726                           prodl	equ	0xFF3
   727                           intcon	equ	0xFF2
   728                           postinc0	equ	0xFEE
   729                           fsr0h	equ	0xFEA
   730                           fsr0l	equ	0xFE9
   731                           wreg	equ	0xFE8
   732                           fsr1h	equ	0xFE2
   733                           fsr1l	equ	0xFE1
   734                           bsr	equ	0xFE0
   735                           indf2	equ	0xFDF
   736                           fsr2h	equ	0xFDA
   737                           fsr2l	equ	0xFD9
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _recvSPI *****************
   741 ;; Defined at:
   742 ;;		line 65 in file "spi_comm.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  slave           1   40[COMRAM] enum E3674
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      unsigned char 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    5
   763 ;; This function calls:
   764 ;;		_ReadSPI
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text1
   771  000624                     __ptext1:
   772                           	opt stack 0
   773  000624                     _recvSPI:
   774                           	opt stack 25
   775                           
   776                           ;spi_comm.c: 66: switch(slave)
   777                           
   778                           ;incstack = 0
   779                           ;incstack = 0
   780  000624  D005               	goto	l1119
   781  000626                     l162:
   782                           
   783                           ;spi_comm.c: 69: (PORTBbits.RB0 = 0);
   784  000626  9081               	bcf	3969,0,c	;volatile
   785                           
   786                           ;spi_comm.c: 70: ReadSPI();
   787  000628  EC58  F003         	call	_ReadSPI	;wreg free
   788                           
   789                           ;spi_comm.c: 71: (PORTBbits.RB0 = 1);
   790  00062C  8081               	bsf	3969,0,c	;volatile
   791                           
   792                           ;spi_comm.c: 72: break;
   793  00062E  D007               	goto	l1121
   794  000630                     l1119:
   795  000630  5029               	movf	recvSPI@slave,w,c
   796                           
   797                           ; Switch size 1, requested type "space"
   798                           ; Number of cases is 3, Range of values is 0 to 2
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte           10     6 (average)
   802                           ;	Chosen strategy is simple_byte
   803  000632  0A00               	xorlw	0	; case 0
   804  000634  B4D8               	btfsc	status,2,c
   805  000636  D7F7               	goto	l162
   806  000638  0A01               	xorlw	1	; case 1
   807  00063A  A4D8               	btfss	status,2,c
   808  00063C  0A03               	xorlw	3	; case 2
   809  00063E                     l1121:
   810                           
   811                           ;spi_comm.c: 83: return SSPBUF;
   812  00063E  50C9               	movf	4041,w,c	;volatile
   813  000640  0012               	return	
   814  000642                     __end_of_recvSPI:
   815                           	opt stack 0
   816                           pclatu	equ	0xFFB
   817                           pclath	equ	0xFFA
   818                           tblptru	equ	0xFF8
   819                           tblptrh	equ	0xFF7
   820                           tblptrl	equ	0xFF6
   821                           tablat	equ	0xFF5
   822                           prodh	equ	0xFF4
   823                           prodl	equ	0xFF3
   824                           intcon	equ	0xFF2
   825                           postinc0	equ	0xFEE
   826                           fsr0h	equ	0xFEA
   827                           fsr0l	equ	0xFE9
   828                           wreg	equ	0xFE8
   829                           fsr1h	equ	0xFE2
   830                           fsr1l	equ	0xFE1
   831                           bsr	equ	0xFE0
   832                           indf2	equ	0xFDF
   833                           fsr2h	equ	0xFDA
   834                           fsr2l	equ	0xFD9
   835                           status	equ	0xFD8
   836                           
   837 ;; *************** function _ReadSPI *****************
   838 ;; Defined at:
   839 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_read.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  TempVar         1   39[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      unsigned char 
   846 ;; Registers used:
   847 ;;		wreg, status,2
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        1 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    4
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_recvSPI
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text2
   868  0006B0                     __ptext2:
   869                           	opt stack 0
   870  0006B0                     _ReadSPI:
   871                           	opt stack 25
   872                           
   873                           ;incstack = 0
   874                           ;incstack = 0
   875  0006B0  CFC9 F028          	movff	4041,ReadSPI@TempVar	;volatile
   876  0006B4  969E               	bcf	3998,3,c	;volatile
   877  0006B6  0E00               	movlw	0
   878  0006B8  6EC9               	movwf	4041,c	;volatile
   879  0006BA                     l274:
   880  0006BA  A69E               	btfss	3998,3,c	;volatile
   881  0006BC  D7FE               	goto	l274
   882                           
   883                           ;	Return value of _ReadSPI is never used
   884  0006BE  50C9               	movf	4041,w,c	;volatile
   885  0006C0  0012               	return	
   886  0006C2                     __end_of_ReadSPI:
   887                           	opt stack 0
   888                           pclatu	equ	0xFFB
   889                           pclath	equ	0xFFA
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           prodh	equ	0xFF4
   895                           prodl	equ	0xFF3
   896                           intcon	equ	0xFF2
   897                           postinc0	equ	0xFEE
   898                           fsr0h	equ	0xFEA
   899                           fsr0l	equ	0xFE9
   900                           wreg	equ	0xFE8
   901                           fsr1h	equ	0xFE2
   902                           fsr1l	equ	0xFE1
   903                           bsr	equ	0xFE0
   904                           indf2	equ	0xFDF
   905                           fsr2h	equ	0xFDA
   906                           fsr2l	equ	0xFD9
   907                           status	equ	0xFD8
   908                           
   909 ;; *************** function _sendSPI *****************
   910 ;; Defined at:
   911 ;;		line 42 in file "spi_comm.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  slave           1   41[COMRAM] enum E3674
   914 ;;  command         1   42[COMRAM] enum E3679
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    5
   933 ;; This function calls:
   934 ;;		_WriteSPI
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text3
   941  0005DC                     __ptext3:
   942                           	opt stack 0
   943  0005DC                     _sendSPI:
   944                           	opt stack 25
   945                           
   946                           ;spi_comm.c: 43: switch(slave)
   947                           
   948                           ;incstack = 0
   949                           ;incstack = 0
   950  0005DC  D00A               	goto	l1109
   951  0005DE                     l151:
   952                           
   953                           ;spi_comm.c: 48: (PORTBbits.RB0 = 0);
   954  0005DE  9081               	bcf	3969,0,c	;volatile
   955  0005E0                     l1105:
   956  0005E0  C02B  F028         	movff	sendSPI@command,?_WriteSPI
   957  0005E4  EC3F  F003         	call	_WriteSPI	;wreg free
   958  0005E8  0900               	iorlw	0
   959  0005EA  A4D8               	btfss	status,2,c
   960  0005EC  D7F9               	goto	l1105
   961                           
   962                           ;spi_comm.c: 55: (PORTBbits.RB0 = 1);
   963  0005EE  8081               	bsf	3969,0,c	;volatile
   964                           
   965                           ;spi_comm.c: 56: break;
   966  0005F0  D007               	goto	l158
   967  0005F2                     l1109:
   968  0005F2  502A               	movf	sendSPI@slave,w,c
   969                           
   970                           ; Switch size 1, requested type "space"
   971                           ; Number of cases is 3, Range of values is 0 to 2
   972                           ; switch strategies available:
   973                           ; Name         Instructions Cycles
   974                           ; simple_byte           10     6 (average)
   975                           ;	Chosen strategy is simple_byte
   976  0005F4  0A00               	xorlw	0	; case 0
   977  0005F6  B4D8               	btfsc	status,2,c
   978  0005F8  D7F2               	goto	l151
   979  0005FA  0A01               	xorlw	1	; case 1
   980  0005FC  A4D8               	btfss	status,2,c
   981  0005FE  0A03               	xorlw	3	; case 2
   982  000600                     l158:
   983  000600  0012               	return	
   984  000602                     __end_of_sendSPI:
   985                           	opt stack 0
   986                           pclatu	equ	0xFFB
   987                           pclath	equ	0xFFA
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           prodh	equ	0xFF4
   993                           prodl	equ	0xFF3
   994                           intcon	equ	0xFF2
   995                           postinc0	equ	0xFEE
   996                           fsr0h	equ	0xFEA
   997                           fsr0l	equ	0xFE9
   998                           wreg	equ	0xFE8
   999                           fsr1h	equ	0xFE2
  1000                           fsr1l	equ	0xFE1
  1001                           bsr	equ	0xFE0
  1002                           indf2	equ	0xFDF
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function _WriteSPI *****************
  1008 ;; Defined at:
  1009 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_writ.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  data_out        1   39[COMRAM] unsigned char 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  TempVar         1   40[COMRAM] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      char 
  1016 ;; Registers used:
  1017 ;;		wreg
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:        2 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    4
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_sendSPI
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text4
  1038  00067E                     __ptext4:
  1039                           	opt stack 0
  1040  00067E                     _WriteSPI:
  1041                           	opt stack 25
  1042                           
  1043                           ;incstack = 0
  1044                           ;incstack = 0
  1045  00067E  CFC9 F029          	movff	4041,WriteSPI@TempVar	;volatile
  1046  000682  969E               	bcf	3998,3,c	;volatile
  1047  000684  9EC6               	bcf	4038,7,c	;volatile
  1048  000686  C028  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  1049  00068A  AEC6               	btfss	4038,7,c	;volatile
  1050  00068C  D002               	goto	l291
  1051  00068E  0EFF               	movlw	255
  1052  000690  D003               	goto	l289
  1053  000692                     l291:
  1054  000692  A69E               	btfss	3998,3,c	;volatile
  1055  000694  D7FE               	goto	l291
  1056  000696  0E00               	movlw	0
  1057  000698                     l289:
  1058  000698  0012               	return	
  1059  00069A                     __end_of_WriteSPI:
  1060                           	opt stack 0
  1061                           pclatu	equ	0xFFB
  1062                           pclath	equ	0xFFA
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           intcon	equ	0xFF2
  1070                           postinc0	equ	0xFEE
  1071                           fsr0h	equ	0xFEA
  1072                           fsr0l	equ	0xFE9
  1073                           wreg	equ	0xFE8
  1074                           fsr1h	equ	0xFE2
  1075                           fsr1l	equ	0xFE1
  1076                           bsr	equ	0xFE0
  1077                           indf2	equ	0xFDF
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function _readTemperature *****************
  1083 ;; Defined at:
  1084 ;;		line 90 in file "user.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  sel             1   41[COMRAM] unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  TemperatureR    2   43[COMRAM] int 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;		None               void
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1098 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;Total ram usage:        4 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    5
  1105 ;; This function calls:
  1106 ;;		_selectTemp
  1107 ;;		_ConvertADC
  1108 ;;		_BusyADC
  1109 ;;		_ReadADC
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text5
  1116  000366                     __ptext5:
  1117                           	opt stack 0
  1118  000366                     _readTemperature:
  1119                           	opt stack 25
  1120                           
  1121                           ;user.c: 91: selectTemp(1);
  1122                           
  1123                           ;incstack = 0
  1124                           ;incstack = 0
  1125  000366  6E2B               	movwf	??_readTemperature& (0+255),c
  1126  000368  0E01               	movlw	1
  1127  00036A  6E28               	movwf	?_selectTemp,c
  1128  00036C  502B               	movf	??_readTemperature& (0+255),w,c
  1129  00036E  ECBD  F002         	call	_selectTemp	;wreg free
  1130                           
  1131                           ;user.c: 92: ConvertADC();
  1132  000372  EC7D  F003         	call	_ConvertADC	;wreg free
  1133  000376                     l1079:
  1134  000376  EC77  F003         	call	_BusyADC	;wreg free
  1135  00037A  0900               	iorlw	0
  1136  00037C  A4D8               	btfss	status,2,c
  1137  00037E  D7FB               	goto	l1079
  1138                           
  1139                           ;user.c: 94: int TemperatureReading = ReadADC();
  1140  000380  EC72  F003         	call	_ReadADC	;wreg free
  1141  000384  C028  F02C         	movff	?_ReadADC,readTemperature@TemperatureReading
  1142  000388  C029  F02D         	movff	?_ReadADC+1,readTemperature@TemperatureReading+1
  1143                           
  1144                           ;user.c: 95: switch(sel)
  1145  00038C  D018               	goto	l1101
  1146  00038E                     l1083:
  1147                           
  1148                           ;user.c: 98: sendBuff[4] = 0x03 & (TemperatureReading >> 8);
  1149  00038E  502D               	movf	readTemperature@TemperatureReading+1,w,c
  1150  000390  0B03               	andlw	3
  1151  000392  6E3B               	movwf	_sendBuff+4,c
  1152                           
  1153                           ;user.c: 99: sendBuff[5] = 0xff & TemperatureReading;
  1154  000394  C02C  F03C         	movff	readTemperature@TemperatureReading,_sendBuff+5
  1155                           
  1156                           ;user.c: 100: break;
  1157  000398  D01F               	goto	l132
  1158  00039A                     l1087:
  1159                           
  1160                           ;user.c: 102: sendBuff[6] = 0x03 & (TemperatureReading >> 8);
  1161  00039A  502D               	movf	readTemperature@TemperatureReading+1,w,c
  1162  00039C  0B03               	andlw	3
  1163  00039E  6E3D               	movwf	_sendBuff+6,c
  1164                           
  1165                           ;user.c: 103: sendBuff[7] = 0xff & TemperatureReading;
  1166  0003A0  C02C  F03E         	movff	readTemperature@TemperatureReading,_sendBuff+7
  1167                           
  1168                           ;user.c: 104: break;
  1169  0003A4  D019               	goto	l132
  1170  0003A6                     l1091:
  1171                           
  1172                           ;user.c: 106: sendBuff[8] = 0x03 & (TemperatureReading >> 8);
  1173  0003A6  502D               	movf	readTemperature@TemperatureReading+1,w,c
  1174  0003A8  0B03               	andlw	3
  1175  0003AA  6E3F               	movwf	_sendBuff+8,c
  1176                           
  1177                           ;user.c: 107: sendBuff[9] = 0xff & TemperatureReading;
  1178  0003AC  C02C  F040         	movff	readTemperature@TemperatureReading,_sendBuff+9
  1179                           
  1180                           ;user.c: 108: break;
  1181  0003B0  D013               	goto	l132
  1182  0003B2                     l1095:
  1183                           
  1184                           ;user.c: 110: sendBuff[10] = 0x03 & (TemperatureReading >> 8);
  1185  0003B2  502D               	movf	readTemperature@TemperatureReading+1,w,c
  1186  0003B4  0B03               	andlw	3
  1187  0003B6  6E41               	movwf	_sendBuff+10,c
  1188                           
  1189                           ;user.c: 111: sendBuff[11] = 0xff & TemperatureReading;
  1190  0003B8  C02C  F042         	movff	readTemperature@TemperatureReading,_sendBuff+11
  1191                           
  1192                           ;user.c: 112: break;
  1193  0003BC  D00D               	goto	l132
  1194  0003BE                     l1101:
  1195  0003BE  502A               	movf	readTemperature@sel,w,c
  1196                           
  1197                           ; Switch size 1, requested type "space"
  1198                           ; Number of cases is 4, Range of values is 1 to 4
  1199                           ; switch strategies available:
  1200                           ; Name         Instructions Cycles
  1201                           ; simple_byte           13     7 (average)
  1202                           ;	Chosen strategy is simple_byte
  1203  0003C0  0A01               	xorlw	1	; case 1
  1204  0003C2  B4D8               	btfsc	status,2,c
  1205  0003C4  D7E4               	goto	l1083
  1206  0003C6  0A03               	xorlw	3	; case 2
  1207  0003C8  B4D8               	btfsc	status,2,c
  1208  0003CA  D7E7               	goto	l1087
  1209  0003CC  0A01               	xorlw	1	; case 3
  1210  0003CE  B4D8               	btfsc	status,2,c
  1211  0003D0  D7EA               	goto	l1091
  1212  0003D2  0A07               	xorlw	7	; case 4
  1213  0003D4  B4D8               	btfsc	status,2,c
  1214  0003D6  D7ED               	goto	l1095
  1215  0003D8                     l132:
  1216  0003D8  0012               	return	
  1217  0003DA                     __end_of_readTemperature:
  1218                           	opt stack 0
  1219                           pclatu	equ	0xFFB
  1220                           pclath	equ	0xFFA
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           prodh	equ	0xFF4
  1226                           prodl	equ	0xFF3
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           fsr0h	equ	0xFEA
  1230                           fsr0l	equ	0xFE9
  1231                           wreg	equ	0xFE8
  1232                           fsr1h	equ	0xFE2
  1233                           fsr1l	equ	0xFE1
  1234                           bsr	equ	0xFE0
  1235                           indf2	equ	0xFDF
  1236                           fsr2h	equ	0xFDA
  1237                           fsr2l	equ	0xFD9
  1238                           status	equ	0xFD8
  1239                           
  1240 ;; *************** function _ReadADC *****************
  1241 ;; Defined at:
  1242 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcread.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  2   39[COMRAM] int 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;Total ram usage:        2 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    4
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_readTemperature
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text6
  1271  0006E4                     __ptext6:
  1272                           	opt stack 0
  1273  0006E4                     _ReadADC:
  1274                           	opt stack 25
  1275                           
  1276                           ;incstack = 0
  1277                           ;incstack = 0
  1278  0006E4  50C4               	movf	4036,w,c	;volatile
  1279  0006E6  6E29               	movwf	?_ReadADC+1,c
  1280  0006E8  50C3               	movf	4035,w,c	;volatile
  1281  0006EA  6E28               	movwf	?_ReadADC,c
  1282  0006EC  0012               	return	
  1283  0006EE                     __end_of_ReadADC:
  1284                           	opt stack 0
  1285                           pclatu	equ	0xFFB
  1286                           pclath	equ	0xFFA
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           intcon	equ	0xFF2
  1294                           postinc0	equ	0xFEE
  1295                           fsr0h	equ	0xFEA
  1296                           fsr0l	equ	0xFE9
  1297                           wreg	equ	0xFE8
  1298                           fsr1h	equ	0xFE2
  1299                           fsr1l	equ	0xFE1
  1300                           bsr	equ	0xFE0
  1301                           indf2	equ	0xFDF
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           status	equ	0xFD8
  1305                           
  1306 ;; *************** function _BusyADC *****************
  1307 ;; Defined at:
  1308 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcbusy.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      unsigned char 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    4
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_readTemperature
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text7
  1337  0006EE                     __ptext7:
  1338                           	opt stack 0
  1339  0006EE                     _BusyADC:
  1340                           	opt stack 25
  1341                           
  1342                           ;incstack = 0
  1343                           ;incstack = 0
  1344  0006EE  30C2               	rrcf	4034,w,c	;volatile
  1345  0006F0  0B01               	andlw	1
  1346  0006F2  0012               	return	
  1347  0006F4                     __end_of_BusyADC:
  1348                           	opt stack 0
  1349                           pclatu	equ	0xFFB
  1350                           pclath	equ	0xFFA
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           prodh	equ	0xFF4
  1356                           prodl	equ	0xFF3
  1357                           intcon	equ	0xFF2
  1358                           postinc0	equ	0xFEE
  1359                           fsr0h	equ	0xFEA
  1360                           fsr0l	equ	0xFE9
  1361                           wreg	equ	0xFE8
  1362                           fsr1h	equ	0xFE2
  1363                           fsr1l	equ	0xFE1
  1364                           bsr	equ	0xFE0
  1365                           indf2	equ	0xFDF
  1366                           fsr2h	equ	0xFDA
  1367                           fsr2l	equ	0xFD9
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _ConvertADC *****************
  1371 ;; Defined at:
  1372 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;		None               void
  1379 ;; Registers used:
  1380 ;;		None
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    4
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_readTemperature
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text8
  1401  0006FA                     __ptext8:
  1402                           	opt stack 0
  1403  0006FA                     _ConvertADC:
  1404                           	opt stack 25
  1405                           
  1406                           ;incstack = 0
  1407                           ;incstack = 0
  1408  0006FA  82C2               	bsf	4034,1,c	;volatile
  1409  0006FC  0012               	return	
  1410  0006FE                     __end_of_ConvertADC:
  1411                           	opt stack 0
  1412                           pclatu	equ	0xFFB
  1413                           pclath	equ	0xFFA
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           prodh	equ	0xFF4
  1419                           prodl	equ	0xFF3
  1420                           intcon	equ	0xFF2
  1421                           postinc0	equ	0xFEE
  1422                           fsr0h	equ	0xFEA
  1423                           fsr0l	equ	0xFE9
  1424                           wreg	equ	0xFE8
  1425                           fsr1h	equ	0xFE2
  1426                           fsr1l	equ	0xFE1
  1427                           bsr	equ	0xFE0
  1428                           indf2	equ	0xFDF
  1429                           fsr2h	equ	0xFDA
  1430                           fsr2l	equ	0xFD9
  1431                           status	equ	0xFD8
  1432                           
  1433 ;; *************** function _selectTemp *****************
  1434 ;; Defined at:
  1435 ;;		line 67 in file "user.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  sel             1   39[COMRAM] unsigned char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;		None               void
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1449 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;Total ram usage:        1 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    4
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_readTemperature
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text9
  1464  00057A                     __ptext9:
  1465                           	opt stack 0
  1466  00057A                     _selectTemp:
  1467                           	opt stack 25
  1468                           
  1469                           ;user.c: 68: switch(sel)
  1470                           
  1471                           ;incstack = 0
  1472                           ;incstack = 0
  1473  00057A  D00A               	goto	l1195
  1474  00057C                     l115:
  1475                           
  1476                           ;user.c: 71: PORTBbits.RB1 = 0;
  1477  00057C  9281               	bcf	3969,1,c	;volatile
  1478  00057E  D001               	goto	L2
  1479  000580                     l117:
  1480                           
  1481                           ;user.c: 75: PORTBbits.RB1 = 1;
  1482  000580  8281               	bsf	3969,1,c	;volatile
  1483  000582                     L2:
  1484                           
  1485                           ;user.c: 76: PORTBbits.RB2 = 0;
  1486  000582  9481               	bcf	3969,2,c	;volatile
  1487                           
  1488                           ;user.c: 77: break;
  1489  000584  D012               	goto	l120
  1490  000586                     l118:
  1491                           
  1492                           ;user.c: 79: PORTBbits.RB1 = 0;
  1493  000586  9281               	bcf	3969,1,c	;volatile
  1494  000588  D001               	goto	L3
  1495  00058A                     l119:
  1496                           
  1497                           ;user.c: 83: PORTBbits.RB1 = 1;
  1498  00058A  8281               	bsf	3969,1,c	;volatile
  1499  00058C                     L3:
  1500                           
  1501                           ;user.c: 84: PORTBbits.RB2 = 1;
  1502  00058C  8481               	bsf	3969,2,c	;volatile
  1503                           
  1504                           ;user.c: 85: break;
  1505  00058E  D00D               	goto	l120
  1506  000590                     l1195:
  1507  000590  5028               	movf	selectTemp@sel,w,c
  1508                           
  1509                           ; Switch size 1, requested type "space"
  1510                           ; Number of cases is 4, Range of values is 1 to 4
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte           13     7 (average)
  1514                           ;	Chosen strategy is simple_byte
  1515  000592  0A01               	xorlw	1	; case 1
  1516  000594  B4D8               	btfsc	status,2,c
  1517  000596  D7F2               	goto	l115
  1518  000598  0A03               	xorlw	3	; case 2
  1519  00059A  B4D8               	btfsc	status,2,c
  1520  00059C  D7F1               	goto	l117
  1521  00059E  0A01               	xorlw	1	; case 3
  1522  0005A0  B4D8               	btfsc	status,2,c
  1523  0005A2  D7F1               	goto	l118
  1524  0005A4  0A07               	xorlw	7	; case 4
  1525  0005A6  B4D8               	btfsc	status,2,c
  1526  0005A8  D7F0               	goto	l119
  1527  0005AA                     l120:
  1528  0005AA  0012               	return	
  1529  0005AC                     __end_of_selectTemp:
  1530                           	opt stack 0
  1531                           pclatu	equ	0xFFB
  1532                           pclath	equ	0xFFA
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           prodh	equ	0xFF4
  1538                           prodl	equ	0xFF3
  1539                           intcon	equ	0xFF2
  1540                           postinc0	equ	0xFEE
  1541                           fsr0h	equ	0xFEA
  1542                           fsr0l	equ	0xFE9
  1543                           wreg	equ	0xFE8
  1544                           fsr1h	equ	0xFE2
  1545                           fsr1l	equ	0xFE1
  1546                           bsr	equ	0xFE0
  1547                           indf2	equ	0xFDF
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _sendXbee *****************
  1553 ;; Defined at:
  1554 ;;		line 42 in file "xbee.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  i               2   40[COMRAM] int 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;		None               void
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    5
  1575 ;; This function calls:
  1576 ;;		_WriteUSART
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text10
  1583  000542                     __ptext10:
  1584                           	opt stack 0
  1585  000542                     _sendXbee:
  1586                           	opt stack 25
  1587                           
  1588                           ;xbee.c: 43: for(int i=0; i<40; i++)
  1589                           
  1590                           ;incstack = 0
  1591                           ;incstack = 0
  1592  000542  0E00               	movlw	0
  1593  000544  6E2A               	movwf	sendXbee@i+1,c
  1594  000546  0E00               	movlw	0
  1595  000548  6E29               	movwf	sendXbee@i,c
  1596  00054A  502A               	movf	sendXbee@i+1,w,c
  1597  00054C  0A80               	xorlw	128
  1598  00054E  0F80               	addlw	-128
  1599  000550  0E28               	movlw	40
  1600  000552  B4D8               	btfsc	status,2,c
  1601  000554  5C29               	subwf	sendXbee@i,w,c
  1602  000556  B0D8               	btfsc	status,0,c
  1603  000558  D00F               	goto	l199
  1604                           
  1605                           ;xbee.c: 44: {
  1606                           ;xbee.c: 45: WriteUSART(sendBuff[i]);
  1607  00055A  0E37               	movlw	low _sendBuff
  1608  00055C  2429               	addwf	sendXbee@i,w,c
  1609  00055E  6ED9               	movwf	fsr2l,c
  1610  000560  0E00               	movlw	high _sendBuff
  1611  000562  202A               	addwfc	sendXbee@i+1,w,c
  1612  000564  6EDA               	movwf	fsr2h,c
  1613  000566  50DF               	movf	indf2,w,c
  1614  000568  6E28               	movwf	?_WriteUSART,c
  1615  00056A  EC6A  F003         	call	_WriteUSART	;wreg free
  1616  00056E                     l196:
  1617  00056E  A2AC               	btfss	4012,1,c	;volatile
  1618  000570  D7FE               	goto	l196
  1619  000572  4A29               	infsnz	sendXbee@i,f,c
  1620  000574  2A2A               	incf	sendXbee@i+1,f,c
  1621  000576  D7E9               	goto	L4
  1622  000578                     l199:
  1623  000578  0012               	return	
  1624  00057A                     __end_of_sendXbee:
  1625                           	opt stack 0
  1626                           pclatu	equ	0xFFB
  1627                           pclath	equ	0xFFA
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           prodh	equ	0xFF4
  1633                           prodl	equ	0xFF3
  1634                           intcon	equ	0xFF2
  1635                           postinc0	equ	0xFEE
  1636                           fsr0h	equ	0xFEA
  1637                           fsr0l	equ	0xFE9
  1638                           wreg	equ	0xFE8
  1639                           fsr1h	equ	0xFE2
  1640                           fsr1l	equ	0xFE1
  1641                           bsr	equ	0xFE0
  1642                           indf2	equ	0xFDF
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _WriteUSART *****************
  1648 ;; Defined at:
  1649 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  data            1   39[COMRAM] unsigned char 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;		None               void
  1656 ;; Registers used:
  1657 ;;		None
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    4
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_sendXbee
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text11
  1678  0006D4                     __ptext11:
  1679                           	opt stack 0
  1680  0006D4                     _WriteUSART:
  1681                           	opt stack 25
  1682                           
  1683                           ;incstack = 0
  1684                           ;incstack = 0
  1685  0006D4  ACAC               	btfss	4012,6,c	;volatile
  1686  0006D6  D003               	goto	l383
  1687  0006D8  90AC               	bcf	4012,0,c	;volatile
  1688  0006DA  B25F               	btfsc	_USART_Status,1,c
  1689  0006DC  80AC               	bsf	4012,0,c	;volatile
  1690  0006DE                     l383:
  1691  0006DE  C028  FFAD         	movff	WriteUSART@data,4013	;volatile
  1692  0006E2  0012               	return	
  1693  0006E4                     __end_of_WriteUSART:
  1694                           	opt stack 0
  1695                           pclatu	equ	0xFFB
  1696                           pclath	equ	0xFFA
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           intcon	equ	0xFF2
  1704                           postinc0	equ	0xFEE
  1705                           fsr0h	equ	0xFEA
  1706                           fsr0l	equ	0xFE9
  1707                           wreg	equ	0xFE8
  1708                           fsr1h	equ	0xFE2
  1709                           fsr1l	equ	0xFE1
  1710                           bsr	equ	0xFE0
  1711                           indf2	equ	0xFDF
  1712                           fsr2h	equ	0xFDA
  1713                           fsr2l	equ	0xFD9
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _InitApp *****************
  1717 ;; Defined at:
  1718 ;;		line 32 in file "user.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        3 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    6
  1739 ;; This function calls:
  1740 ;;		_WriteTimer0
  1741 ;;		_CloseADC
  1742 ;;		_OpenADC
  1743 ;;		_setupSPI
  1744 ;;		_initXbee
  1745 ;;		_OpenTimer0
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text12
  1752  000492                     __ptext12:
  1753                           	opt stack 0
  1754  000492                     _InitApp:
  1755                           	opt stack 24
  1756                           
  1757                           ;user.c: 36: ADCON1 = 0b00001010;
  1758                           
  1759                           ;incstack = 0
  1760                           ;incstack = 0
  1761  000492  0E0A               	movlw	10
  1762  000494  6EC1               	movwf	4033,c	;volatile
  1763                           
  1764                           ;user.c: 37: TRISA = 0b00000001;
  1765  000496  0E01               	movlw	1
  1766  000498  6E92               	movwf	3986,c	;volatile
  1767                           
  1768                           ;user.c: 38: TRISB = 0b00000000;
  1769  00049A  0E00               	movlw	0
  1770  00049C  6E93               	movwf	3987,c	;volatile
  1771                           
  1772                           ;user.c: 39: PORTB = 0x00;
  1773  00049E  0E00               	movlw	0
  1774  0004A0  6E81               	movwf	3969,c	;volatile
  1775                           
  1776                           ;user.c: 40: PORTBbits.RB0 = 1;
  1777  0004A2  8081               	bsf	3969,0,c	;volatile
  1778                           
  1779                           ;user.c: 43: CloseADC();
  1780  0004A4  EC7A  F003         	call	_CloseADC	;wreg free
  1781                           
  1782                           ;user.c: 44: OpenADC(0b11011111 & 0b11110011 & 0b11111111,
  1783                           ;user.c: 45: 0b10000111 & 0b01111111 & 0b11111100,
  1784                           ;user.c: 46: 0b11111111);
  1785  0004A8  6E30               	movwf	??_InitApp& (0+255),c
  1786  0004AA  0ED3               	movlw	211
  1787  0004AC  6E28               	movwf	?_OpenADC,c
  1788  0004AE  5030               	movf	??_InitApp& (0+255),w,c
  1789  0004B0  6E31               	movwf	(??_InitApp+1)& (0+255),c
  1790  0004B2  0E04               	movlw	4
  1791  0004B4  6E29               	movwf	?_OpenADC+1,c
  1792  0004B6  5031               	movf	(??_InitApp+1)& (0+255),w,c
  1793  0004B8  6E32               	movwf	(??_InitApp+2)& (0+255),c
  1794  0004BA  0EFF               	movlw	255
  1795  0004BC  6E2A               	movwf	?_OpenADC+2,c
  1796  0004BE  5032               	movf	(??_InitApp+2)& (0+255),w,c
  1797  0004C0  EC1B  F002         	call	_OpenADC	;wreg free
  1798                           
  1799                           ;user.c: 48: setupSPI();
  1800  0004C4  EC01  F003         	call	_setupSPI	;wreg free
  1801                           
  1802                           ;user.c: 50: initXbee();
  1803  0004C8  EC6C  F001         	call	_initXbee	;wreg free
  1804                           
  1805                           ;user.c: 54: OpenTimer0(0b01111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1806  0004CC  6E30               	movwf	??_InitApp& (0+255),c
  1807  0004CE  0E16               	movlw	22
  1808  0004D0  6E28               	movwf	?_OpenTimer0,c
  1809  0004D2  5030               	movf	??_InitApp& (0+255),w,c
  1810  0004D4  EC21  F003         	call	_OpenTimer0	;wreg free
  1811                           
  1812                           ;user.c: 55: WriteTimer0(0x0000);
  1813  0004D8  0E00               	movlw	0
  1814  0004DA  6E29               	movwf	?_WriteTimer0+1,c
  1815  0004DC  0E00               	movlw	0
  1816  0004DE  6E28               	movwf	?_WriteTimer0,c
  1817  0004E0  EC61  F003         	call	_WriteTimer0	;wreg free
  1818                           
  1819                           ;user.c: 59: RCONbits.IPEN = 1;
  1820  0004E4  8ED0               	bsf	4048,7,c	;volatile
  1821                           
  1822                           ;user.c: 61: (INTCONbits.GIE = 1);
  1823  0004E6  8EF2               	bsf	intcon,7,c	;volatile
  1824  0004E8  0012               	return	
  1825  0004EA                     __end_of_InitApp:
  1826                           	opt stack 0
  1827                           pclatu	equ	0xFFB
  1828                           pclath	equ	0xFFA
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodh	equ	0xFF4
  1834                           prodl	equ	0xFF3
  1835                           intcon	equ	0xFF2
  1836                           postinc0	equ	0xFEE
  1837                           fsr0h	equ	0xFEA
  1838                           fsr0l	equ	0xFE9
  1839                           wreg	equ	0xFE8
  1840                           fsr1h	equ	0xFE2
  1841                           fsr1l	equ	0xFE1
  1842                           bsr	equ	0xFE0
  1843                           indf2	equ	0xFDF
  1844                           fsr2h	equ	0xFDA
  1845                           fsr2l	equ	0xFD9
  1846                           status	equ	0xFD8
  1847                           
  1848 ;; *************** function _OpenTimer0 *****************
  1849 ;; Defined at:
  1850 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  config          1   39[COMRAM] unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;		None               void
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        1 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    4
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_InitApp
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text13
  1879  000642                     __ptext13:
  1880                           	opt stack 0
  1881  000642                     _OpenTimer0:
  1882                           	opt stack 25
  1883                           
  1884                           ;incstack = 0
  1885                           ;incstack = 0
  1886  000642  5028               	movf	OpenTimer0@config,w,c
  1887  000644  0B7F               	andlw	127
  1888  000646  6ED5               	movwf	4053,c	;volatile
  1889  000648  0E00               	movlw	0
  1890  00064A  6ED7               	movwf	4055,c	;volatile
  1891  00064C  0E00               	movlw	0
  1892  00064E  6ED6               	movwf	4054,c	;volatile
  1893  000650  94F2               	bcf	intcon,2,c	;volatile
  1894  000652  AE28               	btfss	OpenTimer0@config,7,c
  1895  000654  D002               	goto	l306
  1896  000656  8AF2               	bsf	intcon,5,c	;volatile
  1897  000658  D001               	goto	l307
  1898  00065A                     l306:
  1899  00065A  9AF2               	bcf	intcon,5,c	;volatile
  1900  00065C                     l307:
  1901  00065C  8ED5               	bsf	4053,7,c	;volatile
  1902  00065E  0012               	return	
  1903  000660                     __end_of_OpenTimer0:
  1904                           	opt stack 0
  1905                           pclatu	equ	0xFFB
  1906                           pclath	equ	0xFFA
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodh	equ	0xFF4
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           postinc0	equ	0xFEE
  1915                           fsr0h	equ	0xFEA
  1916                           fsr0l	equ	0xFE9
  1917                           wreg	equ	0xFE8
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           bsr	equ	0xFE0
  1921                           indf2	equ	0xFDF
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _initXbee *****************
  1927 ;; Defined at:
  1928 ;;		line 24 in file "xbee.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  i               2   45[COMRAM] int 
  1933 ;;  i               2   43[COMRAM] int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;		None               void
  1936 ;; Registers used:
  1937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        5 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    5
  1950 ;; This function calls:
  1951 ;;		_OpenUSART
  1952 ;; This function is called by:
  1953 ;;		_InitApp
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text14
  1958  0002D8                     __ptext14:
  1959                           	opt stack 0
  1960  0002D8                     _initXbee:
  1961                           	opt stack 24
  1962                           
  1963                           ;xbee.c: 25: IPR1bits.RCIP = 1;
  1964                           
  1965                           ;incstack = 0
  1966                           ;incstack = 0
  1967  0002D8  8A9F               	bsf	3999,5,c	;volatile
  1968                           
  1969                           ;xbee.c: 26: for(int i=0; i<6; i++)
  1970  0002DA  0E00               	movlw	0
  1971  0002DC  6E2D               	movwf	initXbee@i+1,c
  1972  0002DE  0E00               	movlw	0
  1973  0002E0  6E2C               	movwf	initXbee@i,c
  1974  0002E2  502D               	movf	initXbee@i+1,w,c
  1975  0002E4  0A80               	xorlw	128
  1976  0002E6  0F80               	addlw	-128
  1977  0002E8  0E06               	movlw	6
  1978  0002EA  B4D8               	btfsc	status,2,c
  1979  0002EC  5C2C               	subwf	initXbee@i,w,c
  1980  0002EE  B0D8               	btfsc	status,0,c
  1981  0002F0  D00B               	goto	l1161
  1982                           
  1983                           ;xbee.c: 27: recvBuff[i] = 0;
  1984  0002F2  0E63               	movlw	low _recvBuff
  1985  0002F4  242C               	addwf	initXbee@i,w,c
  1986  0002F6  6ED9               	movwf	fsr2l,c
  1987  0002F8  0E00               	movlw	high _recvBuff
  1988  0002FA  202D               	addwfc	initXbee@i+1,w,c
  1989  0002FC  6EDA               	movwf	fsr2h,c
  1990  0002FE  0E00               	movlw	0
  1991  000300  6EDF               	movwf	indf2,c
  1992  000302  4A2C               	infsnz	initXbee@i,f,c
  1993  000304  2A2D               	incf	initXbee@i+1,f,c
  1994  000306  D7ED               	goto	L5
  1995  000308                     l1161:
  1996                           
  1997                           ;xbee.c: 28: for(int i=0; i<40; i++)
  1998  000308  0E00               	movlw	0
  1999  00030A  6E2F               	movwf	initXbee@i_752+1,c
  2000  00030C  0E00               	movlw	0
  2001  00030E  6E2E               	movwf	initXbee@i_752,c
  2002  000310  502F               	movf	initXbee@i_752+1,w,c
  2003  000312  0A80               	xorlw	128
  2004  000314  0F80               	addlw	-128
  2005  000316  0E28               	movlw	40
  2006  000318  B4D8               	btfsc	status,2,c
  2007  00031A  5C2E               	subwf	initXbee@i_752,w,c
  2008  00031C  B0D8               	btfsc	status,0,c
  2009  00031E  D00B               	goto	l1173
  2010                           
  2011                           ;xbee.c: 29: sendBuff[i] = 0;
  2012  000320  0E37               	movlw	low _sendBuff
  2013  000322  242E               	addwf	initXbee@i_752,w,c
  2014  000324  6ED9               	movwf	fsr2l,c
  2015  000326  0E00               	movlw	high _sendBuff
  2016  000328  202F               	addwfc	initXbee@i_752+1,w,c
  2017  00032A  6EDA               	movwf	fsr2h,c
  2018  00032C  0E00               	movlw	0
  2019  00032E  6EDF               	movwf	indf2,c
  2020  000330  4A2E               	infsnz	initXbee@i_752,f,c
  2021  000332  2A2F               	incf	initXbee@i_752+1,f,c
  2022  000334  D7ED               	goto	L6
  2023  000336                     l1173:
  2024                           
  2025                           ;xbee.c: 31: sendBuff[0] = 0x4E;
  2026  000336  6E2B               	movwf	??_initXbee& (0+255),c
  2027  000338  0E4E               	movlw	78
  2028  00033A  6E37               	movwf	_sendBuff,c
  2029  00033C  502B               	movf	??_initXbee& (0+255),w,c
  2030                           
  2031                           ;xbee.c: 32: sendBuff[1] = 0x4E;
  2032  00033E  6E2B               	movwf	??_initXbee& (0+255),c
  2033  000340  0E4E               	movlw	78
  2034  000342  6E38               	movwf	_sendBuff+1,c
  2035  000344  502B               	movf	??_initXbee& (0+255),w,c
  2036                           
  2037                           ;xbee.c: 33: sendBuff[2] = 0x4E;
  2038  000346  6E2B               	movwf	??_initXbee& (0+255),c
  2039  000348  0E4E               	movlw	78
  2040  00034A  6E39               	movwf	_sendBuff+2,c
  2041  00034C  502B               	movf	??_initXbee& (0+255),w,c
  2042                           
  2043                           ;xbee.c: 35: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  2044                           ;xbee.c: 36: & 0b11111101 & 0b11111111 & 0b11111111
  2045                           ;xbee.c: 37: & 0b11011111, 32);
  2046  00034E  6E2B               	movwf	??_initXbee& (0+255),c
  2047  000350  0E5C               	movlw	92
  2048  000352  6E28               	movwf	?_OpenUSART,c
  2049  000354  502B               	movf	??_initXbee& (0+255),w,c
  2050  000356  0E00               	movlw	0
  2051  000358  6E2A               	movwf	?_OpenUSART+2,c
  2052  00035A  0E20               	movlw	32
  2053  00035C  6E29               	movwf	?_OpenUSART+1,c
  2054  00035E  ECED  F001         	call	_OpenUSART	;wreg free
  2055                           
  2056                           ;xbee.c: 38: IPR1bits.RC1IP = 1;
  2057  000362  8A9F               	bsf	3999,5,c	;volatile
  2058  000364  0012               	return	
  2059  000366                     __end_of_initXbee:
  2060                           	opt stack 0
  2061                           pclatu	equ	0xFFB
  2062                           pclath	equ	0xFFA
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           prodh	equ	0xFF4
  2068                           prodl	equ	0xFF3
  2069                           intcon	equ	0xFF2
  2070                           postinc0	equ	0xFEE
  2071                           fsr0h	equ	0xFEA
  2072                           fsr0l	equ	0xFE9
  2073                           wreg	equ	0xFE8
  2074                           fsr1h	equ	0xFE2
  2075                           fsr1l	equ	0xFE1
  2076                           bsr	equ	0xFE0
  2077                           indf2	equ	0xFDF
  2078                           fsr2h	equ	0xFDA
  2079                           fsr2l	equ	0xFD9
  2080                           status	equ	0xFD8
  2081                           
  2082 ;; *************** function _OpenUSART *****************
  2083 ;; Defined at:
  2084 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  config          1   39[COMRAM] unsigned char 
  2087 ;;  spbrg           2   40[COMRAM] unsigned int 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;		None               void
  2092 ;; Registers used:
  2093 ;;		wreg, status,2
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        3 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    4
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_initXbee
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text15
  2114  0003DA                     __ptext15:
  2115                           	opt stack 0
  2116  0003DA                     _OpenUSART:
  2117                           	opt stack 24
  2118                           
  2119                           ;incstack = 0
  2120                           ;incstack = 0
  2121  0003DA  0E00               	movlw	0
  2122  0003DC  6EAC               	movwf	4012,c	;volatile
  2123  0003DE  0E00               	movlw	0
  2124  0003E0  6EAB               	movwf	4011,c	;volatile
  2125  0003E2  B028               	btfsc	OpenUSART@config,0,c
  2126  0003E4  88AC               	bsf	4012,4,c	;volatile
  2127  0003E6  A228               	btfss	OpenUSART@config,1,c
  2128  0003E8  D002               	goto	l350
  2129  0003EA  8CAC               	bsf	4012,6,c	;volatile
  2130  0003EC  8CAB               	bsf	4011,6,c	;volatile
  2131  0003EE                     l350:
  2132  0003EE  B428               	btfsc	OpenUSART@config,2,c
  2133  0003F0  8EAC               	bsf	4012,7,c	;volatile
  2134  0003F2  A628               	btfss	OpenUSART@config,3,c
  2135  0003F4  D002               	goto	l352
  2136  0003F6  88AB               	bsf	4011,4,c	;volatile
  2137  0003F8  D001               	goto	l353
  2138  0003FA                     l352:
  2139  0003FA  8AAB               	bsf	4011,5,c	;volatile
  2140  0003FC                     l353:
  2141  0003FC  B828               	btfsc	OpenUSART@config,4,c
  2142  0003FE  84AC               	bsf	4012,2,c	;volatile
  2143  000400  989E               	bcf	3998,4,c	;volatile
  2144  000402  BA28               	btfsc	OpenUSART@config,5,c
  2145  000404  86AB               	bsf	4011,3,c	;volatile
  2146  000406  AC28               	btfss	OpenUSART@config,6,c
  2147  000408  D002               	goto	l356
  2148  00040A  8A9D               	bsf	3997,5,c	;volatile
  2149  00040C  D001               	goto	l357
  2150  00040E                     l356:
  2151  00040E  9A9D               	bcf	3997,5,c	;volatile
  2152  000410                     l357:
  2153  000410  9A9E               	bcf	3998,5,c	;volatile
  2154  000412  AE28               	btfss	OpenUSART@config,7,c
  2155  000414  D002               	goto	l358
  2156  000416  889D               	bsf	3997,4,c	;volatile
  2157  000418  D001               	goto	l359
  2158  00041A                     l358:
  2159  00041A  989D               	bcf	3997,4,c	;volatile
  2160  00041C                     l359:
  2161  00041C  C029  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2162  000420  502A               	movf	OpenUSART@spbrg+1,w,c
  2163  000422  6EB0               	movwf	4016,c	;volatile
  2164  000424  8AAC               	bsf	4012,5,c	;volatile
  2165  000426  8EAB               	bsf	4011,7,c	;volatile
  2166  000428  9C94               	bcf	3988,6,c	;volatile
  2167  00042A  8E94               	bsf	3988,7,c	;volatile
  2168  00042C  B8AC               	btfsc	4012,4,c	;volatile
  2169  00042E  BEAC               	btfsc	4012,7,c	;volatile
  2170  000430  D001               	goto	l361
  2171  000432  8C94               	bsf	3988,6,c	;volatile
  2172  000434                     l361:
  2173  000434  0012               	return	
  2174  000436                     __end_of_OpenUSART:
  2175                           	opt stack 0
  2176                           pclatu	equ	0xFFB
  2177                           pclath	equ	0xFFA
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           intcon	equ	0xFF2
  2185                           postinc0	equ	0xFEE
  2186                           fsr0h	equ	0xFEA
  2187                           fsr0l	equ	0xFE9
  2188                           wreg	equ	0xFE8
  2189                           fsr1h	equ	0xFE2
  2190                           fsr1l	equ	0xFE1
  2191                           bsr	equ	0xFE0
  2192                           indf2	equ	0xFDF
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _setupSPI *****************
  2198 ;; Defined at:
  2199 ;;		line 27 in file "spi_comm.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        3 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    5
  2220 ;; This function calls:
  2221 ;;		_OpenSPI
  2222 ;; This function is called by:
  2223 ;;		_InitApp
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text16
  2228  000602                     __ptext16:
  2229                           	opt stack 0
  2230  000602                     _setupSPI:
  2231                           	opt stack 24
  2232                           
  2233                           ;spi_comm.c: 28: (PORTBbits.RB0 = 1);
  2234                           
  2235                           ;incstack = 0
  2236                           ;incstack = 0
  2237  000602  8081               	bsf	3969,0,c	;volatile
  2238                           
  2239                           ;spi_comm.c: 29: (SSPCON1 &=0xDF);
  2240  000604  9AC6               	bcf	4038,5,c	;volatile
  2241                           
  2242                           ;spi_comm.c: 30: OpenSPI(0b00000000 & 0b00000101, 0b00000001, 0b00000000);
  2243  000606  6E2B               	movwf	??_setupSPI& (0+255),c
  2244  000608  0E00               	movlw	0
  2245  00060A  6E28               	movwf	?_OpenSPI,c
  2246  00060C  502B               	movf	??_setupSPI& (0+255),w,c
  2247  00060E  6E2C               	movwf	(??_setupSPI+1)& (0+255),c
  2248  000610  0E01               	movlw	1
  2249  000612  6E29               	movwf	?_OpenSPI+1,c
  2250  000614  502C               	movf	(??_setupSPI+1)& (0+255),w,c
  2251  000616  6E2D               	movwf	(??_setupSPI+2)& (0+255),c
  2252  000618  0E00               	movlw	0
  2253  00061A  6E2A               	movwf	?_OpenSPI+2,c
  2254  00061C  502D               	movf	(??_setupSPI+2)& (0+255),w,c
  2255  00061E  EC75  F002         	call	_OpenSPI	;wreg free
  2256  000622  0012               	return	
  2257  000624                     __end_of_setupSPI:
  2258                           	opt stack 0
  2259                           pclatu	equ	0xFFB
  2260                           pclath	equ	0xFFA
  2261                           tblptru	equ	0xFF8
  2262                           tblptrh	equ	0xFF7
  2263                           tblptrl	equ	0xFF6
  2264                           tablat	equ	0xFF5
  2265                           prodh	equ	0xFF4
  2266                           prodl	equ	0xFF3
  2267                           intcon	equ	0xFF2
  2268                           postinc0	equ	0xFEE
  2269                           fsr0h	equ	0xFEA
  2270                           fsr0l	equ	0xFE9
  2271                           wreg	equ	0xFE8
  2272                           fsr1h	equ	0xFE2
  2273                           fsr1l	equ	0xFE1
  2274                           bsr	equ	0xFE0
  2275                           indf2	equ	0xFDF
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _OpenSPI *****************
  2281 ;; Defined at:
  2282 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_open.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  sync_mode       1   39[COMRAM] unsigned char 
  2285 ;;  bus_mode        1   40[COMRAM] unsigned char 
  2286 ;;  smp_phase       1   41[COMRAM] unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;Total ram usage:        3 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_setupSPI
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text17
  2313  0004EA                     __ptext17:
  2314                           	opt stack 0
  2315  0004EA                     _OpenSPI:
  2316                           	opt stack 24
  2317                           
  2318                           ;incstack = 0
  2319                           ;incstack = 0
  2320  0004EA  0E3F               	movlw	63
  2321  0004EC  16C7               	andwf	4039,f,c	;volatile
  2322  0004EE  0E00               	movlw	0
  2323  0004F0  6EC6               	movwf	4038,c	;volatile
  2324  0004F2  5028               	movf	OpenSPI@sync_mode,w,c
  2325  0004F4  12C6               	iorwf	4038,f,c	;volatile
  2326  0004F6  502A               	movf	OpenSPI@smp_phase,w,c
  2327  0004F8  12C7               	iorwf	4039,f,c	;volatile
  2328  0004FA  D005               	goto	l1217
  2329  0004FC                     l257:
  2330  0004FC  8CC7               	bsf	4039,6,c	;volatile
  2331  0004FE  D015               	goto	l1221
  2332  000500                     l259:
  2333  000500  8CC7               	bsf	4039,6,c	;volatile
  2334  000502                     l260:
  2335  000502  88C6               	bsf	4038,4,c	;volatile
  2336  000504  D012               	goto	l1221
  2337  000506                     l1217:
  2338  000506  5029               	movf	OpenSPI@bus_mode,w,c
  2339                           
  2340                           ; Switch size 1, requested type "space"
  2341                           ; Number of cases is 3, Range of values is 0 to 3
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte           10     6 (average)
  2345                           ;	Chosen strategy is simple_byte
  2346  000508  0A00               	xorlw	0	; case 0
  2347  00050A  B4D8               	btfsc	status,2,c
  2348  00050C  D7F7               	goto	l257
  2349  00050E  0A02               	xorlw	2	; case 2
  2350  000510  B4D8               	btfsc	status,2,c
  2351  000512  D7F6               	goto	l259
  2352  000514  0A01               	xorlw	1	; case 3
  2353  000516  B4D8               	btfsc	status,2,c
  2354  000518  D7F4               	goto	l260
  2355  00051A  D007               	goto	l1221
  2356  00051C                     l263:
  2357  00051C  8694               	bsf	3988,3,c	;volatile
  2358  00051E  8A92               	bsf	3986,5,c	;volatile
  2359  000520  D00C               	goto	l264
  2360  000522                     l265:
  2361  000522  8694               	bsf	3988,3,c	;volatile
  2362  000524  D00A               	goto	l264
  2363  000526                     l266:
  2364  000526  9694               	bcf	3988,3,c	;volatile
  2365  000528  D008               	goto	l264
  2366  00052A                     l1221:
  2367  00052A  5028               	movf	OpenSPI@sync_mode,w,c
  2368                           
  2369                           ; Switch size 1, requested type "space"
  2370                           ; Number of cases is 2, Range of values is 4 to 5
  2371                           ; switch strategies available:
  2372                           ; Name         Instructions Cycles
  2373                           ; simple_byte            7     4 (average)
  2374                           ;	Chosen strategy is simple_byte
  2375  00052C  0A04               	xorlw	4	; case 4
  2376  00052E  B4D8               	btfsc	status,2,c
  2377  000530  D7F5               	goto	l263
  2378  000532  0A01               	xorlw	1	; case 5
  2379  000534  B4D8               	btfsc	status,2,c
  2380  000536  D7F5               	goto	l265
  2381  000538  D7F6               	goto	l266
  2382  00053A                     l264:
  2383  00053A  8894               	bsf	3988,4,c	;volatile
  2384  00053C  9A94               	bcf	3988,5,c	;volatile
  2385  00053E  8AC6               	bsf	4038,5,c	;volatile
  2386  000540  0012               	return	
  2387  000542                     __end_of_OpenSPI:
  2388                           	opt stack 0
  2389                           pclatu	equ	0xFFB
  2390                           pclath	equ	0xFFA
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           postinc0	equ	0xFEE
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           fsr1h	equ	0xFE2
  2403                           fsr1l	equ	0xFE1
  2404                           bsr	equ	0xFE0
  2405                           indf2	equ	0xFDF
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _OpenADC *****************
  2411 ;; Defined at:
  2412 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  config          1   39[COMRAM] unsigned char 
  2415 ;;  config2         1   40[COMRAM] unsigned char 
  2416 ;;  portconfig      1   41[COMRAM] unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;		None               void
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:        5 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    4
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_InitApp
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text18
  2443  000436                     __ptext18:
  2444                           	opt stack 0
  2445  000436                     _OpenADC:
  2446                           	opt stack 25
  2447                           
  2448                           ;incstack = 0
  2449                           ;incstack = 0
  2450  000436  0E00               	movlw	0
  2451  000438  6EC2               	movwf	4034,c	;volatile
  2452  00043A  0E00               	movlw	0
  2453  00043C  6EC0               	movwf	4032,c	;volatile
  2454  00043E  90D8               	bcf	status,0,c
  2455  000440  3029               	rrcf	OpenADC@config2,w,c
  2456  000442  0B3C               	andlw	60
  2457  000444  6EC2               	movwf	4034,c	;volatile
  2458  000446  C029  F02B         	movff	OpenADC@config2,??_OpenADC
  2459  00044A  3A2B               	swapf	??_OpenADC,f,c
  2460  00044C  0EF0               	movlw	240
  2461  00044E  162B               	andwf	??_OpenADC,f,c
  2462  000450  0E30               	movlw	48
  2463  000452  162B               	andwf	??_OpenADC,f,c
  2464  000454  502A               	movf	OpenADC@portconfig,w,c
  2465  000456  0B0F               	andlw	15
  2466  000458  102B               	iorwf	??_OpenADC,w,c
  2467  00045A  6EC1               	movwf	4033,c	;volatile
  2468  00045C  C028  F02B         	movff	OpenADC@config,??_OpenADC
  2469  000460  90D8               	bcf	status,0,c
  2470  000462  362B               	rlcf	??_OpenADC,f,c
  2471  000464  90D8               	bcf	status,0,c
  2472  000466  362B               	rlcf	??_OpenADC,f,c
  2473  000468  0E38               	movlw	56
  2474  00046A  162B               	andwf	??_OpenADC,f,c
  2475  00046C  C028  F02C         	movff	OpenADC@config,??_OpenADC+1
  2476  000470  3A2C               	swapf	??_OpenADC+1,f,c
  2477  000472  0E0F               	movlw	15
  2478  000474  162C               	andwf	??_OpenADC+1,f,c
  2479  000476  0E07               	movlw	7
  2480  000478  162C               	andwf	??_OpenADC+1,f,c
  2481  00047A  5028               	movf	OpenADC@config,w,c
  2482  00047C  0B80               	andlw	128
  2483  00047E  102C               	iorwf	??_OpenADC+1,w,c
  2484  000480  102B               	iorwf	??_OpenADC,w,c
  2485  000482  6EC0               	movwf	4032,c	;volatile
  2486  000484  AE29               	btfss	OpenADC@config2,7,c
  2487  000486  D003               	goto	l233
  2488  000488  9C9E               	bcf	3998,6,c	;volatile
  2489  00048A  8C9D               	bsf	3997,6,c	;volatile
  2490  00048C  8CF2               	bsf	intcon,6,c	;volatile
  2491  00048E                     l233:
  2492  00048E  80C2               	bsf	4034,0,c	;volatile
  2493  000490  0012               	return	
  2494  000492                     __end_of_OpenADC:
  2495                           	opt stack 0
  2496                           pclatu	equ	0xFFB
  2497                           pclath	equ	0xFFA
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           prodh	equ	0xFF4
  2503                           prodl	equ	0xFF3
  2504                           intcon	equ	0xFF2
  2505                           postinc0	equ	0xFEE
  2506                           fsr0h	equ	0xFEA
  2507                           fsr0l	equ	0xFE9
  2508                           wreg	equ	0xFE8
  2509                           fsr1h	equ	0xFE2
  2510                           fsr1l	equ	0xFE1
  2511                           bsr	equ	0xFE0
  2512                           indf2	equ	0xFDF
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517 ;; *************** function _CloseADC *****************
  2518 ;; Defined at:
  2519 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcclose.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		None
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    4
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_InitApp
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text19
  2548  0006F4                     __ptext19:
  2549                           	opt stack 0
  2550  0006F4                     _CloseADC:
  2551                           	opt stack 25
  2552                           
  2553                           ;incstack = 0
  2554                           ;incstack = 0
  2555  0006F4  90C2               	bcf	4034,0,c	;volatile
  2556  0006F6  9C9D               	bcf	3997,6,c	;volatile
  2557  0006F8  0012               	return	
  2558  0006FA                     __end_of_CloseADC:
  2559                           	opt stack 0
  2560                           pclatu	equ	0xFFB
  2561                           pclath	equ	0xFFA
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           prodh	equ	0xFF4
  2567                           prodl	equ	0xFF3
  2568                           intcon	equ	0xFF2
  2569                           postinc0	equ	0xFEE
  2570                           fsr0h	equ	0xFEA
  2571                           fsr0l	equ	0xFE9
  2572                           wreg	equ	0xFE8
  2573                           fsr1h	equ	0xFE2
  2574                           fsr1l	equ	0xFE1
  2575                           bsr	equ	0xFE0
  2576                           indf2	equ	0xFDF
  2577                           fsr2h	equ	0xFDA
  2578                           fsr2l	equ	0xFD9
  2579                           status	equ	0xFD8
  2580                           
  2581 ;; *************** function _WriteTimer0 *****************
  2582 ;; Defined at:
  2583 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  timer0          2   39[COMRAM] unsigned int 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  timer           2   41[COMRAM] struct Timers
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		None
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        4 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    4
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;;		_InitApp
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text20
  2613  0006C2                     __ptext20:
  2614                           	opt stack 0
  2615  0006C2                     _WriteTimer0:
  2616                           	opt stack 26
  2617                           
  2618                           ;incstack = 0
  2619                           ;incstack = 0
  2620  0006C2  C028  F02A         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2621  0006C6  C029  F02B         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2622  0006CA  C02B  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2623  0006CE  C02A  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2624  0006D2  0012               	return	
  2625  0006D4                     __end_of_WriteTimer0:
  2626                           	opt stack 0
  2627                           pclatu	equ	0xFFB
  2628                           pclath	equ	0xFFA
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           intcon	equ	0xFF2
  2636                           postinc0	equ	0xFEE
  2637                           fsr0h	equ	0xFEA
  2638                           fsr0l	equ	0xFE9
  2639                           wreg	equ	0xFE8
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           bsr	equ	0xFE0
  2643                           indf2	equ	0xFDF
  2644                           fsr2h	equ	0xFDA
  2645                           fsr2l	equ	0xFD9
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _ConfigureOscillator *****************
  2649 ;; Defined at:
  2650 ;;		line 25 in file "system.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		None
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    4
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text21
  2679  0006FE                     __ptext21:
  2680                           	opt stack 0
  2681  0006FE                     _ConfigureOscillator:
  2682                           	opt stack 26
  2683                           
  2684                           ;incstack = 0
  2685                           ;incstack = 0
  2686  0006FE  0012               	return	
  2687  000700                     __end_of_ConfigureOscillator:
  2688                           	opt stack 0
  2689                           pclatu	equ	0xFFB
  2690                           pclath	equ	0xFFA
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           prodh	equ	0xFF4
  2696                           prodl	equ	0xFF3
  2697                           intcon	equ	0xFF2
  2698                           postinc0	equ	0xFEE
  2699                           fsr0h	equ	0xFEA
  2700                           fsr0l	equ	0xFE9
  2701                           wreg	equ	0xFE8
  2702                           fsr1h	equ	0xFE2
  2703                           fsr1l	equ	0xFE1
  2704                           bsr	equ	0xFE0
  2705                           indf2	equ	0xFDF
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _high_isr *****************
  2711 ;; Defined at:
  2712 ;;		line 38 in file "interrupts.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;		None               void
  2719 ;; Registers used:
  2720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:       15 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    2
  2733 ;; This function calls:
  2734 ;;		_getsUSART
  2735 ;; This function is called by:
  2736 ;;		Interrupt level 2
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	intcode
  2741  000008                     __pintcode:
  2742                           	opt stack 0
  2743  000008                     _high_isr:
  2744                           	opt stack 24
  2745                           
  2746                           ;incstack = 0
  2747  000008  CFFA F01A          	movff	pclath,??_high_isr+1
  2748  00000C  CFFB F01B          	movff	pclatu,??_high_isr+2
  2749  000010  ED10  F001         	call	int_func,f	;refresh shadow registers
  2750                           pclatu	equ	0xFFB
  2751                           pclath	equ	0xFFA
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           intcon	equ	0xFF2
  2759                           postinc0	equ	0xFEE
  2760                           fsr0h	equ	0xFEA
  2761                           fsr0l	equ	0xFE9
  2762                           wreg	equ	0xFE8
  2763                           fsr1h	equ	0xFE2
  2764                           fsr1l	equ	0xFE1
  2765                           bsr	equ	0xFE0
  2766                           indf2	equ	0xFDF
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           
  2771                           	psect	intcode_body
  2772  000220                     __pintcode_body:
  2773                           	opt stack 24
  2774  000220                     int_func:
  2775                           	opt stack 24
  2776  000220  0006               	pop		; remove dummy address from shadow register refresh
  2777  000222  CFE9 F01C          	movff	fsr0l,??_high_isr+3
  2778  000226  CFEA F01D          	movff	fsr0h,??_high_isr+4
  2779  00022A  CFE1 F01E          	movff	fsr1l,??_high_isr+5
  2780  00022E  CFE2 F01F          	movff	fsr1h,??_high_isr+6
  2781  000232  CFD9 F020          	movff	fsr2l,??_high_isr+7
  2782  000236  CFDA F021          	movff	fsr2h,??_high_isr+8
  2783  00023A  CFF3 F022          	movff	prodl,??_high_isr+9
  2784  00023E  CFF4 F023          	movff	prodh,??_high_isr+10
  2785  000242  CFF6 F024          	movff	tblptrl,??_high_isr+11
  2786  000246  CFF7 F025          	movff	tblptrh,??_high_isr+12
  2787  00024A  CFF8 F026          	movff	tblptru,??_high_isr+13
  2788  00024E  CFF5 F027          	movff	tablat,??_high_isr+14
  2789  000252                     
  2790                           ;interrupts.c: 50: if((PIR1bits.RCIF))
  2791  000252  AA9E               	btfss	3998,5,c	;volatile
  2792  000254  D001               	goto	i2u1_41
  2793  000256  D001               	goto	i2u1_40
  2794  000258                     i2u1_41:
  2795  000258  D022               	goto	i2l19
  2796  00025A                     i2u1_40:
  2797  00025A                     
  2798                           ;interrupts.c: 51: {
  2799                           ;interrupts.c: 52: getsUSART((char *) recvBuff, 6);
  2800  00025A  0E00               	movlw	high _recvBuff
  2801  00025C  6E14               	movwf	?_getsUSART+1,c
  2802  00025E  0E63               	movlw	low _recvBuff
  2803  000260  6E13               	movwf	?_getsUSART,c
  2804  000262  6E19               	movwf	??_high_isr& (0+255),c
  2805  000264  0E06               	movlw	6
  2806  000266  6E15               	movwf	?_getsUSART+2,c
  2807  000268  5019               	movf	??_high_isr& (0+255),w,c
  2808  00026A  ECD6  F002         	call	_getsUSART	;wreg free
  2809  00026E                     
  2810                           ;interrupts.c: 53: if(recvBuff[0] == 0x4E && recvBuff[1] == 0x4E && recvBuff[2] == 0x4E)
  2811  00026E  5063               	movf	_recvBuff,w,c
  2812  000270  0A4E               	xorlw	78
  2813  000272  A4D8               	btfss	status,2,c
  2814  000274  D001               	goto	i2u2_41
  2815  000276  D001               	goto	i2u2_40
  2816  000278                     i2u2_41:
  2817  000278  D012               	goto	i2l19
  2818  00027A                     i2u2_40:
  2819  00027A  5064               	movf	_recvBuff+1,w,c
  2820  00027C  0A4E               	xorlw	78
  2821  00027E  A4D8               	btfss	status,2,c
  2822  000280  D001               	goto	i2u3_41
  2823  000282  D001               	goto	i2u3_40
  2824  000284                     i2u3_41:
  2825  000284  D00C               	goto	i2l19
  2826  000286                     i2u3_40:
  2827  000286  5065               	movf	_recvBuff+2,w,c
  2828  000288  0A4E               	xorlw	78
  2829  00028A  A4D8               	btfss	status,2,c
  2830  00028C  D001               	goto	i2u4_41
  2831  00028E  D001               	goto	i2u4_40
  2832  000290                     i2u4_41:
  2833  000290  D006               	goto	i2l19
  2834  000292                     i2u4_40:
  2835  000292                     
  2836                           ;interrupts.c: 54: {
  2837                           ;interrupts.c: 55: pollRecv = 1;
  2838  000292  6E19               	movwf	??_high_isr& (0+255),c
  2839  000294  0E01               	movlw	1
  2840  000296  6E60               	movwf	_pollRecv,c
  2841  000298  5019               	movf	??_high_isr& (0+255),w,c
  2842  00029A  D001               	goto	i2l19
  2843  00029C  D000               	goto	i2l19
  2844  00029E                     i2l19:
  2845  00029E  C027  FFF5         	movff	??_high_isr+14,tablat
  2846  0002A2  C026  FFF8         	movff	??_high_isr+13,tblptru
  2847  0002A6  C025  FFF7         	movff	??_high_isr+12,tblptrh
  2848  0002AA  C024  FFF6         	movff	??_high_isr+11,tblptrl
  2849  0002AE  C023  FFF4         	movff	??_high_isr+10,prodh
  2850  0002B2  C022  FFF3         	movff	??_high_isr+9,prodl
  2851  0002B6  C021  FFDA         	movff	??_high_isr+8,fsr2h
  2852  0002BA  C020  FFD9         	movff	??_high_isr+7,fsr2l
  2853  0002BE  C01F  FFE2         	movff	??_high_isr+6,fsr1h
  2854  0002C2  C01E  FFE1         	movff	??_high_isr+5,fsr1l
  2855  0002C6  C01D  FFEA         	movff	??_high_isr+4,fsr0h
  2856  0002CA  C01C  FFE9         	movff	??_high_isr+3,fsr0l
  2857  0002CE  C01B  FFFB         	movff	??_high_isr+2,pclatu
  2858  0002D2  C01A  FFFA         	movff	??_high_isr+1,pclath
  2859  0002D6  0011               	retfie		f
  2860  0002D8                     __end_of_high_isr:
  2861                           	opt stack 0
  2862                           pclatu	equ	0xFFB
  2863                           pclath	equ	0xFFA
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           intcon	equ	0xFF2
  2871                           postinc0	equ	0xFEE
  2872                           fsr0h	equ	0xFEA
  2873                           fsr0l	equ	0xFE9
  2874                           wreg	equ	0xFE8
  2875                           fsr1h	equ	0xFE2
  2876                           fsr1l	equ	0xFE1
  2877                           bsr	equ	0xFE0
  2878                           indf2	equ	0xFDF
  2879                           fsr2h	equ	0xFDA
  2880                           fsr2l	equ	0xFD9
  2881                           status	equ	0xFD8
  2882                           
  2883 ;; *************** function _getsUSART *****************
  2884 ;; Defined at:
  2885 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\ugets.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  2888 ;;		 -> recvBuff(6), 
  2889 ;;  len             1   20[COMRAM] unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  i               1   23[COMRAM] unsigned char 
  2892 ;;  data            1   22[COMRAM] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;		None               void
  2895 ;; Registers used:
  2896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;Total ram usage:        6 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		_ReadUSART
  2911 ;; This function is called by:
  2912 ;;		_high_isr
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text24
  2917  0005AC                     __ptext24:
  2918                           	opt stack 0
  2919  0005AC                     _getsUSART:
  2920                           	opt stack 24
  2921                           
  2922                           ;incstack = 0
  2923                           ;incstack = 0
  2924  0005AC  6E16               	movwf	??_getsUSART& (0+255),c
  2925  0005AE  0E00               	movlw	0
  2926  0005B0  6E18               	movwf	getsUSART@i,c
  2927  0005B2  5016               	movf	??_getsUSART& (0+255),w,c
  2928  0005B4  D00E               	goto	i2l993
  2929  0005B6                     i2l324:
  2930  0005B6  AA9E               	btfss	3998,5,c	;volatile
  2931  0005B8  D7FE               	goto	i2l324
  2932  0005BA  EC30  F003         	call	_ReadUSART	;wreg free
  2933  0005BE  6E17               	movwf	getsUSART@data,c
  2934  0005C0  C013  FFD9         	movff	getsUSART@buffer,fsr2l
  2935  0005C4  C014  FFDA         	movff	getsUSART@buffer+1,fsr2h
  2936  0005C8  C017  FFDF         	movff	getsUSART@data,indf2
  2937  0005CC  4A13               	infsnz	getsUSART@buffer,f,c
  2938  0005CE  2A14               	incf	getsUSART@buffer+1,f,c
  2939  0005D0  2A18               	incf	getsUSART@i,f,c
  2940  0005D2                     i2l993:
  2941  0005D2  5015               	movf	getsUSART@len,w,c
  2942  0005D4  5C18               	subwf	getsUSART@i,w,c
  2943  0005D6  B0D8               	btfsc	status,0,c
  2944  0005D8  0012               	return	
  2945  0005DA  D7ED               	goto	i2l324
  2946  0005DC                     __end_of_getsUSART:
  2947                           	opt stack 0
  2948                           pclatu	equ	0xFFB
  2949                           pclath	equ	0xFFA
  2950                           tblptru	equ	0xFF8
  2951                           tblptrh	equ	0xFF7
  2952                           tblptrl	equ	0xFF6
  2953                           tablat	equ	0xFF5
  2954                           prodh	equ	0xFF4
  2955                           prodl	equ	0xFF3
  2956                           intcon	equ	0xFF2
  2957                           postinc0	equ	0xFEE
  2958                           fsr0h	equ	0xFEA
  2959                           fsr0l	equ	0xFE9
  2960                           wreg	equ	0xFE8
  2961                           fsr1h	equ	0xFE2
  2962                           fsr1l	equ	0xFE1
  2963                           bsr	equ	0xFE0
  2964                           indf2	equ	0xFDF
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _ReadUSART *****************
  2970 ;; Defined at:
  2971 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  data            1   17[COMRAM] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;Total ram usage:        1 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_getsUSART
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text25
  2999  000660                     __ptext25:
  3000                           	opt stack 0
  3001  000660                     _ReadUSART:
  3002                           	opt stack 24
  3003                           
  3004                           ;incstack = 0
  3005                           ;incstack = 0
  3006  000660  0EF2               	movlw	242
  3007  000662  165F               	andwf	_USART_Status,f,c
  3008  000664  ACAB               	btfss	4011,6,c	;volatile
  3009  000666  D003               	goto	i2l370
  3010  000668  905F               	bcf	_USART_Status,0,c
  3011  00066A  B0AB               	btfsc	4011,0,c	;volatile
  3012  00066C  805F               	bsf	_USART_Status,0,c
  3013  00066E                     i2l370:
  3014  00066E  B4AB               	btfsc	4011,2,c	;volatile
  3015  000670  845F               	bsf	_USART_Status,2,c
  3016  000672  B2AB               	btfsc	4011,1,c	;volatile
  3017  000674  865F               	bsf	_USART_Status,3,c
  3018  000676  CFAE F012          	movff	4014,ReadUSART@data	;volatile
  3019  00067A  5012               	movf	ReadUSART@data,w,c
  3020  00067C  0012               	return	
  3021  00067E                     __end_of_ReadUSART:
  3022                           	opt stack 0
  3023  0000                     pclatu	equ	0xFFB
  3024                           pclath	equ	0xFFA
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           prodh	equ	0xFF4
  3030                           prodl	equ	0xFF3
  3031                           intcon	equ	0xFF2
  3032                           postinc0	equ	0xFEE
  3033                           fsr0h	equ	0xFEA
  3034                           fsr0l	equ	0xFE9
  3035                           wreg	equ	0xFE8
  3036                           fsr1h	equ	0xFE2
  3037                           fsr1l	equ	0xFE1
  3038                           bsr	equ	0xFE0
  3039                           indf2	equ	0xFDF
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           pclatu	equ	0xFFB
  3044                           pclath	equ	0xFFA
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           prodh	equ	0xFF4
  3050                           prodl	equ	0xFF3
  3051                           intcon	equ	0xFF2
  3052                           postinc0	equ	0xFEE
  3053                           fsr0h	equ	0xFEA
  3054                           fsr0l	equ	0xFE9
  3055                           wreg	equ	0xFE8
  3056                           fsr1h	equ	0xFE2
  3057                           fsr1l	equ	0xFE1
  3058                           bsr	equ	0xFE0
  3059                           indf2	equ	0xFDF
  3060                           fsr2h	equ	0xFDA
  3061                           fsr2l	equ	0xFD9
  3062                           status	equ	0xFD8
  3063                           
  3064                           	psect	rparam
  3065  0000                     pclatu	equ	0xFFB
  3066                           pclath	equ	0xFFA
  3067                           tblptru	equ	0xFF8
  3068                           tblptrh	equ	0xFF7
  3069                           tblptrl	equ	0xFF6
  3070                           tablat	equ	0xFF5
  3071                           prodh	equ	0xFF4
  3072                           prodl	equ	0xFF3
  3073                           intcon	equ	0xFF2
  3074                           postinc0	equ	0xFEE
  3075                           fsr0h	equ	0xFEA
  3076                           fsr0l	equ	0xFE9
  3077                           wreg	equ	0xFE8
  3078                           fsr1h	equ	0xFE2
  3079                           fsr1l	equ	0xFE1
  3080                           bsr	equ	0xFE0
  3081                           indf2	equ	0xFDF
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     54     104
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> recvBuff(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_InitApp
    _recvSPI->_ReadSPI
    _sendSPI->_WriteSPI
    _readTemperature->_ReadADC
    _sendXbee->_WriteUSART
    _InitApp->_initXbee
    _initXbee->_OpenUSART
    _setupSPI->_OpenSPI

Critical Paths under _high_isr in COMRAM

    _high_isr->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     840
                                             50 COMRAM     4     4      0
                _ConfigureOscillator
                            _InitApp
                           _sendXbee
                    _readTemperature
                            _sendSPI
                            _recvSPI
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _recvSPI                                              1     0      1      15
                                             40 COMRAM     1     0      1
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (2) _ReadSPI                                              1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendSPI                                              2     0      2      45
                                             41 COMRAM     2     0      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     1      1      15
                                             39 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      4     3      1     150
                                             41 COMRAM     4     3      1
                         _selectTemp
                         _ConvertADC
                            _BusyADC
                            _ReadADC
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              2     0      2       0
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _selectTemp                                           1     0      1      15
                                             39 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _sendXbee                                             2     2      0      60
                                             40 COMRAM     2     2      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      15
                                             39 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0     480
                                             47 COMRAM     3     3      0
                        _WriteTimer0
                           _CloseADC
                            _OpenADC
                           _setupSPI
                           _initXbee
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     0      1      30
                                             39 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _initXbee                                             5     5      0     240
                                             42 COMRAM     5     5      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     0      3     150
                                             39 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _setupSPI                                             3     3      0      60
                                             42 COMRAM     3     3      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     0      3      60
                                             39 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     105
                                             39 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2      45
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            15    15      0      75
                                             24 COMRAM    15    15      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (6) _getsUSART                                            6     3      3      75
                                             18 COMRAM     6     3      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _WriteTimer0
     _CloseADC
     _OpenADC
     _setupSPI
       _OpenSPI
     _initXbee
       _OpenUSART
     _OpenTimer0
   _sendXbee
     _WriteUSART
   _readTemperature
     _selectTemp
     _ConvertADC
     _BusyADC
     _ReadADC
   _sendSPI
     _WriteSPI
   _recvSPI
     _ReadSPI
   _WriteTimer0

 _low_isr (ROOT)

 _high_isr (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     36      68       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       9       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68      34        0.0%
DATA                 0      0      71       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Sat Nov 09 05:15:58 2013

                      _SSPSTATbits 000FC7                                 l56 00F2  
                               bsr 000FE0                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                        __CFG_OSC$EC 000000  
                     __CFG_CP3$OFF 000000                        __CFG_LVP$ON 000000  
                      __CFG_WDT$ON 000000                                l120 05AA  
                              l115 057C                                l132 03D8  
                              l117 0580                                l118 0586  
                              l119 058A                                l151 05DE  
                              l233 048E                                l306 065A  
                              l162 0626                                l307 065C  
                              l260 0502                                l350 03EE  
                              l158 0600                                l263 051C  
                              l264 053A                                l352 03FA  
                              l265 0522                                l257 04FC  
                              l361 0434                                l353 03FC  
                              l266 0526                                l274 06BA  
                              l259 0500                                l291 0692  
                              l356 040E                                l196 056E  
                              l357 0410                                l358 041A  
                              l359 041C                                l383 06DE  
                              l199 0578                                l289 0698  
                              l997 00AE                       getsUSART@len 0015  
                     __CFG_CPB$OFF 000000                                u417 013C  
                     __CFG_CPD$OFF 000000                                u427 0152  
                              u437 016C                                u447 018A  
                              u457 01A0                                u467 01BA  
                              u477 01D8                                u487 01EE  
                              u497 0208               __size_of_WriteTimer0 0012  
                              wreg 000FE8                               l1101 03BE  
                             l1013 00E6                               l1105 05E0  
                             l1121 063E                               l1221 052A  
                             l1109 05F2                               l1119 0630  
                             l1217 0506                               l1161 0308  
                             l1091 03A6                               l1083 038E  
                             l1173 0336                               l1095 03B2  
                             l1087 039A                               l1079 0376  
                             l1195 0590                      getsUSART@data 0017  
                             i1l22 005C                               i2l17 029E  
                             i2l18 029C                               i2l19 029E  
                             _main 00A6                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00A2  
                    __CFG_IESO$OFF 000000                      __CFG_MCLRE$ON 000000  
                  __end_of_BusyADC 06F4                    __end_of_ReadADC 06EE  
                  __end_of_InitApp 04EA                    __end_of_ReadSPI 06C2  
                  __end_of_OpenADC 0492                    __end_of_OpenSPI 0542  
                            ?_main 0001                              _T0CON 000FD5  
                            i2l324 05B6                              i2l370 066E  
                            i2l971 0252                              i2l981 0292  
                            i2l973 025A                              i2l975 026E  
                            i2l993 05D2                              i2l977 027A  
                            i2l979 0286                              _RCREG 000FAE  
                            _RCSTA 000FAB                              _TMR0H 000FD7  
                            _TMR0L 000FD6                              _SPBRG 000FAF  
                            _PORTB 000F81                              _TRISA 000F92  
                            _TRISB 000F93                              _TXREG 000FAD  
                            _TXSTA 000FAC                _ConfigureOscillator 06FE  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                  __end_of_recvSPI 0642                    __end_of_sendSPI 0602  
                            main@i 0035                         _ConvertADC 06FA  
                  __end_of_low_isr 00A2                              tablat 000FF5  
                            status 000FD8               ?_ConfigureOscillator 0001  
                 __end_of_CloseADC 06FA                     WriteUSART@data 0028  
                  __initialization 069A                       __end_of_main 0220  
                           ??_main 0033                      __activetblptr 000002  
                  _readTemperature 0366                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 __end_of_WriteSPI 069A                    getsUSART@buffer 0013  
                       _OpenTimer0 0642                 __size_of_ReadUSART 001E  
                           _SPBRGH 000FB0                             i2u1_40 025A  
                           i2u1_41 0258                             i2u2_40 027A  
                           i2u2_41 0278                             i2u3_40 0286  
                           i2u3_41 0284                             i2u4_40 0292  
                           i2u4_41 0290                             _SSPBUF 000FC9  
                        ??_BusyADC 0028                          ??_ReadADC 002A  
                        ??_InitApp 0030                          ??_ReadSPI 0028  
            ??_ConfigureOscillator 0028                          ??_OpenADC 002B  
                        ??_OpenSPI 002B                     __CFG_XINST$OFF 000000  
                 __end_of_high_isr 02D8                 __size_of_OpenUSART 005C  
                   __CFG_STVREN$ON 000000                   OpenTimer0@config 0028  
                 __end_of_initXbee 0366                             clear_0 06A0  
readTemperature@TemperatureReading 002C                    WriteSPI@TempVar 0029  
                 __end_of_sendXbee 057A                          ??_recvSPI 002A  
                        ??_sendSPI 002C                   __end_of_setupSPI 0624  
                        ??_low_isr 0001                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                      ?_ConvertADC 0001                         __accesstop 0080  
          __end_of__initialization 06A6                    __CFG_PBADEN$OFF 000000  
                       _WriteUSART 06D4                     __pcstackCOMRAM 0001  
               readTemperature@sel 002A            __end_of_readTemperature 03DA  
                __end_of_ReadUSART 067E                 __size_of_getsUSART 0030  
                    ReadUSART@data 0012                          ?_CloseADC 0001  
                __end_of_OpenUSART 0436                        ?_OpenTimer0 0028  
                 WriteTimer0@timer 002A                      ??_WriteTimer0 002A  
              __size_of_ConvertADC 0004                          ?_WriteSPI 0028  
                       ??_CloseADC 0028                            _SSPCON1 000FC6  
                        ?_high_isr 0001                            _SSPSTAT 000FC7  
                        ?_initXbee 0001                            _BusyADC 06EE  
                          _ReadADC 06E4                            _InitApp 0492  
                          _ReadSPI 06B0                            _OpenADC 0436  
                        ?_sendXbee 0001                            _OpenSPI 04EA  
                          __Hparam 0000                            __Lparam 0000  
                __end_of_getsUSART 05DC                        ?_WriteUSART 0028  
                        ?_setupSPI 0001                     sendSPI@command 002B  
                          __pcinit 069A                   ?_readTemperature 002A  
                          __ramtop 1000                         ??_WriteSPI 0029  
              __size_of_OpenTimer0 001E                            __ptext0 00A6  
                          __ptext1 0624                            __ptext2 06B0  
                          __ptext3 05DC                            __ptext4 067E  
                          __ptext5 0366                            __ptext6 06E4  
                          __ptext7 06EE                            __ptext8 06FA  
                          __ptext9 057A                          _T0CONbits 000FD5  
                          _recvSPI 0624                            _recvIdx 0061  
                          _sendSPI 05DC                            _sendIdx 0062  
              __end_of_WriteTimer0 06D4                            _low_isr 0018  
                   OpenADC@config2 0029                         ??_high_isr 0019  
                   __pintcode_body 0220               end_of_initialization 06A6  
                       ??_initXbee 002B                         _selectTemp 057A  
                    __Lmediumconst 0000                            int_func 0220  
                       ??_sendXbee 0029                          _RCSTAbits 000FAB  
                       ??_setupSPI 002B                   WriteSPI@data_out 0028  
                          postinc0 000FEE                          _PORTBbits 000F81  
                        _TRISAbits 000F92                          _TRISCbits 000F94  
                    selectTemp@sel 0028                       recvSPI@slave 0029  
                       getsUSART@i 0018                __size_of_WriteUSART 0010  
                     ??_ConvertADC 0028        __end_of_ConfigureOscillator 0700  
                        _TXSTAbits 000FAC                        _WriteTimer0 06C2  
               __end_of_ConvertADC 06FE                   OpenSPI@smp_phase 002A  
              start_initialization 069A                          _ReadUSART 0660  
                   ReadSPI@TempVar 0028                   OpenSPI@sync_mode 0028  
                     ??_OpenTimer0 0029                  __size_of_CloseADC 0006  
                        _OpenUSART 03DA                        ?_selectTemp 0028  
                     sendSPI@slave 002A                   __CFG_LPT1OSC$OFF 000000  
               __end_of_OpenTimer0 0660                  __size_of_WriteSPI 001C  
                      __pbssCOMRAM 0037                         ?_ReadUSART 0001  
                       ?_OpenUSART 0028                  __size_of_high_isr 02D0  
                         ?_BusyADC 0001                           ?_ReadADC 0028  
                         ?_InitApp 0001                           ?_ReadSPI 0001  
                OpenADC@portconfig 002A                  __size_of_initXbee 008E  
                         ?_OpenADC 0028                           ?_OpenSPI 0028  
                __CFG_CCP2MX$PORTC 000000                       ??_WriteUSART 0029  
                        __pintcode 0008                  __size_of_sendXbee 0038  
                __size_of_setupSPI 0022                          _getsUSART 05AC  
                      __pintcodelo 0018                __size_of_selectTemp 0032  
                WriteTimer0@timer0 0028                           ?_recvSPI 0029  
                         ?_sendSPI 002A                           ?_low_isr 0001  
               __end_of_WriteUSART 06E4                      OpenADC@config 0028  
                         _IPR1bits 000F9F                           _PIE1bits 000F9D  
                         _PIR1bits 000F9E                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                         ?_getsUSART 0013  
                    initXbee@i_752 002E                    OpenSPI@bus_mode 0029  
                       _ADCON0bits 000FC2                        ??_ReadUSART 0012  
                         _CloseADC 06F4           __size_of_readTemperature 0074  
                      ??_OpenUSART 002B                    OpenUSART@config 0028  
                 __size_of_BusyADC 0006                   __size_of_ReadADC 000A  
                 __size_of_InitApp 0058                   __size_of_ReadSPI 0012  
                         __Hrparam 0000                          initXbee@i 002C  
                 __size_of_OpenADC 005C                           __Lrparam 0000  
                 __size_of_OpenSPI 0058                 __CFG_BOREN$SBORDIS 000000  
                     ?_WriteTimer0 0028                           _WriteSPI 067E  
                 __size_of_recvSPI 001E                   __size_of_sendSPI 0026  
                 __size_of_low_isr 008A                           __ptext10 0542  
                         __ptext11 06D4                           __ptext20 06C2  
                         __ptext12 0492                           __ptext21 06FE  
                         __ptext13 0642                           __ptext14 02D8  
                         __ptext15 03DA                           __ptext24 05AC  
                         __ptext16 0602                          sendXbee@i 0029  
                         __ptext25 0660                           __ptext17 04EA  
                         __ptext18 0436                           __ptext19 06F4  
                         _high_isr 0008                       ??_selectTemp 0029  
                         _initXbee 02D8                      __size_of_main 017A  
                         _recvBuff 0063                           _sendBuff 0037  
                         _sendXbee 0542       __size_of_ConfigureOscillator 0002  
                         _pollRecv 0060                           _setupSPI 0602  
                      ??_getsUSART 0016                 __end_of_selectTemp 05AC  
                       _INTCONbits 000FF2                     OpenUSART@spbrg 0029  
                         intlevel1 0000                           intlevel2 0000  
                ??_readTemperature 002B                        _SSPCON1bits 000FC6  
                     _USART_Status 005F  
