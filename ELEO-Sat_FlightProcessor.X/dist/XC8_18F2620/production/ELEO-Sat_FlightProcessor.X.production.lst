

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Nov 06 15:20:50 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     _ADCON0	set	4034
    24  0000                     _ADCON0bits	set	4034
    25  0000                     _ADCON1	set	4033
    26  0000                     _ADCON2	set	4032
    27  0000                     _INTCONbits	set	4082
    28  0000                     _PIE1bits	set	3997
    29  0000                     _PIR1bits	set	3998
    30  0000                     _PORTB	set	3969
    31  0000                     _PORTBbits	set	3969
    32  0000                     _SSPBUF	set	4041
    33  0000                     _SSPCON1	set	4038
    34  0000                     _SSPCON1bits	set	4038
    35  0000                     _SSPSTAT	set	4039
    36  0000                     _SSPSTATbits	set	4039
    37  0000                     _TRISA	set	3986
    38  0000                     _TRISAbits	set	3986
    39  0000                     _TRISB	set	3987
    40  0000                     _TRISCbits	set	3988
    41                           
    42 ;; *************** function _low_isr *****************
    43 ;; Defined at:
    44 ;;		line 75 in file "interrupts.c"
    45 ;; Parameters:    Size  Location     Type
    46 ;;		None
    47 ;; Auto vars:     Size  Location     Type
    48 ;;		None
    49 ;; Return value:  Size  Location     Type
    50 ;;		None               void
    51 ;; Registers used:
    52 ;;		None
    53 ;; Tracked objects:
    54 ;;		On entry : 0/0
    55 ;;		On exit  : 0/0
    56 ;;		Unchanged: 0/0
    57 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    58 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    59 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    60 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    61 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    62 ;;Total ram usage:       17 bytes
    63 ;; Hardware stack levels used:    1
    64 ;; Hardware stack levels required when called:    1
    65 ;; This function calls:
    66 ;;		Nothing
    67 ;; This function is called by:
    68 ;;		Interrupt level 1
    69 ;; This function uses a non-reentrant model
    70 ;;
    71                           
    72                           	psect	intcodelo
    73  000018                     __pintcodelo:
    74                           	opt stack 0
    75                           
    76                           ; #config settings
    77  000018                     _low_isr:
    78                           	opt stack 26
    79                           
    80                           ;incstack = 0
    81  000018  CFD8 F001          	movff	status,??_low_isr
    82  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
    83  000020  CFE0 F003          	movff	bsr,??_low_isr+2
    84  000024  CFFA F004          	movff	pclath,??_low_isr+3
    85  000028  CFFB F005          	movff	pclatu,??_low_isr+4
    86  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
    87  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
    88  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
    89  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
    90  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
    91  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
    92  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
    93  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
    94  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
    95  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
    96  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
    97  000058  CFF5 F011          	movff	tablat,??_low_isr+16
    98  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
    99  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
   100  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   101  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   102  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
   103  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
   104  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   105  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   106  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
   107  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
   108  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
   109  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
   110  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
   111  000090  C004  FFFA         	movff	??_low_isr+3,pclath
   112  000094  C003  FFE0         	movff	??_low_isr+2,bsr
   113  000098  C002  FFE8         	movff	??_low_isr+1,wreg
   114  00009C  C001  FFD8         	movff	??_low_isr,status
   115  0000A0  0010               	retfie	
   116  0000A2                     __end_of_low_isr:
   117                           	opt stack 0
   118                           pclatu	equ	0xFFB
   119                           pclath	equ	0xFFA
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           prodh	equ	0xFF4
   125                           prodl	equ	0xFF3
   126                           fsr0h	equ	0xFEA
   127                           fsr0l	equ	0xFE9
   128                           wreg	equ	0xFE8
   129                           fsr1h	equ	0xFE2
   130                           fsr1l	equ	0xFE1
   131                           bsr	equ	0xFE0
   132                           fsr2h	equ	0xFDA
   133                           fsr2l	equ	0xFD9
   134                           status	equ	0xFD8
   135                           
   136                           	psect	cinit
   137  00043E                     __pcinit:
   138                           	opt stack 0
   139  00043E                     start_initialization:
   140                           	opt stack 0
   141  00043E                     __initialization:
   142                           	opt stack 0
   143  00043E                     end_of_initialization:
   144                           	opt stack 0
   145  00043E                     __end_of__initialization:
   146                           	opt stack 0
   147  00043E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   148  000440  6EF8               	movwf	tblptru,c
   149  000442  0100               	movlb	0
   150  000444  EF53  F000         	goto	_main	;jump to C main() function
   151                           pclatu	equ	0xFFB
   152                           pclath	equ	0xFFA
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           prodh	equ	0xFF4
   158                           prodl	equ	0xFF3
   159                           fsr0h	equ	0xFEA
   160                           fsr0l	equ	0xFE9
   161                           wreg	equ	0xFE8
   162                           fsr1h	equ	0xFE2
   163                           fsr1l	equ	0xFE1
   164                           bsr	equ	0xFE0
   165                           fsr2h	equ	0xFDA
   166                           fsr2l	equ	0xFD9
   167                           status	equ	0xFD8
   168                           
   169                           	psect	cstackCOMRAM
   170  000001                     __pcstackCOMRAM:
   171                           	opt stack 0
   172  000001                     ??_low_isr:
   173  000001                     
   174                           ; 1 bytes @ 0x0
   175  000001                     	ds	17
   176  000012                     ??_high_isr:
   177                           
   178                           ; 0 bytes @ 0x11
   179  000012                     	ds	14
   180  000020                     ?_OpenADC:
   181                           	opt stack 0
   182  000020                     ?_OpenSPI:
   183                           	opt stack 0
   184  000020                     ?_WriteSPI:
   185                           	opt stack 0
   186  000020                     OpenADC@config:
   187                           	opt stack 0
   188  000020                     OpenSPI@sync_mode:
   189                           	opt stack 0
   190  000020                     ReadSPI@TempVar:
   191                           	opt stack 0
   192  000020                     WriteSPI@data_out:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x1F
   196  000020                     	ds	1
   197  000021                     ?_recvSPI:
   198                           	opt stack 0
   199  000021                     OpenADC@config2:
   200                           	opt stack 0
   201  000021                     OpenSPI@bus_mode:
   202                           	opt stack 0
   203  000021                     WriteSPI@TempVar:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x20
   207  000021                     	ds	1
   208  000022                     ?_sendSPI:
   209                           	opt stack 0
   210  000022                     sendSPI@slave:
   211                           	opt stack 0
   212  000022                     OpenADC@portconfig:
   213                           	opt stack 0
   214  000022                     OpenSPI@smp_phase:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x21
   218  000022                     	ds	1
   219  000023                     ??_OpenADC:
   220  000023                     ??_setupSPI:
   221  000023                     sendSPI@command:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x22
   225  000023                     	ds	1
   226  000024                     ??_sendSPI:
   227                           
   228                           ; 0 bytes @ 0x23
   229  000024                     	ds	1
   230  000025                     sendSPI@retval:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x24
   234  000025                     	ds	1
   235  000026                     ??_InitApp:
   236                           
   237                           ; 0 bytes @ 0x25
   238  000026                     	ds	3
   239  000029                     ??_main:
   240                           
   241                           ; 0 bytes @ 0x28
   242  000029                     	ds	2
   243  00002B                     main@val:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x2A
   247  00002B                     	ds	1
   248                           pclatu	equ	0xFFB
   249                           pclath	equ	0xFFA
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           prodh	equ	0xFF4
   255                           prodl	equ	0xFF3
   256                           fsr0h	equ	0xFEA
   257                           fsr0l	equ	0xFE9
   258                           wreg	equ	0xFE8
   259                           fsr1h	equ	0xFE2
   260                           fsr1l	equ	0xFE1
   261                           bsr	equ	0xFE0
   262                           fsr2h	equ	0xFDA
   263                           fsr2l	equ	0xFD9
   264                           status	equ	0xFD8
   265                           
   266 ;;
   267 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   268 ;;
   269 ;; *************** function _main *****************
   270 ;; Defined at:
   271 ;;		line 37 in file "main.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;  val             1   42[COMRAM] unsigned char 
   276 ;; Return value:  Size  Location     Type
   277 ;;		None               void
   278 ;; Registers used:
   279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;Total ram usage:        3 bytes
   290 ;; Hardware stack levels required when called:    5
   291 ;; This function calls:
   292 ;;		_ConfigureOscillator
   293 ;;		_InitApp
   294 ;;		_sendSPI
   295 ;;		_recvSPI
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text0
   302  0000A6                     __ptext0:
   303                           	opt stack 0
   304  0000A6                     _main:
   305                           	opt stack 26
   306                           
   307                           ;main.c: 39: ConfigureOscillator();
   308                           
   309                           ;incstack = 0
   310                           ;incstack = 0
   311  0000A6  EC27  F002         	call	_ConfigureOscillator	;wreg free
   312                           
   313                           ;main.c: 42: InitApp();
   314  0000AA  ECBE  F001         	call	_InitApp	;wreg free
   315  0000AE                     l21:
   316                           
   317                           ;main.c: 52: {
   318                           ;main.c: 62: sendSPI(Power, switch0_on);
   319  0000AE  6E29               	movwf	??_main& (0+255),c
   320  0000B0  0E00               	movlw	0
   321  0000B2  6E22               	movwf	?_sendSPI,c
   322  0000B4  5029               	movf	??_main& (0+255),w,c
   323  0000B6  6E2A               	movwf	(??_main+1)& (0+255),c
   324  0000B8  0E01               	movlw	1
   325  0000BA  6E23               	movwf	?_sendSPI+1,c
   326  0000BC  502A               	movf	(??_main+1)& (0+255),w,c
   327  0000BE  ECDA  F001         	call	_sendSPI	;wreg free
   328                           
   329                           ;main.c: 63: _delay((unsigned long)((50)*(20000000/4000000.0)));
   330  0000C2  0E53               	movlw	83
   331  0000C4                     u77:
   332  0000C4  2EE8               	decfsz	wreg,f,c
   333  0000C6  D7FE               	goto	u77
   334  0000C8  F000               	nop	
   335                           
   336                           ;main.c: 64: char val = 0x80 & recvSPI(Power);
   337  0000CA  6E29               	movwf	??_main& (0+255),c
   338  0000CC  0E00               	movlw	0
   339  0000CE  6E21               	movwf	?_recvSPI,c
   340  0000D0  5029               	movf	??_main& (0+255),w,c
   341  0000D2  EC19  F002         	call	_recvSPI	;wreg free
   342  0000D6  0B80               	andlw	128
   343  0000D8  6E2B               	movwf	main@val,c
   344                           
   345                           ;main.c: 66: if(val)
   346  0000DA  502B               	movf	main@val,w,c
   347  0000DC  A4D8               	btfss	status,2,c
   348                           
   349                           ;main.c: 67: PORTBbits.RB1 = 1;
   350  0000DE  8281               	bsf	3969,1,c	;volatile
   351                           
   352                           ;main.c: 68: _delay((unsigned long)((10)*(20000000/4000.0)));
   353  0000E0  0E41               	movlw	65
   354  0000E2  6E29               	movwf	??_main& (0+255),c
   355  0000E4  0EEE               	movlw	238
   356  0000E6                     u87:
   357  0000E6  2EE8               	decfsz	wreg,f,c
   358  0000E8  D7FE               	goto	u87
   359  0000EA  2E29               	decfsz	??_main& (0+255),f,c
   360  0000EC  D7FC               	goto	u87
   361  0000EE  F000               	nop	
   362                           
   363                           ;main.c: 70: sendSPI(Power, switch1_on);
   364  0000F0  6E29               	movwf	??_main& (0+255),c
   365  0000F2  0E00               	movlw	0
   366  0000F4  6E22               	movwf	?_sendSPI,c
   367  0000F6  5029               	movf	??_main& (0+255),w,c
   368  0000F8  6E2A               	movwf	(??_main+1)& (0+255),c
   369  0000FA  0E03               	movlw	3
   370  0000FC  6E23               	movwf	?_sendSPI+1,c
   371  0000FE  502A               	movf	(??_main+1)& (0+255),w,c
   372  000100  ECDA  F001         	call	_sendSPI	;wreg free
   373                           
   374                           ;main.c: 71: _delay((unsigned long)((50)*(20000000/4000000.0)));
   375  000104  0E53               	movlw	83
   376  000106                     u97:
   377  000106  2EE8               	decfsz	wreg,f,c
   378  000108  D7FE               	goto	u97
   379  00010A  F000               	nop	
   380                           
   381                           ;main.c: 72: PORTBbits.RB2 = recvSPI(Power);
   382  00010C  6E29               	movwf	??_main& (0+255),c
   383  00010E  0E00               	movlw	0
   384  000110  6E21               	movwf	?_recvSPI,c
   385  000112  5029               	movf	??_main& (0+255),w,c
   386  000114  EC19  F002         	call	_recvSPI	;wreg free
   387  000118  6E2A               	movwf	(??_main+1)& (0+255),c
   388  00011A  462A               	rlncf	??_main+1,f,c
   389  00011C  462A               	rlncf	??_main+1,f,c
   390  00011E  5081               	movf	3969,w,c	;volatile
   391  000120  182A               	xorwf	??_main+1,w,c
   392  000122  0BFB               	andlw	-5
   393  000124  182A               	xorwf	??_main+1,w,c
   394  000126  6E81               	movwf	3969,c	;volatile
   395                           
   396                           ;main.c: 73: _delay((unsigned long)((10)*(20000000/4000.0)));
   397  000128  0E41               	movlw	65
   398  00012A  6E29               	movwf	??_main& (0+255),c
   399  00012C  0EEE               	movlw	238
   400  00012E                     u107:
   401  00012E  2EE8               	decfsz	wreg,f,c
   402  000130  D7FE               	goto	u107
   403  000132  2E29               	decfsz	??_main& (0+255),f,c
   404  000134  D7FC               	goto	u107
   405  000136  F000               	nop	
   406                           
   407                           ;main.c: 75: sendSPI(Power, switch2_on);
   408  000138  6E29               	movwf	??_main& (0+255),c
   409  00013A  0E00               	movlw	0
   410  00013C  6E22               	movwf	?_sendSPI,c
   411  00013E  5029               	movf	??_main& (0+255),w,c
   412  000140  6E2A               	movwf	(??_main+1)& (0+255),c
   413  000142  0E05               	movlw	5
   414  000144  6E23               	movwf	?_sendSPI+1,c
   415  000146  502A               	movf	(??_main+1)& (0+255),w,c
   416  000148  ECDA  F001         	call	_sendSPI	;wreg free
   417                           
   418                           ;main.c: 76: _delay((unsigned long)((50)*(20000000/4000000.0)));
   419  00014C  0E53               	movlw	83
   420  00014E                     u117:
   421  00014E  2EE8               	decfsz	wreg,f,c
   422  000150  D7FE               	goto	u117
   423  000152  F000               	nop	
   424                           
   425                           ;main.c: 77: PORTBbits.RB3 = recvSPI(Power);
   426  000154  6E29               	movwf	??_main& (0+255),c
   427  000156  0E00               	movlw	0
   428  000158  6E21               	movwf	?_recvSPI,c
   429  00015A  5029               	movf	??_main& (0+255),w,c
   430  00015C  EC19  F002         	call	_recvSPI	;wreg free
   431  000160  6E2A               	movwf	(??_main+1)& (0+255),c
   432  000162  462A               	rlncf	??_main+1,f,c
   433  000164  462A               	rlncf	??_main+1,f,c
   434  000166  462A               	rlncf	??_main+1,f,c
   435  000168  5081               	movf	3969,w,c	;volatile
   436  00016A  182A               	xorwf	??_main+1,w,c
   437  00016C  0BF7               	andlw	-9
   438  00016E  182A               	xorwf	??_main+1,w,c
   439  000170  6E81               	movwf	3969,c	;volatile
   440                           
   441                           ;main.c: 78: _delay((unsigned long)((10)*(20000000/4000.0)));
   442  000172  0E41               	movlw	65
   443  000174  6E29               	movwf	??_main& (0+255),c
   444  000176  0EEE               	movlw	238
   445  000178                     u127:
   446  000178  2EE8               	decfsz	wreg,f,c
   447  00017A  D7FE               	goto	u127
   448  00017C  2E29               	decfsz	??_main& (0+255),f,c
   449  00017E  D7FC               	goto	u127
   450  000180  F000               	nop	
   451                           
   452                           ;main.c: 80: sendSPI(Power, switch2_off);
   453  000182  6E29               	movwf	??_main& (0+255),c
   454  000184  0E00               	movlw	0
   455  000186  6E22               	movwf	?_sendSPI,c
   456  000188  5029               	movf	??_main& (0+255),w,c
   457  00018A  6E2A               	movwf	(??_main+1)& (0+255),c
   458  00018C  0E06               	movlw	6
   459  00018E  6E23               	movwf	?_sendSPI+1,c
   460  000190  502A               	movf	(??_main+1)& (0+255),w,c
   461  000192  ECDA  F001         	call	_sendSPI	;wreg free
   462                           
   463                           ;main.c: 81: _delay((unsigned long)((50)*(20000000/4000000.0)));
   464  000196  0E53               	movlw	83
   465  000198                     u137:
   466  000198  2EE8               	decfsz	wreg,f,c
   467  00019A  D7FE               	goto	u137
   468  00019C  F000               	nop	
   469                           
   470                           ;main.c: 82: PORTBbits.RB3 = recvSPI(Power);
   471  00019E  6E29               	movwf	??_main& (0+255),c
   472  0001A0  0E00               	movlw	0
   473  0001A2  6E21               	movwf	?_recvSPI,c
   474  0001A4  5029               	movf	??_main& (0+255),w,c
   475  0001A6  EC19  F002         	call	_recvSPI	;wreg free
   476  0001AA  6E2A               	movwf	(??_main+1)& (0+255),c
   477  0001AC  462A               	rlncf	??_main+1,f,c
   478  0001AE  462A               	rlncf	??_main+1,f,c
   479  0001B0  462A               	rlncf	??_main+1,f,c
   480  0001B2  5081               	movf	3969,w,c	;volatile
   481  0001B4  182A               	xorwf	??_main+1,w,c
   482  0001B6  0BF7               	andlw	-9
   483  0001B8  182A               	xorwf	??_main+1,w,c
   484  0001BA  6E81               	movwf	3969,c	;volatile
   485                           
   486                           ;main.c: 83: _delay((unsigned long)((10)*(20000000/4000.0)));
   487  0001BC  0E41               	movlw	65
   488  0001BE  6E29               	movwf	??_main& (0+255),c
   489  0001C0  0EEE               	movlw	238
   490  0001C2                     u147:
   491  0001C2  2EE8               	decfsz	wreg,f,c
   492  0001C4  D7FE               	goto	u147
   493  0001C6  2E29               	decfsz	??_main& (0+255),f,c
   494  0001C8  D7FC               	goto	u147
   495  0001CA  F000               	nop	
   496                           
   497                           ;main.c: 85: sendSPI(Power, switch1_off);
   498  0001CC  6E29               	movwf	??_main& (0+255),c
   499  0001CE  0E00               	movlw	0
   500  0001D0  6E22               	movwf	?_sendSPI,c
   501  0001D2  5029               	movf	??_main& (0+255),w,c
   502  0001D4  6E2A               	movwf	(??_main+1)& (0+255),c
   503  0001D6  0E04               	movlw	4
   504  0001D8  6E23               	movwf	?_sendSPI+1,c
   505  0001DA  502A               	movf	(??_main+1)& (0+255),w,c
   506  0001DC  ECDA  F001         	call	_sendSPI	;wreg free
   507                           
   508                           ;main.c: 86: _delay((unsigned long)((50)*(20000000/4000000.0)));
   509  0001E0  0E53               	movlw	83
   510  0001E2                     u157:
   511  0001E2  2EE8               	decfsz	wreg,f,c
   512  0001E4  D7FE               	goto	u157
   513  0001E6  F000               	nop	
   514                           
   515                           ;main.c: 87: PORTBbits.RB2 = recvSPI(Power);
   516  0001E8  6E29               	movwf	??_main& (0+255),c
   517  0001EA  0E00               	movlw	0
   518  0001EC  6E21               	movwf	?_recvSPI,c
   519  0001EE  5029               	movf	??_main& (0+255),w,c
   520  0001F0  EC19  F002         	call	_recvSPI	;wreg free
   521  0001F4  6E2A               	movwf	(??_main+1)& (0+255),c
   522  0001F6  462A               	rlncf	??_main+1,f,c
   523  0001F8  462A               	rlncf	??_main+1,f,c
   524  0001FA  5081               	movf	3969,w,c	;volatile
   525  0001FC  182A               	xorwf	??_main+1,w,c
   526  0001FE  0BFB               	andlw	-5
   527  000200  182A               	xorwf	??_main+1,w,c
   528  000202  6E81               	movwf	3969,c	;volatile
   529                           
   530                           ;main.c: 88: _delay((unsigned long)((10)*(20000000/4000.0)));
   531  000204  0E41               	movlw	65
   532  000206  6E29               	movwf	??_main& (0+255),c
   533  000208  0EEE               	movlw	238
   534  00020A                     u167:
   535  00020A  2EE8               	decfsz	wreg,f,c
   536  00020C  D7FE               	goto	u167
   537  00020E  2E29               	decfsz	??_main& (0+255),f,c
   538  000210  D7FC               	goto	u167
   539  000212  F000               	nop	
   540                           
   541                           ;main.c: 90: sendSPI(Power, switch0_off);
   542  000214  6E29               	movwf	??_main& (0+255),c
   543  000216  0E00               	movlw	0
   544  000218  6E22               	movwf	?_sendSPI,c
   545  00021A  5029               	movf	??_main& (0+255),w,c
   546  00021C  6E2A               	movwf	(??_main+1)& (0+255),c
   547  00021E  0E02               	movlw	2
   548  000220  6E23               	movwf	?_sendSPI+1,c
   549  000222  502A               	movf	(??_main+1)& (0+255),w,c
   550  000224  ECDA  F001         	call	_sendSPI	;wreg free
   551                           
   552                           ;main.c: 91: _delay((unsigned long)((50)*(20000000/4000000.0)));
   553  000228  0E53               	movlw	83
   554  00022A                     u177:
   555  00022A  2EE8               	decfsz	wreg,f,c
   556  00022C  D7FE               	goto	u177
   557  00022E  F000               	nop	
   558                           
   559                           ;main.c: 92: PORTBbits.RB1 = recvSPI(Power);
   560  000230  6E29               	movwf	??_main& (0+255),c
   561  000232  0E00               	movlw	0
   562  000234  6E21               	movwf	?_recvSPI,c
   563  000236  5029               	movf	??_main& (0+255),w,c
   564  000238  EC19  F002         	call	_recvSPI	;wreg free
   565  00023C  6E2A               	movwf	(??_main+1)& (0+255),c
   566  00023E  462A               	rlncf	??_main+1,f,c
   567  000240  5081               	movf	3969,w,c	;volatile
   568  000242  182A               	xorwf	??_main+1,w,c
   569  000244  0BFD               	andlw	-3
   570  000246  182A               	xorwf	??_main+1,w,c
   571  000248  6E81               	movwf	3969,c	;volatile
   572                           
   573                           ;main.c: 93: _delay((unsigned long)((10)*(20000000/4000.0)));
   574  00024A  0E41               	movlw	65
   575  00024C  6E29               	movwf	??_main& (0+255),c
   576  00024E  0EEE               	movlw	238
   577  000250                     u187:
   578  000250  2EE8               	decfsz	wreg,f,c
   579  000252  D7FE               	goto	u187
   580  000254  2E29               	decfsz	??_main& (0+255),f,c
   581  000256  D7FC               	goto	u187
   582  000258  F000               	nop	
   583  00025A  D729               	goto	l21
   584  00025C                     __end_of_main:
   585                           	opt stack 0
   586                           pclatu	equ	0xFFB
   587                           pclath	equ	0xFFA
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           prodh	equ	0xFF4
   593                           prodl	equ	0xFF3
   594                           fsr0h	equ	0xFEA
   595                           fsr0l	equ	0xFE9
   596                           wreg	equ	0xFE8
   597                           fsr1h	equ	0xFE2
   598                           fsr1l	equ	0xFE1
   599                           bsr	equ	0xFE0
   600                           fsr2h	equ	0xFDA
   601                           fsr2l	equ	0xFD9
   602                           status	equ	0xFD8
   603                           
   604 ;; *************** function _recvSPI *****************
   605 ;; Defined at:
   606 ;;		line 69 in file "spi_comm.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  slave           1   32[COMRAM] enum E3674
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      unsigned char 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   620 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;Total ram usage:        1 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    3
   627 ;; This function calls:
   628 ;;		_ReadSPI
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text1
   635  000432                     __ptext1:
   636                           	opt stack 0
   637  000432                     _recvSPI:
   638                           	opt stack 27
   639                           
   640                           ;spi_comm.c: 70: (PORTBbits.RB0 = 0);
   641                           
   642                           ;incstack = 0
   643                           ;incstack = 0
   644  000432  9081               	bcf	3969,0,c	;volatile
   645                           
   646                           ;spi_comm.c: 73: ReadSPI();
   647  000434  EC10  F002         	call	_ReadSPI	;wreg free
   648                           
   649                           ;spi_comm.c: 74: (PORTBbits.RB0 = 1);
   650  000438  8081               	bsf	3969,0,c	;volatile
   651                           
   652                           ;spi_comm.c: 75: return SSPBUF;
   653  00043A  50C9               	movf	4041,w,c	;volatile
   654  00043C  0012               	return	
   655  00043E                     __end_of_recvSPI:
   656                           	opt stack 0
   657                           pclatu	equ	0xFFB
   658                           pclath	equ	0xFFA
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           prodh	equ	0xFF4
   664                           prodl	equ	0xFF3
   665                           fsr0h	equ	0xFEA
   666                           fsr0l	equ	0xFE9
   667                           wreg	equ	0xFE8
   668                           fsr1h	equ	0xFE2
   669                           fsr1l	equ	0xFE1
   670                           bsr	equ	0xFE0
   671                           fsr2h	equ	0xFDA
   672                           fsr2l	equ	0xFD9
   673                           status	equ	0xFD8
   674                           
   675 ;; *************** function _ReadSPI *****************
   676 ;; Defined at:
   677 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_read.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  TempVar         1   31[COMRAM] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      unsigned char 
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        1 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_recvSPI
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text2
   706  000420                     __ptext2:
   707                           	opt stack 0
   708  000420                     _ReadSPI:
   709                           	opt stack 27
   710                           
   711                           ;incstack = 0
   712                           ;incstack = 0
   713  000420  CFC9 F020          	movff	4041,ReadSPI@TempVar	;volatile
   714  000424  969E               	bcf	3998,3,c	;volatile
   715  000426  0E00               	movlw	0
   716  000428  6EC9               	movwf	4041,c	;volatile
   717  00042A                     l134:
   718  00042A  A69E               	btfss	3998,3,c	;volatile
   719  00042C  D7FE               	goto	l134
   720                           
   721                           ;	Return value of _ReadSPI is never used
   722  00042E  50C9               	movf	4041,w,c	;volatile
   723  000430  0012               	return	
   724  000432                     __end_of_ReadSPI:
   725                           	opt stack 0
   726                           pclatu	equ	0xFFB
   727                           pclath	equ	0xFFA
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           prodh	equ	0xFF4
   733                           prodl	equ	0xFF3
   734                           fsr0h	equ	0xFEA
   735                           fsr0l	equ	0xFE9
   736                           wreg	equ	0xFE8
   737                           fsr1h	equ	0xFE2
   738                           fsr1l	equ	0xFE1
   739                           bsr	equ	0xFE0
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8
   743                           
   744 ;; *************** function _sendSPI *****************
   745 ;; Defined at:
   746 ;;		line 42 in file "spi_comm.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  slave           1   33[COMRAM] enum E3674
   749 ;;  command         1   34[COMRAM] enum E3679
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  retval          1   36[COMRAM] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;		None               void
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;Total ram usage:        4 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    3
   768 ;; This function calls:
   769 ;;		_WriteSPI
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text3
   776  0003B4                     __ptext3:
   777                           	opt stack 0
   778  0003B4                     _sendSPI:
   779                           	opt stack 27
   780                           
   781                           ;spi_comm.c: 43: char retval = 0x00;
   782                           
   783                           ;incstack = 0
   784                           ;incstack = 0
   785  0003B4  6E24               	movwf	??_sendSPI& (0+255),c
   786  0003B6  0E00               	movlw	0
   787  0003B8  6E25               	movwf	sendSPI@retval,c
   788  0003BA  5024               	movf	??_sendSPI& (0+255),w,c
   789                           
   790                           ;spi_comm.c: 45: switch(slave)
   791  0003BC  D00A               	goto	l801
   792  0003BE                     l66:
   793                           
   794                           ;spi_comm.c: 50: (PORTBbits.RB0 = 0);
   795  0003BE  9081               	bcf	3969,0,c	;volatile
   796  0003C0                     l797:
   797  0003C0  C023  F020         	movff	sendSPI@command,?_WriteSPI
   798  0003C4  EC02  F002         	call	_WriteSPI	;wreg free
   799  0003C8  0900               	iorlw	0
   800  0003CA  A4D8               	btfss	status,2,c
   801  0003CC  D7F9               	goto	l797
   802                           
   803                           ;spi_comm.c: 57: (PORTBbits.RB0 = 1);
   804  0003CE  8081               	bsf	3969,0,c	;volatile
   805                           
   806                           ;spi_comm.c: 58: break;
   807  0003D0  D007               	goto	l73
   808  0003D2                     l801:
   809  0003D2  5022               	movf	sendSPI@slave,w,c
   810                           
   811                           ; Switch size 1, requested type "space"
   812                           ; Number of cases is 3, Range of values is 0 to 2
   813                           ; switch strategies available:
   814                           ; Name         Instructions Cycles
   815                           ; simple_byte           10     6 (average)
   816                           ;	Chosen strategy is simple_byte
   817  0003D4  0A00               	xorlw	0	; case 0
   818  0003D6  B4D8               	btfsc	status,2,c
   819  0003D8  D7F2               	goto	l66
   820  0003DA  0A01               	xorlw	1	; case 1
   821  0003DC  A4D8               	btfss	status,2,c
   822  0003DE  0A03               	xorlw	3	; case 2
   823  0003E0                     l73:
   824  0003E0  0012               	return	
   825  0003E2                     __end_of_sendSPI:
   826                           	opt stack 0
   827                           pclatu	equ	0xFFB
   828                           pclath	equ	0xFFA
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           prodh	equ	0xFF4
   834                           prodl	equ	0xFF3
   835                           fsr0h	equ	0xFEA
   836                           fsr0l	equ	0xFE9
   837                           wreg	equ	0xFE8
   838                           fsr1h	equ	0xFE2
   839                           fsr1l	equ	0xFE1
   840                           bsr	equ	0xFE0
   841                           fsr2h	equ	0xFDA
   842                           fsr2l	equ	0xFD9
   843                           status	equ	0xFD8
   844                           
   845 ;; *************** function _WriteSPI *****************
   846 ;; Defined at:
   847 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_writ.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  data_out        1   31[COMRAM] unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  TempVar         1   32[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      char 
   854 ;; Registers used:
   855 ;;		wreg
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   861 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    2
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_sendSPI
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text4
   876  000404                     __ptext4:
   877                           	opt stack 0
   878  000404                     _WriteSPI:
   879                           	opt stack 27
   880                           
   881                           ;incstack = 0
   882                           ;incstack = 0
   883  000404  CFC9 F021          	movff	4041,WriteSPI@TempVar	;volatile
   884  000408  969E               	bcf	3998,3,c	;volatile
   885  00040A  9EC6               	bcf	4038,7,c	;volatile
   886  00040C  C020  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   887  000410  AEC6               	btfss	4038,7,c	;volatile
   888  000412  D002               	goto	l151
   889  000414  0EFF               	movlw	255
   890  000416  D003               	goto	l149
   891  000418                     l151:
   892  000418  A69E               	btfss	3998,3,c	;volatile
   893  00041A  D7FE               	goto	l151
   894  00041C  0E00               	movlw	0
   895  00041E                     l149:
   896  00041E  0012               	return	
   897  000420                     __end_of_WriteSPI:
   898                           	opt stack 0
   899                           pclatu	equ	0xFFB
   900                           pclath	equ	0xFFA
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           prodh	equ	0xFF4
   906                           prodl	equ	0xFF3
   907                           fsr0h	equ	0xFEA
   908                           fsr0l	equ	0xFE9
   909                           wreg	equ	0xFE8
   910                           fsr1h	equ	0xFE2
   911                           fsr1l	equ	0xFE1
   912                           bsr	equ	0xFE0
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _InitApp *****************
   918 ;; Defined at:
   919 ;;		line 31 in file "user.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;Total ram usage:        3 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		_CloseADC
   942 ;;		_OpenADC
   943 ;;		_setupSPI
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text5
   950  00037C                     __ptext5:
   951                           	opt stack 0
   952  00037C                     _InitApp:
   953                           	opt stack 26
   954                           
   955                           ;user.c: 35: ADCON1 = 0b00001010;
   956                           
   957                           ;incstack = 0
   958                           ;incstack = 0
   959  00037C  0E0A               	movlw	10
   960  00037E  6EC1               	movwf	4033,c	;volatile
   961                           
   962                           ;user.c: 36: TRISA = 0b00000001;
   963  000380  0E01               	movlw	1
   964  000382  6E92               	movwf	3986,c	;volatile
   965                           
   966                           ;user.c: 37: TRISB = 0b00000000;
   967  000384  0E00               	movlw	0
   968  000386  6E93               	movwf	3987,c	;volatile
   969                           
   970                           ;user.c: 38: PORTB = 0x00;
   971  000388  0E00               	movlw	0
   972  00038A  6E81               	movwf	3969,c	;volatile
   973                           
   974                           ;user.c: 39: PORTBbits.RB0 = 1;
   975  00038C  8081               	bsf	3969,0,c	;volatile
   976                           
   977                           ;user.c: 42: CloseADC();
   978  00038E  EC24  F002         	call	_CloseADC	;wreg free
   979                           
   980                           ;user.c: 43: OpenADC(0b11011111 & 0b11110011 & 0b11111111,
   981                           ;user.c: 44: 0b10000111 & 0b01111111 & 0b11111100,
   982                           ;user.c: 45: 0b11111111);
   983  000392  6E26               	movwf	??_InitApp& (0+255),c
   984  000394  0ED3               	movlw	211
   985  000396  6E20               	movwf	?_OpenADC,c
   986  000398  5026               	movf	??_InitApp& (0+255),w,c
   987  00039A  6E27               	movwf	(??_InitApp+1)& (0+255),c
   988  00039C  0E04               	movlw	4
   989  00039E  6E21               	movwf	?_OpenADC+1,c
   990  0003A0  5027               	movf	(??_InitApp+1)& (0+255),w,c
   991  0003A2  6E28               	movwf	(??_InitApp+2)& (0+255),c
   992  0003A4  0EFF               	movlw	255
   993  0003A6  6E22               	movwf	?_OpenADC+2,c
   994  0003A8  5028               	movf	(??_InitApp+2)& (0+255),w,c
   995  0003AA  EC64  F001         	call	_OpenADC	;wreg free
   996                           
   997                           ;user.c: 47: setupSPI();
   998  0003AE  ECF1  F001         	call	_setupSPI	;wreg free
   999  0003B2  0012               	return	
  1000  0003B4                     __end_of_InitApp:
  1001                           	opt stack 0
  1002                           pclatu	equ	0xFFB
  1003                           pclath	equ	0xFFA
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           prodh	equ	0xFF4
  1009                           prodl	equ	0xFF3
  1010                           fsr0h	equ	0xFEA
  1011                           fsr0l	equ	0xFE9
  1012                           wreg	equ	0xFE8
  1013                           fsr1h	equ	0xFE2
  1014                           fsr1l	equ	0xFE1
  1015                           bsr	equ	0xFE0
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           status	equ	0xFD8
  1019                           
  1020 ;; *************** function _setupSPI *****************
  1021 ;; Defined at:
  1022 ;;		line 27 in file "spi_comm.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;Total ram usage:        3 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    3
  1043 ;; This function calls:
  1044 ;;		_OpenSPI
  1045 ;; This function is called by:
  1046 ;;		_InitApp
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text6
  1051  0003E2                     __ptext6:
  1052                           	opt stack 0
  1053  0003E2                     _setupSPI:
  1054                           	opt stack 26
  1055                           
  1056                           ;spi_comm.c: 28: (PORTBbits.RB0 = 1);
  1057                           
  1058                           ;incstack = 0
  1059                           ;incstack = 0
  1060  0003E2  8081               	bsf	3969,0,c	;volatile
  1061                           
  1062                           ;spi_comm.c: 29: (SSPCON1 &=0xDF);
  1063  0003E4  9AC6               	bcf	4038,5,c	;volatile
  1064                           
  1065                           ;spi_comm.c: 30: OpenSPI(0b00000000 & 0b00000101, 0b00000001, 0b00000000);
  1066  0003E6  6E23               	movwf	??_setupSPI& (0+255),c
  1067  0003E8  0E00               	movlw	0
  1068  0003EA  6E20               	movwf	?_OpenSPI,c
  1069  0003EC  5023               	movf	??_setupSPI& (0+255),w,c
  1070  0003EE  6E24               	movwf	(??_setupSPI+1)& (0+255),c
  1071  0003F0  0E01               	movlw	1
  1072  0003F2  6E21               	movwf	?_OpenSPI+1,c
  1073  0003F4  5024               	movf	(??_setupSPI+1)& (0+255),w,c
  1074  0003F6  6E25               	movwf	(??_setupSPI+2)& (0+255),c
  1075  0003F8  0E00               	movlw	0
  1076  0003FA  6E22               	movwf	?_OpenSPI+2,c
  1077  0003FC  5025               	movf	(??_setupSPI+2)& (0+255),w,c
  1078  0003FE  EC92  F001         	call	_OpenSPI	;wreg free
  1079  000402  0012               	return	
  1080  000404                     __end_of_setupSPI:
  1081                           	opt stack 0
  1082                           pclatu	equ	0xFFB
  1083                           pclath	equ	0xFFA
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           prodh	equ	0xFF4
  1089                           prodl	equ	0xFF3
  1090                           fsr0h	equ	0xFEA
  1091                           fsr0l	equ	0xFE9
  1092                           wreg	equ	0xFE8
  1093                           fsr1h	equ	0xFE2
  1094                           fsr1l	equ	0xFE1
  1095                           bsr	equ	0xFE0
  1096                           fsr2h	equ	0xFDA
  1097                           fsr2l	equ	0xFD9
  1098                           status	equ	0xFD8
  1099                           
  1100 ;; *************** function _OpenSPI *****************
  1101 ;; Defined at:
  1102 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_open.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  sync_mode       1   31[COMRAM] unsigned char 
  1105 ;;  bus_mode        1   32[COMRAM] unsigned char 
  1106 ;;  smp_phase       1   33[COMRAM] unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;Total ram usage:        3 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    2
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_setupSPI
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text7
  1133  000324                     __ptext7:
  1134                           	opt stack 0
  1135  000324                     _OpenSPI:
  1136                           	opt stack 26
  1137                           
  1138                           ;incstack = 0
  1139                           ;incstack = 0
  1140  000324  0E3F               	movlw	63
  1141  000326  16C7               	andwf	4039,f,c	;volatile
  1142  000328  0E00               	movlw	0
  1143  00032A  6EC6               	movwf	4038,c	;volatile
  1144  00032C  5020               	movf	OpenSPI@sync_mode,w,c
  1145  00032E  12C6               	iorwf	4038,f,c	;volatile
  1146  000330  5022               	movf	OpenSPI@smp_phase,w,c
  1147  000332  12C7               	iorwf	4039,f,c	;volatile
  1148  000334  D005               	goto	l843
  1149  000336                     l117:
  1150  000336  8CC7               	bsf	4039,6,c	;volatile
  1151  000338  D015               	goto	l847
  1152  00033A                     l119:
  1153  00033A  8CC7               	bsf	4039,6,c	;volatile
  1154  00033C                     l120:
  1155  00033C  88C6               	bsf	4038,4,c	;volatile
  1156  00033E  D012               	goto	l847
  1157  000340                     l843:
  1158  000340  5021               	movf	OpenSPI@bus_mode,w,c
  1159                           
  1160                           ; Switch size 1, requested type "space"
  1161                           ; Number of cases is 3, Range of values is 0 to 3
  1162                           ; switch strategies available:
  1163                           ; Name         Instructions Cycles
  1164                           ; simple_byte           10     6 (average)
  1165                           ;	Chosen strategy is simple_byte
  1166  000342  0A00               	xorlw	0	; case 0
  1167  000344  B4D8               	btfsc	status,2,c
  1168  000346  D7F7               	goto	l117
  1169  000348  0A02               	xorlw	2	; case 2
  1170  00034A  B4D8               	btfsc	status,2,c
  1171  00034C  D7F6               	goto	l119
  1172  00034E  0A01               	xorlw	1	; case 3
  1173  000350  B4D8               	btfsc	status,2,c
  1174  000352  D7F4               	goto	l120
  1175  000354  D007               	goto	l847
  1176  000356                     l123:
  1177  000356  8694               	bsf	3988,3,c	;volatile
  1178  000358  8A92               	bsf	3986,5,c	;volatile
  1179  00035A  D00C               	goto	l124
  1180  00035C                     l125:
  1181  00035C  8694               	bsf	3988,3,c	;volatile
  1182  00035E  D00A               	goto	l124
  1183  000360                     l126:
  1184  000360  9694               	bcf	3988,3,c	;volatile
  1185  000362  D008               	goto	l124
  1186  000364                     l847:
  1187  000364  5020               	movf	OpenSPI@sync_mode,w,c
  1188                           
  1189                           ; Switch size 1, requested type "space"
  1190                           ; Number of cases is 2, Range of values is 4 to 5
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte            7     4 (average)
  1194                           ;	Chosen strategy is simple_byte
  1195  000366  0A04               	xorlw	4	; case 4
  1196  000368  B4D8               	btfsc	status,2,c
  1197  00036A  D7F5               	goto	l123
  1198  00036C  0A01               	xorlw	1	; case 5
  1199  00036E  B4D8               	btfsc	status,2,c
  1200  000370  D7F5               	goto	l125
  1201  000372  D7F6               	goto	l126
  1202  000374                     l124:
  1203  000374  8894               	bsf	3988,4,c	;volatile
  1204  000376  9A94               	bcf	3988,5,c	;volatile
  1205  000378  8AC6               	bsf	4038,5,c	;volatile
  1206  00037A  0012               	return	
  1207  00037C                     __end_of_OpenSPI:
  1208                           	opt stack 0
  1209                           pclatu	equ	0xFFB
  1210                           pclath	equ	0xFFA
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           prodh	equ	0xFF4
  1216                           prodl	equ	0xFF3
  1217                           fsr0h	equ	0xFEA
  1218                           fsr0l	equ	0xFE9
  1219                           wreg	equ	0xFE8
  1220                           fsr1h	equ	0xFE2
  1221                           fsr1l	equ	0xFE1
  1222                           bsr	equ	0xFE0
  1223                           fsr2h	equ	0xFDA
  1224                           fsr2l	equ	0xFD9
  1225                           status	equ	0xFD8
  1226                           
  1227 ;; *************** function _OpenADC *****************
  1228 ;; Defined at:
  1229 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  config          1   31[COMRAM] unsigned char 
  1232 ;;  config2         1   32[COMRAM] unsigned char 
  1233 ;;  portconfig      1   33[COMRAM] unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;		None               void
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1245 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;Total ram usage:        5 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    2
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_InitApp
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text8
  1260  0002C8                     __ptext8:
  1261                           	opt stack 0
  1262  0002C8                     _OpenADC:
  1263                           	opt stack 27
  1264                           
  1265                           ;incstack = 0
  1266                           ;incstack = 0
  1267  0002C8  0E00               	movlw	0
  1268  0002CA  6EC2               	movwf	4034,c	;volatile
  1269  0002CC  0E00               	movlw	0
  1270  0002CE  6EC0               	movwf	4032,c	;volatile
  1271  0002D0  90D8               	bcf	status,0,c
  1272  0002D2  3021               	rrcf	OpenADC@config2,w,c
  1273  0002D4  0B3C               	andlw	60
  1274  0002D6  6EC2               	movwf	4034,c	;volatile
  1275  0002D8  C021  F023         	movff	OpenADC@config2,??_OpenADC
  1276  0002DC  3A23               	swapf	??_OpenADC,f,c
  1277  0002DE  0EF0               	movlw	240
  1278  0002E0  1623               	andwf	??_OpenADC,f,c
  1279  0002E2  0E30               	movlw	48
  1280  0002E4  1623               	andwf	??_OpenADC,f,c
  1281  0002E6  5022               	movf	OpenADC@portconfig,w,c
  1282  0002E8  0B0F               	andlw	15
  1283  0002EA  1023               	iorwf	??_OpenADC,w,c
  1284  0002EC  6EC1               	movwf	4033,c	;volatile
  1285  0002EE  C020  F023         	movff	OpenADC@config,??_OpenADC
  1286  0002F2  90D8               	bcf	status,0,c
  1287  0002F4  3623               	rlcf	??_OpenADC,f,c
  1288  0002F6  90D8               	bcf	status,0,c
  1289  0002F8  3623               	rlcf	??_OpenADC,f,c
  1290  0002FA  0E38               	movlw	56
  1291  0002FC  1623               	andwf	??_OpenADC,f,c
  1292  0002FE  C020  F024         	movff	OpenADC@config,??_OpenADC+1
  1293  000302  3A24               	swapf	??_OpenADC+1,f,c
  1294  000304  0E0F               	movlw	15
  1295  000306  1624               	andwf	??_OpenADC+1,f,c
  1296  000308  0E07               	movlw	7
  1297  00030A  1624               	andwf	??_OpenADC+1,f,c
  1298  00030C  5020               	movf	OpenADC@config,w,c
  1299  00030E  0B80               	andlw	128
  1300  000310  1024               	iorwf	??_OpenADC+1,w,c
  1301  000312  1023               	iorwf	??_OpenADC,w,c
  1302  000314  6EC0               	movwf	4032,c	;volatile
  1303  000316  AE21               	btfss	OpenADC@config2,7,c
  1304  000318  D003               	goto	l100
  1305  00031A  9C9E               	bcf	3998,6,c	;volatile
  1306  00031C  8C9D               	bsf	3997,6,c	;volatile
  1307  00031E  8CF2               	bsf	intcon,6,c	;volatile
  1308  000320                     l100:
  1309  000320  80C2               	bsf	4034,0,c	;volatile
  1310  000322  0012               	return	
  1311  000324                     __end_of_OpenADC:
  1312                           	opt stack 0
  1313                           pclatu	equ	0xFFB
  1314                           pclath	equ	0xFFA
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           fsr0h	equ	0xFEA
  1323                           fsr0l	equ	0xFE9
  1324                           wreg	equ	0xFE8
  1325                           fsr1h	equ	0xFE2
  1326                           fsr1l	equ	0xFE1
  1327                           bsr	equ	0xFE0
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function _CloseADC *****************
  1333 ;; Defined at:
  1334 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcclose.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		None
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    2
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_InitApp
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text9
  1363  000448                     __ptext9:
  1364                           	opt stack 0
  1365  000448                     _CloseADC:
  1366                           	opt stack 27
  1367                           
  1368                           ;incstack = 0
  1369                           ;incstack = 0
  1370  000448  90C2               	bcf	4034,0,c	;volatile
  1371  00044A  9C9D               	bcf	3997,6,c	;volatile
  1372  00044C  0012               	return	
  1373  00044E                     __end_of_CloseADC:
  1374                           	opt stack 0
  1375                           pclatu	equ	0xFFB
  1376                           pclath	equ	0xFFA
  1377                           tblptru	equ	0xFF8
  1378                           tblptrh	equ	0xFF7
  1379                           tblptrl	equ	0xFF6
  1380                           tablat	equ	0xFF5
  1381                           prodh	equ	0xFF4
  1382                           prodl	equ	0xFF3
  1383                           intcon	equ	0xFF2
  1384                           fsr0h	equ	0xFEA
  1385                           fsr0l	equ	0xFE9
  1386                           wreg	equ	0xFE8
  1387                           fsr1h	equ	0xFE2
  1388                           fsr1l	equ	0xFE1
  1389                           bsr	equ	0xFE0
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function _ConfigureOscillator *****************
  1395 ;; Defined at:
  1396 ;;		line 25 in file "system.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;		None               void
  1403 ;; Registers used:
  1404 ;;		None
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    2
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text10
  1425  00044E                     __ptext10:
  1426                           	opt stack 0
  1427  00044E                     _ConfigureOscillator:
  1428                           	opt stack 28
  1429                           
  1430                           ;incstack = 0
  1431                           ;incstack = 0
  1432  00044E  0012               	return	
  1433  000450                     __end_of_ConfigureOscillator:
  1434                           	opt stack 0
  1435                           pclatu	equ	0xFFB
  1436                           pclath	equ	0xFFA
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           prodh	equ	0xFF4
  1442                           prodl	equ	0xFF3
  1443                           intcon	equ	0xFF2
  1444                           fsr0h	equ	0xFEA
  1445                           fsr0l	equ	0xFE9
  1446                           wreg	equ	0xFE8
  1447                           fsr1h	equ	0xFE2
  1448                           fsr1l	equ	0xFE1
  1449                           bsr	equ	0xFE0
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _high_isr *****************
  1455 ;; Defined at:
  1456 ;;		line 36 in file "interrupts.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;		None               void
  1463 ;; Registers used:
  1464 ;;		None
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:       14 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		Interrupt level 2
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	intcode
  1484  000008                     __pintcode:
  1485                           	opt stack 0
  1486  000008                     _high_isr:
  1487                           	opt stack 26
  1488                           
  1489                           ;incstack = 0
  1490  000008  CFFA F012          	movff	pclath,??_high_isr
  1491  00000C  CFFB F013          	movff	pclatu,??_high_isr+1
  1492  000010  ED2E  F001         	call	int_func,f	;refresh shadow registers
  1493  000014                     pclatu	equ	0xFFB
  1494                           pclath	equ	0xFFA
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           prodh	equ	0xFF4
  1500                           prodl	equ	0xFF3
  1501                           intcon	equ	0xFF2
  1502                           fsr0h	equ	0xFEA
  1503                           fsr0l	equ	0xFE9
  1504                           wreg	equ	0xFE8
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           bsr	equ	0xFE0
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8
  1511                           
  1512                           	psect	intcode_body
  1513  00025C                     __pintcode_body:
  1514                           	opt stack 26
  1515  00025C                     int_func:
  1516                           	opt stack 26
  1517  00025C  0006               	pop		; remove dummy address from shadow register refresh
  1518  00025E  CFE9 F014          	movff	fsr0l,??_high_isr+2
  1519  000262  CFEA F015          	movff	fsr0h,??_high_isr+3
  1520  000266  CFE1 F016          	movff	fsr1l,??_high_isr+4
  1521  00026A  CFE2 F017          	movff	fsr1h,??_high_isr+5
  1522  00026E  CFD9 F018          	movff	fsr2l,??_high_isr+6
  1523  000272  CFDA F019          	movff	fsr2h,??_high_isr+7
  1524  000276  CFF3 F01A          	movff	prodl,??_high_isr+8
  1525  00027A  CFF4 F01B          	movff	prodh,??_high_isr+9
  1526  00027E  CFF6 F01C          	movff	tblptrl,??_high_isr+10
  1527  000282  CFF7 F01D          	movff	tblptrh,??_high_isr+11
  1528  000286  CFF8 F01E          	movff	tblptru,??_high_isr+12
  1529  00028A  CFF5 F01F          	movff	tablat,??_high_isr+13
  1530  00028E  C01F  FFF5         	movff	??_high_isr+13,tablat
  1531  000292  C01E  FFF8         	movff	??_high_isr+12,tblptru
  1532  000296  C01D  FFF7         	movff	??_high_isr+11,tblptrh
  1533  00029A  C01C  FFF6         	movff	??_high_isr+10,tblptrl
  1534  00029E  C01B  FFF4         	movff	??_high_isr+9,prodh
  1535  0002A2  C01A  FFF3         	movff	??_high_isr+8,prodl
  1536  0002A6  C019  FFDA         	movff	??_high_isr+7,fsr2h
  1537  0002AA  C018  FFD9         	movff	??_high_isr+6,fsr2l
  1538  0002AE  C017  FFE2         	movff	??_high_isr+5,fsr1h
  1539  0002B2  C016  FFE1         	movff	??_high_isr+4,fsr1l
  1540  0002B6  C015  FFEA         	movff	??_high_isr+3,fsr0h
  1541  0002BA  C014  FFE9         	movff	??_high_isr+2,fsr0l
  1542  0002BE  C013  FFFB         	movff	??_high_isr+1,pclatu
  1543  0002C2  C012  FFFA         	movff	??_high_isr,pclath
  1544  0002C6  0011               	retfie		f
  1545  0002C8                     __end_of_high_isr:
  1546                           	opt stack 0
  1547  0000                     pclatu	equ	0xFFB
  1548                           pclath	equ	0xFFA
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           prodh	equ	0xFF4
  1554                           prodl	equ	0xFF3
  1555                           intcon	equ	0xFF2
  1556                           fsr0h	equ	0xFEA
  1557                           fsr0l	equ	0xFE9
  1558                           wreg	equ	0xFE8
  1559                           fsr1h	equ	0xFE2
  1560                           fsr1l	equ	0xFE1
  1561                           bsr	equ	0xFE0
  1562                           fsr2h	equ	0xFDA
  1563                           fsr2l	equ	0xFD9
  1564                           status	equ	0xFD8
  1565                           pclatu	equ	0xFFB
  1566                           pclath	equ	0xFFA
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           prodh	equ	0xFF4
  1572                           prodl	equ	0xFF3
  1573                           intcon	equ	0xFF2
  1574                           fsr0h	equ	0xFEA
  1575                           fsr0l	equ	0xFE9
  1576                           wreg	equ	0xFE8
  1577                           fsr1h	equ	0xFE2
  1578                           fsr1l	equ	0xFE1
  1579                           bsr	equ	0xFE0
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8
  1583                           
  1584                           	psect	rparam
  1585  0000                     pclatu	equ	0xFFB
  1586                           pclath	equ	0xFFA
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           prodh	equ	0xFF4
  1592                           prodl	equ	0xFF3
  1593                           intcon	equ	0xFF2
  1594                           fsr0h	equ	0xFEA
  1595                           fsr0l	equ	0xFE9
  1596                           wreg	equ	0xFE8
  1597                           fsr1h	equ	0xFE2
  1598                           fsr1l	equ	0xFE1
  1599                           bsr	equ	0xFE0
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     43      43
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_InitApp
    _recvSPI->_ReadSPI
    _sendSPI->_WriteSPI
    _InitApp->_setupSPI
    _setupSPI->_OpenSPI

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     225
                                             40 COMRAM     3     3      0
                _ConfigureOscillator
                            _InitApp
                            _sendSPI
                            _recvSPI
 ---------------------------------------------------------------------------------
 (1) _recvSPI                                              1     0      1       0
                                             32 COMRAM     1     0      1
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (2) _ReadSPI                                              1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendSPI                                              4     2      2      45
                                             33 COMRAM     4     2      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     1      1      15
                                             31 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0     165
                                             37 COMRAM     3     3      0
                           _CloseADC
                            _OpenADC
                           _setupSPI
 ---------------------------------------------------------------------------------
 (2) _setupSPI                                             3     3      0      60
                                             34 COMRAM     3     3      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     0      3      60
                                             31 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     105
                                             31 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _CloseADC
     _OpenADC
     _setupSPI
       _OpenSPI
   _sendSPI
     _WriteSPI
   _recvSPI
     _ReadSPI

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     2B      2B       1       33.9%
STACK                0      0       3       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Nov 06 15:20:50 2013

                 _SSPSTATbits 000FC7                            l21 00AE                            l73 03E0  
                          l66 03BE                            u77 00C4                            u87 00E6  
                          u97 0106                            bsr 000FE0                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                 __CFG_OSC$EC 000000                  __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000  
                 __CFG_WDT$ON 000000                           l100 0320                           l120 033C  
                         l123 0356                           l124 0374                           l125 035C  
                         l117 0336                           l126 0360                           l134 042A  
                         l119 033A                           l151 0418                           l149 041E  
                         l801 03D2                           l843 0340                           l847 0364  
                         l797 03C0                  __CFG_CPB$OFF 000000                           u107 012E  
                         u117 014E                           u127 0178                           u137 0198  
                         u147 01C2                           u157 01E2                           u167 020A  
                         u177 022A                  __CFG_CPD$OFF 000000                           u187 0250  
                         i1l6 005C                           i2l3 028E                           wreg 000FE8  
                        _main 00A6                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        fsr2l 000FD9                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 00A2                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000               __end_of_InitApp 03B4               __end_of_ReadSPI 0432  
             __end_of_OpenADC 0324               __end_of_OpenSPI 037C                         ?_main 0001  
                       _PORTB 000F81                         _TRISA 000F92                         _TRISB 000F93  
         _ConfigureOscillator 044E                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             __end_of_recvSPI 043E               __end_of_sendSPI 03E2               __end_of_low_isr 00A2  
                       tablat 000FF5                         status 000FD8          ?_ConfigureOscillator 0001  
            __end_of_CloseADC 044E               __initialization 043E                  __end_of_main 025C  
                      ??_main 0029                 __activetblptr 000002                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              __end_of_WriteSPI 0420  
                      _SSPBUF 000FC9                     ??_InitApp 0026                     ??_ReadSPI 0020  
       ??_ConfigureOscillator 0020                     ??_OpenADC 0023                     ??_OpenSPI 0023  
              __CFG_XINST$OFF 000000              __end_of_high_isr 02C8                __CFG_STVREN$ON 000000  
               sendSPI@retval 0025               WriteSPI@TempVar 0021                     ??_recvSPI 0022  
                   ??_sendSPI 0024              __end_of_setupSPI 0404                     ??_low_isr 0001  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0080       __end_of__initialization 043E               __CFG_PBADEN$OFF 000000  
              __pcstackCOMRAM 0001                     ?_CloseADC 0001                     ?_WriteSPI 0020  
                  ??_CloseADC 0020                       _SSPCON1 000FC6                     ?_high_isr 0001  
                     _SSPSTAT 000FC7                       _InitApp 037C                       _ReadSPI 0420  
                     _OpenADC 02C8                       _OpenSPI 0324                       __Hparam 0000  
                     __Lparam 0000                     ?_setupSPI 0001                sendSPI@command 0023  
                     __pcinit 043E                       __ramtop 1000                    ??_WriteSPI 0021  
                     __ptext0 00A6                       __ptext1 0432                       __ptext2 0420  
                     __ptext3 03B4                       __ptext4 0404                       __ptext5 037C  
                     __ptext6 03E2                       __ptext7 0324                       __ptext8 02C8  
                     __ptext9 0448                       _recvSPI 0432                       _sendSPI 03B4  
                     _low_isr 0018                OpenADC@config2 0021                       main@val 002B  
                  ??_high_isr 0012                __pintcode_body 025C          end_of_initialization 043E  
               __Lmediumconst 0000                       int_func 025C                    ??_setupSPI 0023  
            WriteSPI@data_out 0020                     _PORTBbits 000F81                     _TRISAbits 000F92  
                   _TRISCbits 000F94                  recvSPI@slave 0021                    fp__recvSPI 0014  
 __end_of_ConfigureOscillator 0450              OpenSPI@smp_phase 0022           start_initialization 043E  
              ReadSPI@TempVar 0020              OpenSPI@sync_mode 0020             __size_of_CloseADC 0006  
                sendSPI@slave 0022              __CFG_LPT1OSC$OFF 000000             __size_of_WriteSPI 001C  
           __size_of_high_isr 02C0                      ?_InitApp 0001                      ?_ReadSPI 0001  
           OpenADC@portconfig 0022                      ?_OpenADC 0020                      ?_OpenSPI 0020  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008             __size_of_setupSPI 0022  
                 __pintcodelo 0018                      ?_recvSPI 0021                      ?_sendSPI 0022  
                    ?_low_isr 0001                 OpenADC@config 0020                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E              __CFG_WDTPS$32768 000000               OpenSPI@bus_mode 0021  
                  _ADCON0bits 000FC2                      _CloseADC 0448              __size_of_InitApp 0038  
            __size_of_ReadSPI 0012                      __Hrparam 0000              __size_of_OpenADC 005C  
                    __Lrparam 0000              __size_of_OpenSPI 0058            __CFG_BOREN$SBORDIS 000000  
                    _WriteSPI 0404              __size_of_recvSPI 000C              __size_of_sendSPI 002E  
            __size_of_low_isr 008A                      __ptext10 044E                      _high_isr 0008  
               __size_of_main 01B6  __size_of_ConfigureOscillator 0002                      _setupSPI 03E2  
                  _INTCONbits 000FF2                      intlevel1 0000                      intlevel2 0000  
                 _SSPCON1bits 000FC6  
