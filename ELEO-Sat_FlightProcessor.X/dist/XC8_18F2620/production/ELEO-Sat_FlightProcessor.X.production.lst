

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Nov 08 01:32:58 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     _ADCON0	set	4034
    36  0000                     _ADCON0bits	set	4034
    37  0000                     _ADCON1	set	4033
    38  0000                     _ADCON2	set	4032
    39  0000                     _ADRESH	set	4036
    40  0000                     _ADRESL	set	4035
    41  0000                     _INTCONbits	set	4082
    42  0000                     _IPR1bits	set	3999
    43  0000                     _PIE1bits	set	3997
    44  0000                     _PIR1bits	set	3998
    45  0000                     _PORTB	set	3969
    46  0000                     _PORTBbits	set	3969
    47  0000                     _RCONbits	set	4048
    48  0000                     _RCREG	set	4014
    49  0000                     _RCSTA	set	4011
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _SPBRG	set	4015
    52  0000                     _SPBRGH	set	4016
    53  0000                     _SSPBUF	set	4041
    54  0000                     _SSPCON1	set	4038
    55  0000                     _SSPCON1bits	set	4038
    56  0000                     _SSPSTAT	set	4039
    57  0000                     _SSPSTATbits	set	4039
    58  0000                     _T0CON	set	4053
    59  0000                     _T0CONbits	set	4053
    60  0000                     _TMR0H	set	4055
    61  0000                     _TMR0L	set	4054
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISAbits	set	3986
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISCbits	set	3988
    66  0000                     _TXREG	set	4013
    67  0000                     _TXSTA	set	4012
    68  0000                     _TXSTAbits	set	4012
    69                           
    70 ;; *************** function _low_isr *****************
    71 ;; Defined at:
    72 ;;		line 73 in file "interrupts.c"
    73 ;; Parameters:    Size  Location     Type
    74 ;;		None
    75 ;; Auto vars:     Size  Location     Type
    76 ;;		None
    77 ;; Return value:  Size  Location     Type
    78 ;;		None               void
    79 ;; Registers used:
    80 ;;		None
    81 ;; Tracked objects:
    82 ;;		On entry : 0/0
    83 ;;		On exit  : 0/0
    84 ;;		Unchanged: 0/0
    85 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
    86 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    87 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    88 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    89 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
    90 ;;Total ram usage:       17 bytes
    91 ;; Hardware stack levels used:    1
    92 ;; Hardware stack levels required when called:    3
    93 ;; This function calls:
    94 ;;		Nothing
    95 ;; This function is called by:
    96 ;;		Interrupt level 1
    97 ;; This function uses a non-reentrant model
    98 ;;
    99                           
   100                           	psect	intcodelo
   101  000018                     __pintcodelo:
   102                           	opt stack 0
   103                           
   104                           ; #config settings
   105  000018                     _low_isr:
   106                           	opt stack 24
   107                           
   108                           ;incstack = 0
   109  000018  CFD8 F001          	movff	status,??_low_isr
   110  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   111  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   112  000024  CFFA F004          	movff	pclath,??_low_isr+3
   113  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   114  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   115  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   116  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   117  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   118  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   119  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   120  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   121  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   122  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   123  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   124  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   125  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   126  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
   127  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
   128  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   129  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   130  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
   131  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
   132  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   133  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   134  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
   135  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
   136  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
   137  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
   138  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
   139  000090  C004  FFFA         	movff	??_low_isr+3,pclath
   140  000094  C003  FFE0         	movff	??_low_isr+2,bsr
   141  000098  C002  FFE8         	movff	??_low_isr+1,wreg
   142  00009C  C001  FFD8         	movff	??_low_isr,status
   143  0000A0  0010               	retfie	
   144  0000A2                     __end_of_low_isr:
   145                           	opt stack 0
   146                           pclatu	equ	0xFFB
   147                           pclath	equ	0xFFA
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           prodh	equ	0xFF4
   153                           prodl	equ	0xFF3
   154                           fsr0h	equ	0xFEA
   155                           fsr0l	equ	0xFE9
   156                           wreg	equ	0xFE8
   157                           fsr1h	equ	0xFE2
   158                           fsr1l	equ	0xFE1
   159                           bsr	equ	0xFE0
   160                           fsr2h	equ	0xFDA
   161                           fsr2l	equ	0xFD9
   162                           status	equ	0xFD8
   163                           
   164                           	psect	cinit
   165  00064E                     __pcinit:
   166                           	opt stack 0
   167  00064E                     start_initialization:
   168                           	opt stack 0
   169  00064E                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to COMRAM (53 bytes)
   173  00064E  EE00  F037         	lfsr	0,__pbssCOMRAM
   174  000652  0E35               	movlw	53
   175  000654                     clear_0:
   176  000654  6AEE               	clrf	postinc0,c
   177  000656  06E8               	decf	wreg,f,c
   178  000658  E1FD               	bnz	clear_0
   179  00065A                     end_of_initialization:
   180                           	opt stack 0
   181  00065A                     __end_of__initialization:
   182                           	opt stack 0
   183  00065A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  00065C  6EF8               	movwf	tblptru,c
   185  00065E  0100               	movlb	0
   186  000660  EF53  F000         	goto	_main	;jump to C main() function
   187                           pclatu	equ	0xFFB
   188                           pclath	equ	0xFFA
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           prodh	equ	0xFF4
   194                           prodl	equ	0xFF3
   195                           postinc0	equ	0xFEE
   196                           fsr0h	equ	0xFEA
   197                           fsr0l	equ	0xFE9
   198                           wreg	equ	0xFE8
   199                           fsr1h	equ	0xFE2
   200                           fsr1l	equ	0xFE1
   201                           bsr	equ	0xFE0
   202                           fsr2h	equ	0xFDA
   203                           fsr2l	equ	0xFD9
   204                           status	equ	0xFD8
   205                           
   206                           	psect	bssCOMRAM
   207  000037                     __pbssCOMRAM:
   208                           	opt stack 0
   209  000037                     _sendBuff:
   210                           	opt stack 0
   211  000037                     	ds	41
   212  000060                     _USART_Status:
   213                           	opt stack 0
   214  000060                     	ds	1
   215  000061                     _pollRecv:
   216                           	opt stack 0
   217  000061                     	ds	1
   218  000062                     _recvIdx:
   219                           	opt stack 0
   220  000062                     	ds	1
   221  000063                     _sendIdx:
   222                           	opt stack 0
   223  000063                     	ds	1
   224  000064                     _recvBuff:
   225                           	opt stack 0
   226  000064                     	ds	6
   227  00006A                     _TemperatureReading:
   228                           	opt stack 0
   229  00006A                     	ds	2
   230                           pclatu	equ	0xFFB
   231                           pclath	equ	0xFFA
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           prodh	equ	0xFF4
   237                           prodl	equ	0xFF3
   238                           postinc0	equ	0xFEE
   239                           fsr0h	equ	0xFEA
   240                           fsr0l	equ	0xFE9
   241                           wreg	equ	0xFE8
   242                           fsr1h	equ	0xFE2
   243                           fsr1l	equ	0xFE1
   244                           bsr	equ	0xFE0
   245                           fsr2h	equ	0xFDA
   246                           fsr2l	equ	0xFD9
   247                           status	equ	0xFD8
   248                           
   249                           	psect	cstackCOMRAM
   250  000001                     __pcstackCOMRAM:
   251                           	opt stack 0
   252  000001                     ??_low_isr:
   253  000001                     
   254                           ; 1 bytes @ 0x0
   255  000001                     	ds	17
   256  000012                     ReadUSART@data:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x11
   260  000012                     	ds	1
   261  000013                     ?_getsUSART:
   262                           	opt stack 0
   263  000013                     getsUSART@buffer:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x12
   267  000013                     	ds	2
   268  000015                     getsUSART@len:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x14
   272  000015                     	ds	1
   273  000016                     ??_getsUSART:
   274                           
   275                           ; 0 bytes @ 0x15
   276  000016                     	ds	1
   277  000017                     getsUSART@data:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x16
   281  000017                     	ds	1
   282  000018                     getsUSART@i:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x17
   286  000018                     	ds	1
   287  000019                     ??_high_isr:
   288                           
   289                           ; 0 bytes @ 0x18
   290  000019                     	ds	15
   291  000028                     ?_WriteTimer0:
   292                           	opt stack 0
   293  000028                     ?_OpenADC:
   294                           	opt stack 0
   295  000028                     ?_OpenTimer0:
   296                           	opt stack 0
   297  000028                     ?_OpenSPI:
   298                           	opt stack 0
   299  000028                     ?_OpenUSART:
   300                           	opt stack 0
   301  000028                     ?_WriteUSART:
   302                           	opt stack 0
   303  000028                     ?_WriteSPI:
   304                           	opt stack 0
   305  000028                     ?_ReadADC:
   306                           	opt stack 0
   307  000028                     OpenADC@config:
   308                           	opt stack 0
   309  000028                     OpenSPI@sync_mode:
   310                           	opt stack 0
   311  000028                     ReadSPI@TempVar:
   312                           	opt stack 0
   313  000028                     WriteSPI@data_out:
   314                           	opt stack 0
   315  000028                     OpenTimer0@config:
   316                           	opt stack 0
   317  000028                     OpenUSART@config:
   318                           	opt stack 0
   319  000028                     WriteUSART@data:
   320                           	opt stack 0
   321  000028                     WriteTimer0@timer0:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x27
   325  000028                     	ds	1
   326  000029                     ?_recvSPI:
   327                           	opt stack 0
   328  000029                     recvSPI@slave:
   329                           	opt stack 0
   330  000029                     OpenADC@config2:
   331                           	opt stack 0
   332  000029                     OpenSPI@bus_mode:
   333                           	opt stack 0
   334  000029                     WriteSPI@TempVar:
   335                           	opt stack 0
   336  000029                     sendXbee@i:
   337                           	opt stack 0
   338  000029                     OpenUSART@spbrg:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x28
   342  000029                     	ds	1
   343  00002A                     ?_sendSPI:
   344                           	opt stack 0
   345  00002A                     sendSPI@slave:
   346                           	opt stack 0
   347  00002A                     OpenADC@portconfig:
   348                           	opt stack 0
   349  00002A                     OpenSPI@smp_phase:
   350                           	opt stack 0
   351  00002A                     WriteTimer0@timer:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x29
   355  00002A                     	ds	1
   356  00002B                     ??_OpenADC:
   357  00002B                     ??_setupSPI:
   358  00002B                     ??_initXbee:
   359  00002B                     sendSPI@command:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x2A
   363  00002B                     	ds	1
   364  00002C                     initXbee@i:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2B
   368  00002C                     	ds	2
   369  00002E                     initXbee@i_743:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x2D
   373  00002E                     	ds	2
   374  000030                     ??_InitApp:
   375                           
   376                           ; 0 bytes @ 0x2F
   377  000030                     	ds	3
   378  000033                     ??_main:
   379                           
   380                           ; 0 bytes @ 0x32
   381  000033                     	ds	2
   382  000035                     main@i:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x34
   386  000035                     	ds	2
   387                           pclatu	equ	0xFFB
   388                           pclath	equ	0xFFA
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           prodh	equ	0xFF4
   394                           prodl	equ	0xFF3
   395                           postinc0	equ	0xFEE
   396                           fsr0h	equ	0xFEA
   397                           fsr0l	equ	0xFE9
   398                           wreg	equ	0xFE8
   399                           fsr1h	equ	0xFE2
   400                           fsr1l	equ	0xFE1
   401                           bsr	equ	0xFE0
   402                           fsr2h	equ	0xFDA
   403                           fsr2l	equ	0xFD9
   404                           status	equ	0xFD8
   405                           
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 38 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  i               2   52[COMRAM] int 
   416 ;; Return value:  Size  Location     Type
   417 ;;		None               void
   418 ;; Registers used:
   419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;Total ram usage:        4 bytes
   430 ;; Hardware stack levels required when called:    7
   431 ;; This function calls:
   432 ;;		_ConfigureOscillator
   433 ;;		_InitApp
   434 ;;		_sendXbee
   435 ;;		_ConvertADC
   436 ;;		_BusyADC
   437 ;;		_ReadADC
   438 ;;		_sendSPI
   439 ;;		_recvSPI
   440 ;;		_WriteTimer0
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text0
   447  0000A6                     __ptext0:
   448                           	opt stack 0
   449  0000A6                     _main:
   450                           	opt stack 24
   451                           
   452                           ;main.c: 40: ConfigureOscillator();
   453                           
   454                           ;incstack = 0
   455                           ;incstack = 0
   456  0000A6  EC59  F003         	call	_ConfigureOscillator	;wreg free
   457                           
   458                           ;main.c: 43: InitApp();
   459  0000AA  EC3C  F002         	call	_InitApp	;wreg free
   460  0000AE                     l979:
   461                           
   462                           ;main.c: 49: {
   463                           ;main.c: 52: if(pollRecv)
   464  0000AE  5061               	movf	_pollRecv,w,c
   465  0000B0  B4D8               	btfsc	status,2,c
   466  0000B2  D01F               	goto	l62
   467                           
   468                           ;main.c: 53: {
   469                           ;main.c: 55: sendXbee();
   470  0000B4  EC94  F002         	call	_sendXbee	;wreg free
   471                           
   472                           ;main.c: 56: for(int i=0; i<6; i++)
   473  0000B8  0E00               	movlw	0
   474  0000BA  6E36               	movwf	main@i+1,c
   475  0000BC  0E00               	movlw	0
   476  0000BE  6E35               	movwf	main@i,c
   477  0000C0  5036               	movf	main@i+1,w,c
   478  0000C2  0A80               	xorlw	128
   479  0000C4  0F80               	addlw	-128
   480  0000C6  0E06               	movlw	6
   481  0000C8  B4D8               	btfsc	status,2,c
   482  0000CA  5C35               	subwf	main@i,w,c
   483  0000CC  B0D8               	btfsc	status,0,c
   484  0000CE  D00B               	goto	l995
   485                           
   486                           ;main.c: 57: recvBuff[i] = 0;
   487  0000D0  0E64               	movlw	low _recvBuff
   488  0000D2  2435               	addwf	main@i,w,c
   489  0000D4  6ED9               	movwf	fsr2l,c
   490  0000D6  0E00               	movlw	high _recvBuff
   491  0000D8  2036               	addwfc	main@i+1,w,c
   492  0000DA  6EDA               	movwf	fsr2h,c
   493  0000DC  0E00               	movlw	0
   494  0000DE  6EDF               	movwf	indf2,c
   495  0000E0  4A35               	infsnz	main@i,f,c
   496  0000E2  2A36               	incf	main@i+1,f,c
   497  0000E4  D7ED               	goto	L1
   498  0000E6                     l995:
   499                           
   500                           ;main.c: 58: pollRecv = 0;
   501  0000E6  6E33               	movwf	??_main& (0+255),c
   502  0000E8  0E00               	movlw	0
   503  0000EA  6E61               	movwf	_pollRecv,c
   504  0000EC  5033               	movf	??_main& (0+255),w,c
   505                           
   506                           ;main.c: 59: PORTBbits.RB2 ^= 1;
   507  0000EE  7481               	btg	3969,2,c	;volatile
   508                           
   509                           ;main.c: 60: }
   510  0000F0  D7DE               	goto	l979
   511  0000F2                     l62:
   512                           
   513                           ;main.c: 62: else if(INTCONbits.TMR0IF)
   514  0000F2  A4F2               	btfss	intcon,2,c	;volatile
   515  0000F4  D7DC               	goto	l979
   516                           
   517                           ;main.c: 63: {
   518                           ;main.c: 65: ConvertADC();
   519  0000F6  EC57  F003         	call	_ConvertADC	;wreg free
   520  0000FA                     l1001:
   521  0000FA  EC51  F003         	call	_BusyADC	;wreg free
   522  0000FE  0900               	iorlw	0
   523  000100  A4D8               	btfss	status,2,c
   524  000102  D7FB               	goto	l1001
   525                           
   526                           ;main.c: 67: TemperatureReading = ReadADC();
   527  000104  EC4C  F003         	call	_ReadADC	;wreg free
   528  000108  C028  F06A         	movff	?_ReadADC,_TemperatureReading
   529  00010C  C029  F06B         	movff	?_ReadADC+1,_TemperatureReading+1
   530                           
   531                           ;main.c: 69: sendBuff[4] = 0x03 & (TemperatureReading >> 8);
   532  000110  506B               	movf	_TemperatureReading+1,w,c
   533  000112  0B03               	andlw	3
   534  000114  6E3B               	movwf	_sendBuff+4,c
   535                           
   536                           ;main.c: 70: sendBuff[5] = 0xff & TemperatureReading;
   537  000116  C06A  F03C         	movff	_TemperatureReading,_sendBuff+5
   538                           
   539                           ;main.c: 78: sendSPI(Power, R_Current);
   540  00011A  6E33               	movwf	??_main& (0+255),c
   541  00011C  0E00               	movlw	0
   542  00011E  6E2A               	movwf	?_sendSPI,c
   543  000120  5033               	movf	??_main& (0+255),w,c
   544  000122  6E34               	movwf	(??_main+1)& (0+255),c
   545  000124  0E09               	movlw	9
   546  000126  6E2B               	movwf	?_sendSPI+1,c
   547  000128  5034               	movf	(??_main+1)& (0+255),w,c
   548  00012A  ECC8  F002         	call	_sendSPI	;wreg free
   549                           
   550                           ;main.c: 79: _delay((unsigned long)((50)*(20000000/4000000.0)));
   551  00012E  0E53               	movlw	83
   552  000130                     u417:
   553  000130  2EE8               	decfsz	wreg,f,c
   554  000132  D7FE               	goto	u417
   555  000134  F000               	nop	
   556                           
   557                           ;main.c: 80: sendBuff[6] = recvSPI(Power);
   558  000136  6E33               	movwf	??_main& (0+255),c
   559  000138  0E00               	movlw	0
   560  00013A  6E29               	movwf	?_recvSPI,c
   561  00013C  5033               	movf	??_main& (0+255),w,c
   562  00013E  ECEC  F002         	call	_recvSPI	;wreg free
   563  000142  6E3D               	movwf	_sendBuff+6,c
   564                           
   565                           ;main.c: 81: sendBuff[7] = recvSPI(Power);
   566  000144  6E33               	movwf	??_main& (0+255),c
   567  000146  0E00               	movlw	0
   568  000148  6E29               	movwf	?_recvSPI,c
   569  00014A  5033               	movf	??_main& (0+255),w,c
   570  00014C  ECEC  F002         	call	_recvSPI	;wreg free
   571  000150  6E3E               	movwf	_sendBuff+7,c
   572                           
   573                           ;main.c: 82: _delay((unsigned long)((1)*(20000000/4000.0)));
   574  000152  0E07               	movlw	7
   575  000154  6E33               	movwf	??_main& (0+255),c
   576  000156  0E7D               	movlw	125
   577  000158                     u427:
   578  000158  2EE8               	decfsz	wreg,f,c
   579  00015A  D7FE               	goto	u427
   580  00015C  2E33               	decfsz	??_main& (0+255),f,c
   581  00015E  D7FC               	goto	u427
   582                           
   583                           ;main.c: 85: sendSPI(Power, Solar_Current);
   584  000160  6E33               	movwf	??_main& (0+255),c
   585  000162  0E00               	movlw	0
   586  000164  6E2A               	movwf	?_sendSPI,c
   587  000166  5033               	movf	??_main& (0+255),w,c
   588  000168  6E34               	movwf	(??_main+1)& (0+255),c
   589  00016A  0E0A               	movlw	10
   590  00016C  6E2B               	movwf	?_sendSPI+1,c
   591  00016E  5034               	movf	(??_main+1)& (0+255),w,c
   592  000170  ECC8  F002         	call	_sendSPI	;wreg free
   593                           
   594                           ;main.c: 86: _delay((unsigned long)((50)*(20000000/4000000.0)));
   595  000174  0E53               	movlw	83
   596  000176                     u437:
   597  000176  2EE8               	decfsz	wreg,f,c
   598  000178  D7FE               	goto	u437
   599  00017A  F000               	nop	
   600                           
   601                           ;main.c: 87: sendBuff[8] = recvSPI(Power);
   602  00017C  6E33               	movwf	??_main& (0+255),c
   603  00017E  0E00               	movlw	0
   604  000180  6E29               	movwf	?_recvSPI,c
   605  000182  5033               	movf	??_main& (0+255),w,c
   606  000184  ECEC  F002         	call	_recvSPI	;wreg free
   607  000188  6E3F               	movwf	_sendBuff+8,c
   608                           
   609                           ;main.c: 88: sendBuff[9] = recvSPI(Power);
   610  00018A  6E33               	movwf	??_main& (0+255),c
   611  00018C  0E00               	movlw	0
   612  00018E  6E29               	movwf	?_recvSPI,c
   613  000190  5033               	movf	??_main& (0+255),w,c
   614  000192  ECEC  F002         	call	_recvSPI	;wreg free
   615  000196  6E40               	movwf	_sendBuff+9,c
   616                           
   617                           ;main.c: 89: _delay((unsigned long)((1)*(20000000/4000.0)));
   618  000198  0E07               	movlw	7
   619  00019A  6E33               	movwf	??_main& (0+255),c
   620  00019C  0E7D               	movlw	125
   621  00019E                     u447:
   622  00019E  2EE8               	decfsz	wreg,f,c
   623  0001A0  D7FE               	goto	u447
   624  0001A2  2E33               	decfsz	??_main& (0+255),f,c
   625  0001A4  D7FC               	goto	u447
   626                           
   627                           ;main.c: 92: sendSPI(Power, Solar_Voltage);
   628  0001A6  6E33               	movwf	??_main& (0+255),c
   629  0001A8  0E00               	movlw	0
   630  0001AA  6E2A               	movwf	?_sendSPI,c
   631  0001AC  5033               	movf	??_main& (0+255),w,c
   632  0001AE  6E34               	movwf	(??_main+1)& (0+255),c
   633  0001B0  0E0B               	movlw	11
   634  0001B2  6E2B               	movwf	?_sendSPI+1,c
   635  0001B4  5034               	movf	(??_main+1)& (0+255),w,c
   636  0001B6  ECC8  F002         	call	_sendSPI	;wreg free
   637                           
   638                           ;main.c: 93: _delay((unsigned long)((50)*(20000000/4000000.0)));
   639  0001BA  0E53               	movlw	83
   640  0001BC                     u457:
   641  0001BC  2EE8               	decfsz	wreg,f,c
   642  0001BE  D7FE               	goto	u457
   643  0001C0  F000               	nop	
   644                           
   645                           ;main.c: 94: sendBuff[10] = recvSPI(Power);
   646  0001C2  6E33               	movwf	??_main& (0+255),c
   647  0001C4  0E00               	movlw	0
   648  0001C6  6E29               	movwf	?_recvSPI,c
   649  0001C8  5033               	movf	??_main& (0+255),w,c
   650  0001CA  ECEC  F002         	call	_recvSPI	;wreg free
   651  0001CE  6E41               	movwf	_sendBuff+10,c
   652                           
   653                           ;main.c: 95: sendBuff[11] = recvSPI(Power);
   654  0001D0  6E33               	movwf	??_main& (0+255),c
   655  0001D2  0E00               	movlw	0
   656  0001D4  6E29               	movwf	?_recvSPI,c
   657  0001D6  5033               	movf	??_main& (0+255),w,c
   658  0001D8  ECEC  F002         	call	_recvSPI	;wreg free
   659  0001DC  6E42               	movwf	_sendBuff+11,c
   660                           
   661                           ;main.c: 96: _delay((unsigned long)((1)*(20000000/4000.0)));
   662  0001DE  0E07               	movlw	7
   663  0001E0  6E33               	movwf	??_main& (0+255),c
   664  0001E2  0E7D               	movlw	125
   665  0001E4                     u467:
   666  0001E4  2EE8               	decfsz	wreg,f,c
   667  0001E6  D7FE               	goto	u467
   668  0001E8  2E33               	decfsz	??_main& (0+255),f,c
   669  0001EA  D7FC               	goto	u467
   670                           
   671                           ;main.c: 99: sendSPI(Power, Temperature);
   672  0001EC  6E33               	movwf	??_main& (0+255),c
   673  0001EE  0E00               	movlw	0
   674  0001F0  6E2A               	movwf	?_sendSPI,c
   675  0001F2  5033               	movf	??_main& (0+255),w,c
   676  0001F4  6E34               	movwf	(??_main+1)& (0+255),c
   677  0001F6  0E0C               	movlw	12
   678  0001F8  6E2B               	movwf	?_sendSPI+1,c
   679  0001FA  5034               	movf	(??_main+1)& (0+255),w,c
   680  0001FC  ECC8  F002         	call	_sendSPI	;wreg free
   681                           
   682                           ;main.c: 100: _delay((unsigned long)((50)*(20000000/4000000.0)));
   683  000200  0E53               	movlw	83
   684  000202                     u477:
   685  000202  2EE8               	decfsz	wreg,f,c
   686  000204  D7FE               	goto	u477
   687  000206  F000               	nop	
   688                           
   689                           ;main.c: 101: sendBuff[12] = recvSPI(Power);
   690  000208  6E33               	movwf	??_main& (0+255),c
   691  00020A  0E00               	movlw	0
   692  00020C  6E29               	movwf	?_recvSPI,c
   693  00020E  5033               	movf	??_main& (0+255),w,c
   694  000210  ECEC  F002         	call	_recvSPI	;wreg free
   695  000214  6E43               	movwf	_sendBuff+12,c
   696                           
   697                           ;main.c: 102: sendBuff[13] = recvSPI(Power);
   698  000216  6E33               	movwf	??_main& (0+255),c
   699  000218  0E00               	movlw	0
   700  00021A  6E29               	movwf	?_recvSPI,c
   701  00021C  5033               	movf	??_main& (0+255),w,c
   702  00021E  ECEC  F002         	call	_recvSPI	;wreg free
   703  000222  6E44               	movwf	_sendBuff+13,c
   704                           
   705                           ;main.c: 103: _delay((unsigned long)((1)*(20000000/4000.0)));
   706  000224  0E07               	movlw	7
   707  000226  6E33               	movwf	??_main& (0+255),c
   708  000228  0E7D               	movlw	125
   709  00022A                     u487:
   710  00022A  2EE8               	decfsz	wreg,f,c
   711  00022C  D7FE               	goto	u487
   712  00022E  2E33               	decfsz	??_main& (0+255),f,c
   713  000230  D7FC               	goto	u487
   714                           
   715                           ;main.c: 106: sendSPI(Power, Processor_Voltage);
   716  000232  6E33               	movwf	??_main& (0+255),c
   717  000234  0E00               	movlw	0
   718  000236  6E2A               	movwf	?_sendSPI,c
   719  000238  5033               	movf	??_main& (0+255),w,c
   720  00023A  6E34               	movwf	(??_main+1)& (0+255),c
   721  00023C  0E0D               	movlw	13
   722  00023E  6E2B               	movwf	?_sendSPI+1,c
   723  000240  5034               	movf	(??_main+1)& (0+255),w,c
   724  000242  ECC8  F002         	call	_sendSPI	;wreg free
   725                           
   726                           ;main.c: 107: _delay((unsigned long)((50)*(20000000/4000000.0)));
   727  000246  0E53               	movlw	83
   728  000248                     u497:
   729  000248  2EE8               	decfsz	wreg,f,c
   730  00024A  D7FE               	goto	u497
   731  00024C  F000               	nop	
   732                           
   733                           ;main.c: 108: sendBuff[14] = recvSPI(Power);
   734  00024E  6E33               	movwf	??_main& (0+255),c
   735  000250  0E00               	movlw	0
   736  000252  6E29               	movwf	?_recvSPI,c
   737  000254  5033               	movf	??_main& (0+255),w,c
   738  000256  ECEC  F002         	call	_recvSPI	;wreg free
   739  00025A  6E45               	movwf	_sendBuff+14,c
   740                           
   741                           ;main.c: 109: sendBuff[15] = recvSPI(Power);
   742  00025C  6E33               	movwf	??_main& (0+255),c
   743  00025E  0E00               	movlw	0
   744  000260  6E29               	movwf	?_recvSPI,c
   745  000262  5033               	movf	??_main& (0+255),w,c
   746  000264  ECEC  F002         	call	_recvSPI	;wreg free
   747  000268  6E46               	movwf	_sendBuff+15,c
   748                           
   749                           ;main.c: 111: INTCONbits.TMR0IF = 0;
   750  00026A  94F2               	bcf	intcon,2,c	;volatile
   751                           
   752                           ;main.c: 112: WriteTimer0(0x0000);
   753  00026C  0E00               	movlw	0
   754  00026E  6E29               	movwf	?_WriteTimer0+1,c
   755  000270  0E00               	movlw	0
   756  000272  6E28               	movwf	?_WriteTimer0,c
   757  000274  EC3B  F003         	call	_WriteTimer0	;wreg free
   758  000278  D71A               	goto	l979
   759  00027A                     __end_of_main:
   760                           	opt stack 0
   761                           pclatu	equ	0xFFB
   762                           pclath	equ	0xFFA
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           prodh	equ	0xFF4
   768                           prodl	equ	0xFF3
   769                           intcon	equ	0xFF2
   770                           postinc0	equ	0xFEE
   771                           fsr0h	equ	0xFEA
   772                           fsr0l	equ	0xFE9
   773                           wreg	equ	0xFE8
   774                           fsr1h	equ	0xFE2
   775                           fsr1l	equ	0xFE1
   776                           bsr	equ	0xFE0
   777                           indf2	equ	0xFDF
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function _recvSPI *****************
   783 ;; Defined at:
   784 ;;		line 65 in file "spi_comm.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  slave           1   40[COMRAM] enum E3674
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      unsigned char 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    5
   805 ;; This function calls:
   806 ;;		_ReadSPI
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text1
   813  0005D8                     __ptext1:
   814                           	opt stack 0
   815  0005D8                     _recvSPI:
   816                           	opt stack 25
   817                           
   818                           ;spi_comm.c: 66: switch(slave)
   819                           
   820                           ;incstack = 0
   821                           ;incstack = 0
   822  0005D8  D005               	goto	l1119
   823  0005DA                     l144:
   824                           
   825                           ;spi_comm.c: 69: (PORTBbits.RB0 = 0);
   826  0005DA  9081               	bcf	3969,0,c	;volatile
   827                           
   828                           ;spi_comm.c: 70: ReadSPI();
   829  0005DC  EC32  F003         	call	_ReadSPI	;wreg free
   830                           
   831                           ;spi_comm.c: 71: (PORTBbits.RB0 = 1);
   832  0005E0  8081               	bsf	3969,0,c	;volatile
   833                           
   834                           ;spi_comm.c: 72: break;
   835  0005E2  D007               	goto	l1121
   836  0005E4                     l1119:
   837  0005E4  5029               	movf	recvSPI@slave,w,c
   838                           
   839                           ; Switch size 1, requested type "space"
   840                           ; Number of cases is 3, Range of values is 0 to 2
   841                           ; switch strategies available:
   842                           ; Name         Instructions Cycles
   843                           ; simple_byte           10     6 (average)
   844                           ;	Chosen strategy is simple_byte
   845  0005E6  0A00               	xorlw	0	; case 0
   846  0005E8  B4D8               	btfsc	status,2,c
   847  0005EA  D7F7               	goto	l144
   848  0005EC  0A01               	xorlw	1	; case 1
   849  0005EE  A4D8               	btfss	status,2,c
   850  0005F0  0A03               	xorlw	3	; case 2
   851  0005F2                     l1121:
   852                           
   853                           ;spi_comm.c: 83: return SSPBUF;
   854  0005F2  50C9               	movf	4041,w,c	;volatile
   855  0005F4  0012               	return	
   856  0005F6                     __end_of_recvSPI:
   857                           	opt stack 0
   858                           pclatu	equ	0xFFB
   859                           pclath	equ	0xFFA
   860                           tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           prodh	equ	0xFF4
   865                           prodl	equ	0xFF3
   866                           intcon	equ	0xFF2
   867                           postinc0	equ	0xFEE
   868                           fsr0h	equ	0xFEA
   869                           fsr0l	equ	0xFE9
   870                           wreg	equ	0xFE8
   871                           fsr1h	equ	0xFE2
   872                           fsr1l	equ	0xFE1
   873                           bsr	equ	0xFE0
   874                           indf2	equ	0xFDF
   875                           fsr2h	equ	0xFDA
   876                           fsr2l	equ	0xFD9
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _ReadSPI *****************
   880 ;; Defined at:
   881 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_read.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  TempVar         1   39[COMRAM] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      unsigned char 
   888 ;; Registers used:
   889 ;;		wreg, status,2
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;Total ram usage:        1 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    4
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_recvSPI
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text2
   910  000664                     __ptext2:
   911                           	opt stack 0
   912  000664                     _ReadSPI:
   913                           	opt stack 25
   914                           
   915                           ;incstack = 0
   916                           ;incstack = 0
   917  000664  CFC9 F028          	movff	4041,ReadSPI@TempVar	;volatile
   918  000668  969E               	bcf	3998,3,c	;volatile
   919  00066A  0E00               	movlw	0
   920  00066C  6EC9               	movwf	4041,c	;volatile
   921  00066E                     l256:
   922  00066E  A69E               	btfss	3998,3,c	;volatile
   923  000670  D7FE               	goto	l256
   924                           
   925                           ;	Return value of _ReadSPI is never used
   926  000672  50C9               	movf	4041,w,c	;volatile
   927  000674  0012               	return	
   928  000676                     __end_of_ReadSPI:
   929                           	opt stack 0
   930                           pclatu	equ	0xFFB
   931                           pclath	equ	0xFFA
   932                           tblptru	equ	0xFF8
   933                           tblptrh	equ	0xFF7
   934                           tblptrl	equ	0xFF6
   935                           tablat	equ	0xFF5
   936                           prodh	equ	0xFF4
   937                           prodl	equ	0xFF3
   938                           intcon	equ	0xFF2
   939                           postinc0	equ	0xFEE
   940                           fsr0h	equ	0xFEA
   941                           fsr0l	equ	0xFE9
   942                           wreg	equ	0xFE8
   943                           fsr1h	equ	0xFE2
   944                           fsr1l	equ	0xFE1
   945                           bsr	equ	0xFE0
   946                           indf2	equ	0xFDF
   947                           fsr2h	equ	0xFDA
   948                           fsr2l	equ	0xFD9
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _sendSPI *****************
   952 ;; Defined at:
   953 ;;		line 42 in file "spi_comm.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  slave           1   41[COMRAM] enum E3674
   956 ;;  command         1   42[COMRAM] enum E3679
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;		None               void
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;Total ram usage:        2 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    5
   975 ;; This function calls:
   976 ;;		_WriteSPI
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text3
   983  000590                     __ptext3:
   984                           	opt stack 0
   985  000590                     _sendSPI:
   986                           	opt stack 25
   987                           
   988                           ;spi_comm.c: 43: switch(slave)
   989                           
   990                           ;incstack = 0
   991                           ;incstack = 0
   992  000590  D00A               	goto	l1109
   993  000592                     l133:
   994                           
   995                           ;spi_comm.c: 48: (PORTBbits.RB0 = 0);
   996  000592  9081               	bcf	3969,0,c	;volatile
   997  000594                     l1105:
   998  000594  C02B  F028         	movff	sendSPI@command,?_WriteSPI
   999  000598  EC19  F003         	call	_WriteSPI	;wreg free
  1000  00059C  0900               	iorlw	0
  1001  00059E  A4D8               	btfss	status,2,c
  1002  0005A0  D7F9               	goto	l1105
  1003                           
  1004                           ;spi_comm.c: 55: (PORTBbits.RB0 = 1);
  1005  0005A2  8081               	bsf	3969,0,c	;volatile
  1006                           
  1007                           ;spi_comm.c: 56: break;
  1008  0005A4  D007               	goto	l140
  1009  0005A6                     l1109:
  1010  0005A6  502A               	movf	sendSPI@slave,w,c
  1011                           
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 3, Range of values is 0 to 2
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte           10     6 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018  0005A8  0A00               	xorlw	0	; case 0
  1019  0005AA  B4D8               	btfsc	status,2,c
  1020  0005AC  D7F2               	goto	l133
  1021  0005AE  0A01               	xorlw	1	; case 1
  1022  0005B0  A4D8               	btfss	status,2,c
  1023  0005B2  0A03               	xorlw	3	; case 2
  1024  0005B4                     l140:
  1025  0005B4  0012               	return	
  1026  0005B6                     __end_of_sendSPI:
  1027                           	opt stack 0
  1028                           pclatu	equ	0xFFB
  1029                           pclath	equ	0xFFA
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           prodh	equ	0xFF4
  1035                           prodl	equ	0xFF3
  1036                           intcon	equ	0xFF2
  1037                           postinc0	equ	0xFEE
  1038                           fsr0h	equ	0xFEA
  1039                           fsr0l	equ	0xFE9
  1040                           wreg	equ	0xFE8
  1041                           fsr1h	equ	0xFE2
  1042                           fsr1l	equ	0xFE1
  1043                           bsr	equ	0xFE0
  1044                           indf2	equ	0xFDF
  1045                           fsr2h	equ	0xFDA
  1046                           fsr2l	equ	0xFD9
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _WriteSPI *****************
  1050 ;; Defined at:
  1051 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_writ.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  data_out        1   39[COMRAM] unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  TempVar         1   40[COMRAM] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      char 
  1058 ;; Registers used:
  1059 ;;		wreg
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;Total ram usage:        2 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    4
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_sendSPI
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text4
  1080  000632                     __ptext4:
  1081                           	opt stack 0
  1082  000632                     _WriteSPI:
  1083                           	opt stack 25
  1084                           
  1085                           ;incstack = 0
  1086                           ;incstack = 0
  1087  000632  CFC9 F029          	movff	4041,WriteSPI@TempVar	;volatile
  1088  000636  969E               	bcf	3998,3,c	;volatile
  1089  000638  9EC6               	bcf	4038,7,c	;volatile
  1090  00063A  C028  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  1091  00063E  AEC6               	btfss	4038,7,c	;volatile
  1092  000640  D002               	goto	l273
  1093  000642  0EFF               	movlw	255
  1094  000644  D003               	goto	l271
  1095  000646                     l273:
  1096  000646  A69E               	btfss	3998,3,c	;volatile
  1097  000648  D7FE               	goto	l273
  1098  00064A  0E00               	movlw	0
  1099  00064C                     l271:
  1100  00064C  0012               	return	
  1101  00064E                     __end_of_WriteSPI:
  1102                           	opt stack 0
  1103                           pclatu	equ	0xFFB
  1104                           pclath	equ	0xFFA
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           prodh	equ	0xFF4
  1110                           prodl	equ	0xFF3
  1111                           intcon	equ	0xFF2
  1112                           postinc0	equ	0xFEE
  1113                           fsr0h	equ	0xFEA
  1114                           fsr0l	equ	0xFE9
  1115                           wreg	equ	0xFE8
  1116                           fsr1h	equ	0xFE2
  1117                           fsr1l	equ	0xFE1
  1118                           bsr	equ	0xFE0
  1119                           indf2	equ	0xFDF
  1120                           fsr2h	equ	0xFDA
  1121                           fsr2l	equ	0xFD9
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _ReadADC *****************
  1125 ;; Defined at:
  1126 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcread.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   39[COMRAM] int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    4
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text5
  1155  000698                     __ptext5:
  1156                           	opt stack 0
  1157  000698                     _ReadADC:
  1158                           	opt stack 26
  1159                           
  1160                           ;incstack = 0
  1161                           ;incstack = 0
  1162  000698  50C4               	movf	4036,w,c	;volatile
  1163  00069A  6E29               	movwf	?_ReadADC+1,c
  1164  00069C  50C3               	movf	4035,w,c	;volatile
  1165  00069E  6E28               	movwf	?_ReadADC,c
  1166  0006A0  0012               	return	
  1167  0006A2                     __end_of_ReadADC:
  1168                           	opt stack 0
  1169                           pclatu	equ	0xFFB
  1170                           pclath	equ	0xFFA
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           postinc0	equ	0xFEE
  1179                           fsr0h	equ	0xFEA
  1180                           fsr0l	equ	0xFE9
  1181                           wreg	equ	0xFE8
  1182                           fsr1h	equ	0xFE2
  1183                           fsr1l	equ	0xFE1
  1184                           bsr	equ	0xFE0
  1185                           indf2	equ	0xFDF
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _BusyADC *****************
  1191 ;; Defined at:
  1192 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcbusy.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      unsigned char 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    4
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text6
  1221  0006A2                     __ptext6:
  1222                           	opt stack 0
  1223  0006A2                     _BusyADC:
  1224                           	opt stack 26
  1225                           
  1226                           ;incstack = 0
  1227                           ;incstack = 0
  1228  0006A2  30C2               	rrcf	4034,w,c	;volatile
  1229  0006A4  0B01               	andlw	1
  1230  0006A6  0012               	return	
  1231  0006A8                     __end_of_BusyADC:
  1232                           	opt stack 0
  1233                           pclatu	equ	0xFFB
  1234                           pclath	equ	0xFFA
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           prodh	equ	0xFF4
  1240                           prodl	equ	0xFF3
  1241                           intcon	equ	0xFF2
  1242                           postinc0	equ	0xFEE
  1243                           fsr0h	equ	0xFEA
  1244                           fsr0l	equ	0xFE9
  1245                           wreg	equ	0xFE8
  1246                           fsr1h	equ	0xFE2
  1247                           fsr1l	equ	0xFE1
  1248                           bsr	equ	0xFE0
  1249                           indf2	equ	0xFDF
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function _ConvertADC *****************
  1255 ;; Defined at:
  1256 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;		None               void
  1263 ;; Registers used:
  1264 ;;		None
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    4
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text7
  1285  0006AE                     __ptext7:
  1286                           	opt stack 0
  1287  0006AE                     _ConvertADC:
  1288                           	opt stack 26
  1289                           
  1290                           ;incstack = 0
  1291                           ;incstack = 0
  1292  0006AE  82C2               	bsf	4034,1,c	;volatile
  1293  0006B0  0012               	return	
  1294  0006B2                     __end_of_ConvertADC:
  1295                           	opt stack 0
  1296                           pclatu	equ	0xFFB
  1297                           pclath	equ	0xFFA
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           prodh	equ	0xFF4
  1303                           prodl	equ	0xFF3
  1304                           intcon	equ	0xFF2
  1305                           postinc0	equ	0xFEE
  1306                           fsr0h	equ	0xFEA
  1307                           fsr0l	equ	0xFE9
  1308                           wreg	equ	0xFE8
  1309                           fsr1h	equ	0xFE2
  1310                           fsr1l	equ	0xFE1
  1311                           bsr	equ	0xFE0
  1312                           indf2	equ	0xFDF
  1313                           fsr2h	equ	0xFDA
  1314                           fsr2l	equ	0xFD9
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _sendXbee *****************
  1318 ;; Defined at:
  1319 ;;		line 42 in file "xbee.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  i               2   40[COMRAM] int 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;		None               void
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:        2 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    5
  1340 ;; This function calls:
  1341 ;;		_WriteUSART
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text8
  1348  000528                     __ptext8:
  1349                           	opt stack 0
  1350  000528                     _sendXbee:
  1351                           	opt stack 25
  1352                           
  1353                           ;xbee.c: 43: for(int i=0; i<40; i++)
  1354                           
  1355                           ;incstack = 0
  1356                           ;incstack = 0
  1357  000528  0E00               	movlw	0
  1358  00052A  6E2A               	movwf	sendXbee@i+1,c
  1359  00052C  0E00               	movlw	0
  1360  00052E  6E29               	movwf	sendXbee@i,c
  1361  000530  502A               	movf	sendXbee@i+1,w,c
  1362  000532  0A80               	xorlw	128
  1363  000534  0F80               	addlw	-128
  1364  000536  0E28               	movlw	40
  1365  000538  B4D8               	btfsc	status,2,c
  1366  00053A  5C29               	subwf	sendXbee@i,w,c
  1367  00053C  B0D8               	btfsc	status,0,c
  1368  00053E  D00F               	goto	l181
  1369                           
  1370                           ;xbee.c: 44: {
  1371                           ;xbee.c: 45: WriteUSART(sendBuff[i]);
  1372  000540  0E37               	movlw	low _sendBuff
  1373  000542  2429               	addwf	sendXbee@i,w,c
  1374  000544  6ED9               	movwf	fsr2l,c
  1375  000546  0E00               	movlw	high _sendBuff
  1376  000548  202A               	addwfc	sendXbee@i+1,w,c
  1377  00054A  6EDA               	movwf	fsr2h,c
  1378  00054C  50DF               	movf	indf2,w,c
  1379  00054E  6E28               	movwf	?_WriteUSART,c
  1380  000550  EC44  F003         	call	_WriteUSART	;wreg free
  1381  000554                     l178:
  1382  000554  A2AC               	btfss	4012,1,c	;volatile
  1383  000556  D7FE               	goto	l178
  1384  000558  4A29               	infsnz	sendXbee@i,f,c
  1385  00055A  2A2A               	incf	sendXbee@i+1,f,c
  1386  00055C  D7E9               	goto	L2
  1387  00055E                     l181:
  1388  00055E  0012               	return	
  1389  000560                     __end_of_sendXbee:
  1390                           	opt stack 0
  1391                           pclatu	equ	0xFFB
  1392                           pclath	equ	0xFFA
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           intcon	equ	0xFF2
  1400                           postinc0	equ	0xFEE
  1401                           fsr0h	equ	0xFEA
  1402                           fsr0l	equ	0xFE9
  1403                           wreg	equ	0xFE8
  1404                           fsr1h	equ	0xFE2
  1405                           fsr1l	equ	0xFE1
  1406                           bsr	equ	0xFE0
  1407                           indf2	equ	0xFDF
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _WriteUSART *****************
  1413 ;; Defined at:
  1414 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  data            1   39[COMRAM] unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;		None               void
  1421 ;; Registers used:
  1422 ;;		None
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;Total ram usage:        1 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    4
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_sendXbee
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text9
  1443  000688                     __ptext9:
  1444                           	opt stack 0
  1445  000688                     _WriteUSART:
  1446                           	opt stack 25
  1447                           
  1448                           ;incstack = 0
  1449                           ;incstack = 0
  1450  000688  ACAC               	btfss	4012,6,c	;volatile
  1451  00068A  D003               	goto	l365
  1452  00068C  90AC               	bcf	4012,0,c	;volatile
  1453  00068E  B260               	btfsc	_USART_Status,1,c
  1454  000690  80AC               	bsf	4012,0,c	;volatile
  1455  000692                     l365:
  1456  000692  C028  FFAD         	movff	WriteUSART@data,4013	;volatile
  1457  000696  0012               	return	
  1458  000698                     __end_of_WriteUSART:
  1459                           	opt stack 0
  1460                           pclatu	equ	0xFFB
  1461                           pclath	equ	0xFFA
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           prodh	equ	0xFF4
  1467                           prodl	equ	0xFF3
  1468                           intcon	equ	0xFF2
  1469                           postinc0	equ	0xFEE
  1470                           fsr0h	equ	0xFEA
  1471                           fsr0l	equ	0xFE9
  1472                           wreg	equ	0xFE8
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           bsr	equ	0xFE0
  1476                           indf2	equ	0xFDF
  1477                           fsr2h	equ	0xFDA
  1478                           fsr2l	equ	0xFD9
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _InitApp *****************
  1482 ;; Defined at:
  1483 ;;		line 32 in file "user.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;		None               void
  1490 ;; Registers used:
  1491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;Total ram usage:        3 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    6
  1504 ;; This function calls:
  1505 ;;		_WriteTimer0
  1506 ;;		_CloseADC
  1507 ;;		_OpenADC
  1508 ;;		_setupSPI
  1509 ;;		_initXbee
  1510 ;;		_OpenTimer0
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text10
  1517  000478                     __ptext10:
  1518                           	opt stack 0
  1519  000478                     _InitApp:
  1520                           	opt stack 24
  1521                           
  1522                           ;user.c: 36: ADCON1 = 0b00001010;
  1523                           
  1524                           ;incstack = 0
  1525                           ;incstack = 0
  1526  000478  0E0A               	movlw	10
  1527  00047A  6EC1               	movwf	4033,c	;volatile
  1528                           
  1529                           ;user.c: 37: TRISA = 0b00000001;
  1530  00047C  0E01               	movlw	1
  1531  00047E  6E92               	movwf	3986,c	;volatile
  1532                           
  1533                           ;user.c: 38: TRISB = 0b00000000;
  1534  000480  0E00               	movlw	0
  1535  000482  6E93               	movwf	3987,c	;volatile
  1536                           
  1537                           ;user.c: 39: PORTB = 0x00;
  1538  000484  0E00               	movlw	0
  1539  000486  6E81               	movwf	3969,c	;volatile
  1540                           
  1541                           ;user.c: 40: PORTBbits.RB0 = 1;
  1542  000488  8081               	bsf	3969,0,c	;volatile
  1543                           
  1544                           ;user.c: 43: CloseADC();
  1545  00048A  EC54  F003         	call	_CloseADC	;wreg free
  1546                           
  1547                           ;user.c: 44: OpenADC(0b11011111 & 0b11110011 & 0b11111111,
  1548                           ;user.c: 45: 0b10000111 & 0b01111111 & 0b11111100,
  1549                           ;user.c: 46: 0b11111111);
  1550  00048E  6E30               	movwf	??_InitApp& (0+255),c
  1551  000490  0ED3               	movlw	211
  1552  000492  6E28               	movwf	?_OpenADC,c
  1553  000494  5030               	movf	??_InitApp& (0+255),w,c
  1554  000496  6E31               	movwf	(??_InitApp+1)& (0+255),c
  1555  000498  0E04               	movlw	4
  1556  00049A  6E29               	movwf	?_OpenADC+1,c
  1557  00049C  5031               	movf	(??_InitApp+1)& (0+255),w,c
  1558  00049E  6E32               	movwf	(??_InitApp+2)& (0+255),c
  1559  0004A0  0EFF               	movlw	255
  1560  0004A2  6E2A               	movwf	?_OpenADC+2,c
  1561  0004A4  5032               	movf	(??_InitApp+2)& (0+255),w,c
  1562  0004A6  EC0E  F002         	call	_OpenADC	;wreg free
  1563                           
  1564                           ;user.c: 48: setupSPI();
  1565  0004AA  ECDB  F002         	call	_setupSPI	;wreg free
  1566                           
  1567                           ;user.c: 50: initXbee();
  1568  0004AE  EC99  F001         	call	_initXbee	;wreg free
  1569                           
  1570                           ;user.c: 54: OpenTimer0(0b01111111 & 0b11111111 & 0b11011111 & 0b11110111);
  1571  0004B2  6E30               	movwf	??_InitApp& (0+255),c
  1572  0004B4  0E57               	movlw	87
  1573  0004B6  6E28               	movwf	?_OpenTimer0,c
  1574  0004B8  5030               	movf	??_InitApp& (0+255),w,c
  1575  0004BA  ECFB  F002         	call	_OpenTimer0	;wreg free
  1576                           
  1577                           ;user.c: 55: WriteTimer0(0x0000);
  1578  0004BE  0E00               	movlw	0
  1579  0004C0  6E29               	movwf	?_WriteTimer0+1,c
  1580  0004C2  0E00               	movlw	0
  1581  0004C4  6E28               	movwf	?_WriteTimer0,c
  1582  0004C6  EC3B  F003         	call	_WriteTimer0	;wreg free
  1583                           
  1584                           ;user.c: 59: RCONbits.IPEN = 1;
  1585  0004CA  8ED0               	bsf	4048,7,c	;volatile
  1586                           
  1587                           ;user.c: 61: (INTCONbits.GIE = 1);
  1588  0004CC  8EF2               	bsf	intcon,7,c	;volatile
  1589  0004CE  0012               	return	
  1590  0004D0                     __end_of_InitApp:
  1591                           	opt stack 0
  1592                           pclatu	equ	0xFFB
  1593                           pclath	equ	0xFFA
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           prodh	equ	0xFF4
  1599                           prodl	equ	0xFF3
  1600                           intcon	equ	0xFF2
  1601                           postinc0	equ	0xFEE
  1602                           fsr0h	equ	0xFEA
  1603                           fsr0l	equ	0xFE9
  1604                           wreg	equ	0xFE8
  1605                           fsr1h	equ	0xFE2
  1606                           fsr1l	equ	0xFE1
  1607                           bsr	equ	0xFE0
  1608                           indf2	equ	0xFDF
  1609                           fsr2h	equ	0xFDA
  1610                           fsr2l	equ	0xFD9
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _OpenTimer0 *****************
  1614 ;; Defined at:
  1615 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  config          1   39[COMRAM] unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;Total ram usage:        1 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    4
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_InitApp
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text11
  1644  0005F6                     __ptext11:
  1645                           	opt stack 0
  1646  0005F6                     _OpenTimer0:
  1647                           	opt stack 25
  1648                           
  1649                           ;incstack = 0
  1650                           ;incstack = 0
  1651  0005F6  5028               	movf	OpenTimer0@config,w,c
  1652  0005F8  0B7F               	andlw	127
  1653  0005FA  6ED5               	movwf	4053,c	;volatile
  1654  0005FC  0E00               	movlw	0
  1655  0005FE  6ED7               	movwf	4055,c	;volatile
  1656  000600  0E00               	movlw	0
  1657  000602  6ED6               	movwf	4054,c	;volatile
  1658  000604  94F2               	bcf	intcon,2,c	;volatile
  1659  000606  AE28               	btfss	OpenTimer0@config,7,c
  1660  000608  D002               	goto	l288
  1661  00060A  8AF2               	bsf	intcon,5,c	;volatile
  1662  00060C  D001               	goto	l289
  1663  00060E                     l288:
  1664  00060E  9AF2               	bcf	intcon,5,c	;volatile
  1665  000610                     l289:
  1666  000610  8ED5               	bsf	4053,7,c	;volatile
  1667  000612  0012               	return	
  1668  000614                     __end_of_OpenTimer0:
  1669                           	opt stack 0
  1670                           pclatu	equ	0xFFB
  1671                           pclath	equ	0xFFA
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           intcon	equ	0xFF2
  1679                           postinc0	equ	0xFEE
  1680                           fsr0h	equ	0xFEA
  1681                           fsr0l	equ	0xFE9
  1682                           wreg	equ	0xFE8
  1683                           fsr1h	equ	0xFE2
  1684                           fsr1l	equ	0xFE1
  1685                           bsr	equ	0xFE0
  1686                           indf2	equ	0xFDF
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _initXbee *****************
  1692 ;; Defined at:
  1693 ;;		line 24 in file "xbee.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  i               2   45[COMRAM] int 
  1698 ;;  i               2   43[COMRAM] int 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;		None               void
  1701 ;; Registers used:
  1702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;Total ram usage:        5 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    5
  1715 ;; This function calls:
  1716 ;;		_OpenUSART
  1717 ;; This function is called by:
  1718 ;;		_InitApp
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text12
  1723  000332                     __ptext12:
  1724                           	opt stack 0
  1725  000332                     _initXbee:
  1726                           	opt stack 24
  1727                           
  1728                           ;xbee.c: 25: IPR1bits.RCIP = 1;
  1729                           
  1730                           ;incstack = 0
  1731                           ;incstack = 0
  1732  000332  8A9F               	bsf	3999,5,c	;volatile
  1733                           
  1734                           ;xbee.c: 26: for(int i=0; i<6; i++)
  1735  000334  0E00               	movlw	0
  1736  000336  6E2D               	movwf	initXbee@i+1,c
  1737  000338  0E00               	movlw	0
  1738  00033A  6E2C               	movwf	initXbee@i,c
  1739  00033C  502D               	movf	initXbee@i+1,w,c
  1740  00033E  0A80               	xorlw	128
  1741  000340  0F80               	addlw	-128
  1742  000342  0E06               	movlw	6
  1743  000344  B4D8               	btfsc	status,2,c
  1744  000346  5C2C               	subwf	initXbee@i,w,c
  1745  000348  B0D8               	btfsc	status,0,c
  1746  00034A  D00B               	goto	l1161
  1747                           
  1748                           ;xbee.c: 27: recvBuff[i] = 0;
  1749  00034C  0E64               	movlw	low _recvBuff
  1750  00034E  242C               	addwf	initXbee@i,w,c
  1751  000350  6ED9               	movwf	fsr2l,c
  1752  000352  0E00               	movlw	high _recvBuff
  1753  000354  202D               	addwfc	initXbee@i+1,w,c
  1754  000356  6EDA               	movwf	fsr2h,c
  1755  000358  0E00               	movlw	0
  1756  00035A  6EDF               	movwf	indf2,c
  1757  00035C  4A2C               	infsnz	initXbee@i,f,c
  1758  00035E  2A2D               	incf	initXbee@i+1,f,c
  1759  000360  D7ED               	goto	L3
  1760  000362                     l1161:
  1761                           
  1762                           ;xbee.c: 28: for(int i=0; i<41; i++)
  1763  000362  0E00               	movlw	0
  1764  000364  6E2F               	movwf	initXbee@i_743+1,c
  1765  000366  0E00               	movlw	0
  1766  000368  6E2E               	movwf	initXbee@i_743,c
  1767  00036A  502F               	movf	initXbee@i_743+1,w,c
  1768  00036C  0A80               	xorlw	128
  1769  00036E  0F80               	addlw	-128
  1770  000370  0E29               	movlw	41
  1771  000372  B4D8               	btfsc	status,2,c
  1772  000374  5C2E               	subwf	initXbee@i_743,w,c
  1773  000376  B0D8               	btfsc	status,0,c
  1774  000378  D00B               	goto	l1173
  1775                           
  1776                           ;xbee.c: 29: sendBuff[i] = 0;
  1777  00037A  0E37               	movlw	low _sendBuff
  1778  00037C  242E               	addwf	initXbee@i_743,w,c
  1779  00037E  6ED9               	movwf	fsr2l,c
  1780  000380  0E00               	movlw	high _sendBuff
  1781  000382  202F               	addwfc	initXbee@i_743+1,w,c
  1782  000384  6EDA               	movwf	fsr2h,c
  1783  000386  0E00               	movlw	0
  1784  000388  6EDF               	movwf	indf2,c
  1785  00038A  4A2E               	infsnz	initXbee@i_743,f,c
  1786  00038C  2A2F               	incf	initXbee@i_743+1,f,c
  1787  00038E  D7ED               	goto	L4
  1788  000390                     l1173:
  1789                           
  1790                           ;xbee.c: 31: sendBuff[0] = 0x4E;
  1791  000390  6E2B               	movwf	??_initXbee& (0+255),c
  1792  000392  0E4E               	movlw	78
  1793  000394  6E37               	movwf	_sendBuff,c
  1794  000396  502B               	movf	??_initXbee& (0+255),w,c
  1795                           
  1796                           ;xbee.c: 32: sendBuff[1] = 0x4E;
  1797  000398  6E2B               	movwf	??_initXbee& (0+255),c
  1798  00039A  0E4E               	movlw	78
  1799  00039C  6E38               	movwf	_sendBuff+1,c
  1800  00039E  502B               	movf	??_initXbee& (0+255),w,c
  1801                           
  1802                           ;xbee.c: 33: sendBuff[2] = 0x4E;
  1803  0003A0  6E2B               	movwf	??_initXbee& (0+255),c
  1804  0003A2  0E4E               	movlw	78
  1805  0003A4  6E39               	movwf	_sendBuff+2,c
  1806  0003A6  502B               	movf	??_initXbee& (0+255),w,c
  1807                           
  1808                           ;xbee.c: 35: OpenUSART(0b01111111 & 0b11111111 & 0b11111110
  1809                           ;xbee.c: 36: & 0b11111101 & 0b11111111 & 0b11111111
  1810                           ;xbee.c: 37: & 0b11011111, 32);
  1811  0003A8  6E2B               	movwf	??_initXbee& (0+255),c
  1812  0003AA  0E5C               	movlw	92
  1813  0003AC  6E28               	movwf	?_OpenUSART,c
  1814  0003AE  502B               	movf	??_initXbee& (0+255),w,c
  1815  0003B0  0E00               	movlw	0
  1816  0003B2  6E2A               	movwf	?_OpenUSART+2,c
  1817  0003B4  0E20               	movlw	32
  1818  0003B6  6E29               	movwf	?_OpenUSART+1,c
  1819  0003B8  ECE0  F001         	call	_OpenUSART	;wreg free
  1820                           
  1821                           ;xbee.c: 38: IPR1bits.RC1IP = 1;
  1822  0003BC  8A9F               	bsf	3999,5,c	;volatile
  1823  0003BE  0012               	return	
  1824  0003C0                     __end_of_initXbee:
  1825                           	opt stack 0
  1826                           pclatu	equ	0xFFB
  1827                           pclath	equ	0xFFA
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           intcon	equ	0xFF2
  1835                           postinc0	equ	0xFEE
  1836                           fsr0h	equ	0xFEA
  1837                           fsr0l	equ	0xFE9
  1838                           wreg	equ	0xFE8
  1839                           fsr1h	equ	0xFE2
  1840                           fsr1l	equ	0xFE1
  1841                           bsr	equ	0xFE0
  1842                           indf2	equ	0xFDF
  1843                           fsr2h	equ	0xFDA
  1844                           fsr2l	equ	0xFD9
  1845                           status	equ	0xFD8
  1846                           
  1847 ;; *************** function _OpenUSART *****************
  1848 ;; Defined at:
  1849 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  config          1   39[COMRAM] unsigned char 
  1852 ;;  spbrg           2   40[COMRAM] unsigned int 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;		None               void
  1857 ;; Registers used:
  1858 ;;		wreg, status,2
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        3 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    4
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_initXbee
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text13
  1879  0003C0                     __ptext13:
  1880                           	opt stack 0
  1881  0003C0                     _OpenUSART:
  1882                           	opt stack 24
  1883                           
  1884                           ;incstack = 0
  1885                           ;incstack = 0
  1886  0003C0  0E00               	movlw	0
  1887  0003C2  6EAC               	movwf	4012,c	;volatile
  1888  0003C4  0E00               	movlw	0
  1889  0003C6  6EAB               	movwf	4011,c	;volatile
  1890  0003C8  B028               	btfsc	OpenUSART@config,0,c
  1891  0003CA  88AC               	bsf	4012,4,c	;volatile
  1892  0003CC  A228               	btfss	OpenUSART@config,1,c
  1893  0003CE  D002               	goto	l332
  1894  0003D0  8CAC               	bsf	4012,6,c	;volatile
  1895  0003D2  8CAB               	bsf	4011,6,c	;volatile
  1896  0003D4                     l332:
  1897  0003D4  B428               	btfsc	OpenUSART@config,2,c
  1898  0003D6  8EAC               	bsf	4012,7,c	;volatile
  1899  0003D8  A628               	btfss	OpenUSART@config,3,c
  1900  0003DA  D002               	goto	l334
  1901  0003DC  88AB               	bsf	4011,4,c	;volatile
  1902  0003DE  D001               	goto	l335
  1903  0003E0                     l334:
  1904  0003E0  8AAB               	bsf	4011,5,c	;volatile
  1905  0003E2                     l335:
  1906  0003E2  B828               	btfsc	OpenUSART@config,4,c
  1907  0003E4  84AC               	bsf	4012,2,c	;volatile
  1908  0003E6  989E               	bcf	3998,4,c	;volatile
  1909  0003E8  BA28               	btfsc	OpenUSART@config,5,c
  1910  0003EA  86AB               	bsf	4011,3,c	;volatile
  1911  0003EC  AC28               	btfss	OpenUSART@config,6,c
  1912  0003EE  D002               	goto	l338
  1913  0003F0  8A9D               	bsf	3997,5,c	;volatile
  1914  0003F2  D001               	goto	l339
  1915  0003F4                     l338:
  1916  0003F4  9A9D               	bcf	3997,5,c	;volatile
  1917  0003F6                     l339:
  1918  0003F6  9A9E               	bcf	3998,5,c	;volatile
  1919  0003F8  AE28               	btfss	OpenUSART@config,7,c
  1920  0003FA  D002               	goto	l340
  1921  0003FC  889D               	bsf	3997,4,c	;volatile
  1922  0003FE  D001               	goto	l341
  1923  000400                     l340:
  1924  000400  989D               	bcf	3997,4,c	;volatile
  1925  000402                     l341:
  1926  000402  C029  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1927  000406  502A               	movf	OpenUSART@spbrg+1,w,c
  1928  000408  6EB0               	movwf	4016,c	;volatile
  1929  00040A  8AAC               	bsf	4012,5,c	;volatile
  1930  00040C  8EAB               	bsf	4011,7,c	;volatile
  1931  00040E  9C94               	bcf	3988,6,c	;volatile
  1932  000410  8E94               	bsf	3988,7,c	;volatile
  1933  000412  B8AC               	btfsc	4012,4,c	;volatile
  1934  000414  BEAC               	btfsc	4012,7,c	;volatile
  1935  000416  D001               	goto	l343
  1936  000418  8C94               	bsf	3988,6,c	;volatile
  1937  00041A                     l343:
  1938  00041A  0012               	return	
  1939  00041C                     __end_of_OpenUSART:
  1940                           	opt stack 0
  1941                           pclatu	equ	0xFFB
  1942                           pclath	equ	0xFFA
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           intcon	equ	0xFF2
  1950                           postinc0	equ	0xFEE
  1951                           fsr0h	equ	0xFEA
  1952                           fsr0l	equ	0xFE9
  1953                           wreg	equ	0xFE8
  1954                           fsr1h	equ	0xFE2
  1955                           fsr1l	equ	0xFE1
  1956                           bsr	equ	0xFE0
  1957                           indf2	equ	0xFDF
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function _setupSPI *****************
  1963 ;; Defined at:
  1964 ;;		line 27 in file "spi_comm.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;		None               void
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        3 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    5
  1985 ;; This function calls:
  1986 ;;		_OpenSPI
  1987 ;; This function is called by:
  1988 ;;		_InitApp
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text14
  1993  0005B6                     __ptext14:
  1994                           	opt stack 0
  1995  0005B6                     _setupSPI:
  1996                           	opt stack 24
  1997                           
  1998                           ;spi_comm.c: 28: (PORTBbits.RB0 = 1);
  1999                           
  2000                           ;incstack = 0
  2001                           ;incstack = 0
  2002  0005B6  8081               	bsf	3969,0,c	;volatile
  2003                           
  2004                           ;spi_comm.c: 29: (SSPCON1 &=0xDF);
  2005  0005B8  9AC6               	bcf	4038,5,c	;volatile
  2006                           
  2007                           ;spi_comm.c: 30: OpenSPI(0b00000000 & 0b00000101, 0b00000001, 0b00000000);
  2008  0005BA  6E2B               	movwf	??_setupSPI& (0+255),c
  2009  0005BC  0E00               	movlw	0
  2010  0005BE  6E28               	movwf	?_OpenSPI,c
  2011  0005C0  502B               	movf	??_setupSPI& (0+255),w,c
  2012  0005C2  6E2C               	movwf	(??_setupSPI+1)& (0+255),c
  2013  0005C4  0E01               	movlw	1
  2014  0005C6  6E29               	movwf	?_OpenSPI+1,c
  2015  0005C8  502C               	movf	(??_setupSPI+1)& (0+255),w,c
  2016  0005CA  6E2D               	movwf	(??_setupSPI+2)& (0+255),c
  2017  0005CC  0E00               	movlw	0
  2018  0005CE  6E2A               	movwf	?_OpenSPI+2,c
  2019  0005D0  502D               	movf	(??_setupSPI+2)& (0+255),w,c
  2020  0005D2  EC68  F002         	call	_OpenSPI	;wreg free
  2021  0005D6  0012               	return	
  2022  0005D8                     __end_of_setupSPI:
  2023                           	opt stack 0
  2024                           pclatu	equ	0xFFB
  2025                           pclath	equ	0xFFA
  2026                           tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           prodh	equ	0xFF4
  2031                           prodl	equ	0xFF3
  2032                           intcon	equ	0xFF2
  2033                           postinc0	equ	0xFEE
  2034                           fsr0h	equ	0xFEA
  2035                           fsr0l	equ	0xFE9
  2036                           wreg	equ	0xFE8
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           bsr	equ	0xFE0
  2040                           indf2	equ	0xFDF
  2041                           fsr2h	equ	0xFDA
  2042                           fsr2l	equ	0xFD9
  2043                           status	equ	0xFD8
  2044                           
  2045 ;; *************** function _OpenSPI *****************
  2046 ;; Defined at:
  2047 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\SPI\spi_open.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  sync_mode       1   39[COMRAM] unsigned char 
  2050 ;;  bus_mode        1   40[COMRAM] unsigned char 
  2051 ;;  smp_phase       1   41[COMRAM] unsigned char 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;		None               void
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;Total ram usage:        3 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_setupSPI
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text15
  2078  0004D0                     __ptext15:
  2079                           	opt stack 0
  2080  0004D0                     _OpenSPI:
  2081                           	opt stack 24
  2082                           
  2083                           ;incstack = 0
  2084                           ;incstack = 0
  2085  0004D0  0E3F               	movlw	63
  2086  0004D2  16C7               	andwf	4039,f,c	;volatile
  2087  0004D4  0E00               	movlw	0
  2088  0004D6  6EC6               	movwf	4038,c	;volatile
  2089  0004D8  5028               	movf	OpenSPI@sync_mode,w,c
  2090  0004DA  12C6               	iorwf	4038,f,c	;volatile
  2091  0004DC  502A               	movf	OpenSPI@smp_phase,w,c
  2092  0004DE  12C7               	iorwf	4039,f,c	;volatile
  2093  0004E0  D005               	goto	l1201
  2094  0004E2                     l239:
  2095  0004E2  8CC7               	bsf	4039,6,c	;volatile
  2096  0004E4  D015               	goto	l1205
  2097  0004E6                     l241:
  2098  0004E6  8CC7               	bsf	4039,6,c	;volatile
  2099  0004E8                     l242:
  2100  0004E8  88C6               	bsf	4038,4,c	;volatile
  2101  0004EA  D012               	goto	l1205
  2102  0004EC                     l1201:
  2103  0004EC  5029               	movf	OpenSPI@bus_mode,w,c
  2104                           
  2105                           ; Switch size 1, requested type "space"
  2106                           ; Number of cases is 3, Range of values is 0 to 3
  2107                           ; switch strategies available:
  2108                           ; Name         Instructions Cycles
  2109                           ; simple_byte           10     6 (average)
  2110                           ;	Chosen strategy is simple_byte
  2111  0004EE  0A00               	xorlw	0	; case 0
  2112  0004F0  B4D8               	btfsc	status,2,c
  2113  0004F2  D7F7               	goto	l239
  2114  0004F4  0A02               	xorlw	2	; case 2
  2115  0004F6  B4D8               	btfsc	status,2,c
  2116  0004F8  D7F6               	goto	l241
  2117  0004FA  0A01               	xorlw	1	; case 3
  2118  0004FC  B4D8               	btfsc	status,2,c
  2119  0004FE  D7F4               	goto	l242
  2120  000500  D007               	goto	l1205
  2121  000502                     l245:
  2122  000502  8694               	bsf	3988,3,c	;volatile
  2123  000504  8A92               	bsf	3986,5,c	;volatile
  2124  000506  D00C               	goto	l246
  2125  000508                     l247:
  2126  000508  8694               	bsf	3988,3,c	;volatile
  2127  00050A  D00A               	goto	l246
  2128  00050C                     l248:
  2129  00050C  9694               	bcf	3988,3,c	;volatile
  2130  00050E  D008               	goto	l246
  2131  000510                     l1205:
  2132  000510  5028               	movf	OpenSPI@sync_mode,w,c
  2133                           
  2134                           ; Switch size 1, requested type "space"
  2135                           ; Number of cases is 2, Range of values is 4 to 5
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            7     4 (average)
  2139                           ;	Chosen strategy is simple_byte
  2140  000512  0A04               	xorlw	4	; case 4
  2141  000514  B4D8               	btfsc	status,2,c
  2142  000516  D7F5               	goto	l245
  2143  000518  0A01               	xorlw	1	; case 5
  2144  00051A  B4D8               	btfsc	status,2,c
  2145  00051C  D7F5               	goto	l247
  2146  00051E  D7F6               	goto	l248
  2147  000520                     l246:
  2148  000520  8894               	bsf	3988,4,c	;volatile
  2149  000522  9A94               	bcf	3988,5,c	;volatile
  2150  000524  8AC6               	bsf	4038,5,c	;volatile
  2151  000526  0012               	return	
  2152  000528                     __end_of_OpenSPI:
  2153                           	opt stack 0
  2154                           pclatu	equ	0xFFB
  2155                           pclath	equ	0xFFA
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           prodh	equ	0xFF4
  2161                           prodl	equ	0xFF3
  2162                           intcon	equ	0xFF2
  2163                           postinc0	equ	0xFEE
  2164                           fsr0h	equ	0xFEA
  2165                           fsr0l	equ	0xFE9
  2166                           wreg	equ	0xFE8
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           bsr	equ	0xFE0
  2170                           indf2	equ	0xFDF
  2171                           fsr2h	equ	0xFDA
  2172                           fsr2l	equ	0xFD9
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function _OpenADC *****************
  2176 ;; Defined at:
  2177 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  config          1   39[COMRAM] unsigned char 
  2180 ;;  config2         1   40[COMRAM] unsigned char 
  2181 ;;  portconfig      1   41[COMRAM] unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;		None               void
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        5 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    4
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_InitApp
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text16
  2208  00041C                     __ptext16:
  2209                           	opt stack 0
  2210  00041C                     _OpenADC:
  2211                           	opt stack 25
  2212                           
  2213                           ;incstack = 0
  2214                           ;incstack = 0
  2215  00041C  0E00               	movlw	0
  2216  00041E  6EC2               	movwf	4034,c	;volatile
  2217  000420  0E00               	movlw	0
  2218  000422  6EC0               	movwf	4032,c	;volatile
  2219  000424  90D8               	bcf	status,0,c
  2220  000426  3029               	rrcf	OpenADC@config2,w,c
  2221  000428  0B3C               	andlw	60
  2222  00042A  6EC2               	movwf	4034,c	;volatile
  2223  00042C  C029  F02B         	movff	OpenADC@config2,??_OpenADC
  2224  000430  3A2B               	swapf	??_OpenADC,f,c
  2225  000432  0EF0               	movlw	240
  2226  000434  162B               	andwf	??_OpenADC,f,c
  2227  000436  0E30               	movlw	48
  2228  000438  162B               	andwf	??_OpenADC,f,c
  2229  00043A  502A               	movf	OpenADC@portconfig,w,c
  2230  00043C  0B0F               	andlw	15
  2231  00043E  102B               	iorwf	??_OpenADC,w,c
  2232  000440  6EC1               	movwf	4033,c	;volatile
  2233  000442  C028  F02B         	movff	OpenADC@config,??_OpenADC
  2234  000446  90D8               	bcf	status,0,c
  2235  000448  362B               	rlcf	??_OpenADC,f,c
  2236  00044A  90D8               	bcf	status,0,c
  2237  00044C  362B               	rlcf	??_OpenADC,f,c
  2238  00044E  0E38               	movlw	56
  2239  000450  162B               	andwf	??_OpenADC,f,c
  2240  000452  C028  F02C         	movff	OpenADC@config,??_OpenADC+1
  2241  000456  3A2C               	swapf	??_OpenADC+1,f,c
  2242  000458  0E0F               	movlw	15
  2243  00045A  162C               	andwf	??_OpenADC+1,f,c
  2244  00045C  0E07               	movlw	7
  2245  00045E  162C               	andwf	??_OpenADC+1,f,c
  2246  000460  5028               	movf	OpenADC@config,w,c
  2247  000462  0B80               	andlw	128
  2248  000464  102C               	iorwf	??_OpenADC+1,w,c
  2249  000466  102B               	iorwf	??_OpenADC,w,c
  2250  000468  6EC0               	movwf	4032,c	;volatile
  2251  00046A  AE29               	btfss	OpenADC@config2,7,c
  2252  00046C  D003               	goto	l215
  2253  00046E  9C9E               	bcf	3998,6,c	;volatile
  2254  000470  8C9D               	bsf	3997,6,c	;volatile
  2255  000472  8CF2               	bsf	intcon,6,c	;volatile
  2256  000474                     l215:
  2257  000474  80C2               	bsf	4034,0,c	;volatile
  2258  000476  0012               	return	
  2259  000478                     __end_of_OpenADC:
  2260                           	opt stack 0
  2261                           pclatu	equ	0xFFB
  2262                           pclath	equ	0xFFA
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           prodh	equ	0xFF4
  2268                           prodl	equ	0xFF3
  2269                           intcon	equ	0xFF2
  2270                           postinc0	equ	0xFEE
  2271                           fsr0h	equ	0xFEA
  2272                           fsr0l	equ	0xFE9
  2273                           wreg	equ	0xFE8
  2274                           fsr1h	equ	0xFE2
  2275                           fsr1l	equ	0xFE1
  2276                           bsr	equ	0xFE0
  2277                           indf2	equ	0xFDF
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _CloseADC *****************
  2283 ;; Defined at:
  2284 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcclose.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		None
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;Total ram usage:        0 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_InitApp
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text17
  2313  0006A8                     __ptext17:
  2314                           	opt stack 0
  2315  0006A8                     _CloseADC:
  2316                           	opt stack 25
  2317                           
  2318                           ;incstack = 0
  2319                           ;incstack = 0
  2320  0006A8  90C2               	bcf	4034,0,c	;volatile
  2321  0006AA  9C9D               	bcf	3997,6,c	;volatile
  2322  0006AC  0012               	return	
  2323  0006AE                     __end_of_CloseADC:
  2324                           	opt stack 0
  2325                           pclatu	equ	0xFFB
  2326                           pclath	equ	0xFFA
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           fsr0h	equ	0xFEA
  2336                           fsr0l	equ	0xFE9
  2337                           wreg	equ	0xFE8
  2338                           fsr1h	equ	0xFE2
  2339                           fsr1l	equ	0xFE1
  2340                           bsr	equ	0xFE0
  2341                           indf2	equ	0xFDF
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _WriteTimer0 *****************
  2347 ;; Defined at:
  2348 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  timer0          2   39[COMRAM] unsigned int 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  timer           2   41[COMRAM] struct Timers
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		None
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:        4 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    4
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;;		_InitApp
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text18
  2378  000676                     __ptext18:
  2379                           	opt stack 0
  2380  000676                     _WriteTimer0:
  2381                           	opt stack 26
  2382                           
  2383                           ;incstack = 0
  2384                           ;incstack = 0
  2385  000676  C028  F02A         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2386  00067A  C029  F02B         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2387  00067E  C02B  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2388  000682  C02A  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2389  000686  0012               	return	
  2390  000688                     __end_of_WriteTimer0:
  2391                           	opt stack 0
  2392                           pclatu	equ	0xFFB
  2393                           pclath	equ	0xFFA
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           intcon	equ	0xFF2
  2401                           postinc0	equ	0xFEE
  2402                           fsr0h	equ	0xFEA
  2403                           fsr0l	equ	0xFE9
  2404                           wreg	equ	0xFE8
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           bsr	equ	0xFE0
  2408                           indf2	equ	0xFDF
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _ConfigureOscillator *****************
  2414 ;; Defined at:
  2415 ;;		line 25 in file "system.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		None
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    4
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text19
  2444  0006B2                     __ptext19:
  2445                           	opt stack 0
  2446  0006B2                     _ConfigureOscillator:
  2447                           	opt stack 26
  2448                           
  2449                           ;incstack = 0
  2450                           ;incstack = 0
  2451  0006B2  0012               	return	
  2452  0006B4                     __end_of_ConfigureOscillator:
  2453                           	opt stack 0
  2454                           pclatu	equ	0xFFB
  2455                           pclath	equ	0xFFA
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           intcon	equ	0xFF2
  2463                           postinc0	equ	0xFEE
  2464                           fsr0h	equ	0xFEA
  2465                           fsr0l	equ	0xFE9
  2466                           wreg	equ	0xFE8
  2467                           fsr1h	equ	0xFE2
  2468                           fsr1l	equ	0xFE1
  2469                           bsr	equ	0xFE0
  2470                           indf2	equ	0xFDF
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function _high_isr *****************
  2476 ;; Defined at:
  2477 ;;		line 38 in file "interrupts.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;		None               void
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:       15 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    2
  2498 ;; This function calls:
  2499 ;;		_getsUSART
  2500 ;; This function is called by:
  2501 ;;		Interrupt level 2
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	intcode
  2506  000008                     __pintcode:
  2507                           	opt stack 0
  2508  000008                     _high_isr:
  2509                           	opt stack 24
  2510                           
  2511                           ;incstack = 0
  2512  000008  CFFA F01A          	movff	pclath,??_high_isr+1
  2513  00000C  CFFB F01B          	movff	pclatu,??_high_isr+2
  2514  000010  ED3D  F001         	call	int_func,f	;refresh shadow registers
  2515                           pclatu	equ	0xFFB
  2516                           pclath	equ	0xFFA
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           prodh	equ	0xFF4
  2522                           prodl	equ	0xFF3
  2523                           intcon	equ	0xFF2
  2524                           postinc0	equ	0xFEE
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           bsr	equ	0xFE0
  2531                           indf2	equ	0xFDF
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536                           	psect	intcode_body
  2537  00027A                     __pintcode_body:
  2538                           	opt stack 24
  2539  00027A                     int_func:
  2540                           	opt stack 24
  2541  00027A  0006               	pop		; remove dummy address from shadow register refresh
  2542  00027C  CFE9 F01C          	movff	fsr0l,??_high_isr+3
  2543  000280  CFEA F01D          	movff	fsr0h,??_high_isr+4
  2544  000284  CFE1 F01E          	movff	fsr1l,??_high_isr+5
  2545  000288  CFE2 F01F          	movff	fsr1h,??_high_isr+6
  2546  00028C  CFD9 F020          	movff	fsr2l,??_high_isr+7
  2547  000290  CFDA F021          	movff	fsr2h,??_high_isr+8
  2548  000294  CFF3 F022          	movff	prodl,??_high_isr+9
  2549  000298  CFF4 F023          	movff	prodh,??_high_isr+10
  2550  00029C  CFF6 F024          	movff	tblptrl,??_high_isr+11
  2551  0002A0  CFF7 F025          	movff	tblptrh,??_high_isr+12
  2552  0002A4  CFF8 F026          	movff	tblptru,??_high_isr+13
  2553  0002A8  CFF5 F027          	movff	tablat,??_high_isr+14
  2554  0002AC                     
  2555                           ;interrupts.c: 50: if((PIR1bits.RCIF))
  2556  0002AC  AA9E               	btfss	3998,5,c	;volatile
  2557  0002AE  D001               	goto	i2u1_41
  2558  0002B0  D001               	goto	i2u1_40
  2559  0002B2                     i2u1_41:
  2560  0002B2  D022               	goto	i2l19
  2561  0002B4                     i2u1_40:
  2562  0002B4                     
  2563                           ;interrupts.c: 51: {
  2564                           ;interrupts.c: 52: getsUSART((char *) recvBuff, 6);
  2565  0002B4  0E00               	movlw	high _recvBuff
  2566  0002B6  6E14               	movwf	?_getsUSART+1,c
  2567  0002B8  0E64               	movlw	low _recvBuff
  2568  0002BA  6E13               	movwf	?_getsUSART,c
  2569  0002BC  6E19               	movwf	??_high_isr& (0+255),c
  2570  0002BE  0E06               	movlw	6
  2571  0002C0  6E15               	movwf	?_getsUSART+2,c
  2572  0002C2  5019               	movf	??_high_isr& (0+255),w,c
  2573  0002C4  ECB0  F002         	call	_getsUSART	;wreg free
  2574  0002C8                     
  2575                           ;interrupts.c: 53: if(recvBuff[0] == 0x4E && recvBuff[1] == 0x4E && recvBuff[2] == 0x4E)
  2576  0002C8  5064               	movf	_recvBuff,w,c
  2577  0002CA  0A4E               	xorlw	78
  2578  0002CC  A4D8               	btfss	status,2,c
  2579  0002CE  D001               	goto	i2u2_41
  2580  0002D0  D001               	goto	i2u2_40
  2581  0002D2                     i2u2_41:
  2582  0002D2  D012               	goto	i2l19
  2583  0002D4                     i2u2_40:
  2584  0002D4  5065               	movf	_recvBuff+1,w,c
  2585  0002D6  0A4E               	xorlw	78
  2586  0002D8  A4D8               	btfss	status,2,c
  2587  0002DA  D001               	goto	i2u3_41
  2588  0002DC  D001               	goto	i2u3_40
  2589  0002DE                     i2u3_41:
  2590  0002DE  D00C               	goto	i2l19
  2591  0002E0                     i2u3_40:
  2592  0002E0  5066               	movf	_recvBuff+2,w,c
  2593  0002E2  0A4E               	xorlw	78
  2594  0002E4  A4D8               	btfss	status,2,c
  2595  0002E6  D001               	goto	i2u4_41
  2596  0002E8  D001               	goto	i2u4_40
  2597  0002EA                     i2u4_41:
  2598  0002EA  D006               	goto	i2l19
  2599  0002EC                     i2u4_40:
  2600  0002EC                     
  2601                           ;interrupts.c: 54: {
  2602                           ;interrupts.c: 55: pollRecv = 1;
  2603  0002EC  6E19               	movwf	??_high_isr& (0+255),c
  2604  0002EE  0E01               	movlw	1
  2605  0002F0  6E61               	movwf	_pollRecv,c
  2606  0002F2  5019               	movf	??_high_isr& (0+255),w,c
  2607  0002F4  D001               	goto	i2l19
  2608  0002F6  D000               	goto	i2l19
  2609  0002F8                     i2l19:
  2610  0002F8  C027  FFF5         	movff	??_high_isr+14,tablat
  2611  0002FC  C026  FFF8         	movff	??_high_isr+13,tblptru
  2612  000300  C025  FFF7         	movff	??_high_isr+12,tblptrh
  2613  000304  C024  FFF6         	movff	??_high_isr+11,tblptrl
  2614  000308  C023  FFF4         	movff	??_high_isr+10,prodh
  2615  00030C  C022  FFF3         	movff	??_high_isr+9,prodl
  2616  000310  C021  FFDA         	movff	??_high_isr+8,fsr2h
  2617  000314  C020  FFD9         	movff	??_high_isr+7,fsr2l
  2618  000318  C01F  FFE2         	movff	??_high_isr+6,fsr1h
  2619  00031C  C01E  FFE1         	movff	??_high_isr+5,fsr1l
  2620  000320  C01D  FFEA         	movff	??_high_isr+4,fsr0h
  2621  000324  C01C  FFE9         	movff	??_high_isr+3,fsr0l
  2622  000328  C01B  FFFB         	movff	??_high_isr+2,pclatu
  2623  00032C  C01A  FFFA         	movff	??_high_isr+1,pclath
  2624  000330  0011               	retfie		f
  2625  000332                     __end_of_high_isr:
  2626                           	opt stack 0
  2627                           pclatu	equ	0xFFB
  2628                           pclath	equ	0xFFA
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           intcon	equ	0xFF2
  2636                           postinc0	equ	0xFEE
  2637                           fsr0h	equ	0xFEA
  2638                           fsr0l	equ	0xFE9
  2639                           wreg	equ	0xFE8
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           bsr	equ	0xFE0
  2643                           indf2	equ	0xFDF
  2644                           fsr2h	equ	0xFDA
  2645                           fsr2l	equ	0xFD9
  2646                           status	equ	0xFD8
  2647                           
  2648 ;; *************** function _getsUSART *****************
  2649 ;; Defined at:
  2650 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\ugets.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  buffer          2   18[COMRAM] PTR unsigned char 
  2653 ;;		 -> recvBuff(6), 
  2654 ;;  len             1   20[COMRAM] unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  i               1   23[COMRAM] unsigned char 
  2657 ;;  data            1   22[COMRAM] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2667 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;Total ram usage:        6 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		_ReadUSART
  2676 ;; This function is called by:
  2677 ;;		_high_isr
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text22
  2682  000560                     __ptext22:
  2683                           	opt stack 0
  2684  000560                     _getsUSART:
  2685                           	opt stack 24
  2686                           
  2687                           ;incstack = 0
  2688                           ;incstack = 0
  2689  000560  6E16               	movwf	??_getsUSART& (0+255),c
  2690  000562  0E00               	movlw	0
  2691  000564  6E18               	movwf	getsUSART@i,c
  2692  000566  5016               	movf	??_getsUSART& (0+255),w,c
  2693  000568  D00E               	goto	i2l975
  2694  00056A                     i2l306:
  2695  00056A  AA9E               	btfss	3998,5,c	;volatile
  2696  00056C  D7FE               	goto	i2l306
  2697  00056E  EC0A  F003         	call	_ReadUSART	;wreg free
  2698  000572  6E17               	movwf	getsUSART@data,c
  2699  000574  C013  FFD9         	movff	getsUSART@buffer,fsr2l
  2700  000578  C014  FFDA         	movff	getsUSART@buffer+1,fsr2h
  2701  00057C  C017  FFDF         	movff	getsUSART@data,indf2
  2702  000580  4A13               	infsnz	getsUSART@buffer,f,c
  2703  000582  2A14               	incf	getsUSART@buffer+1,f,c
  2704  000584  2A18               	incf	getsUSART@i,f,c
  2705  000586                     i2l975:
  2706  000586  5015               	movf	getsUSART@len,w,c
  2707  000588  5C18               	subwf	getsUSART@i,w,c
  2708  00058A  B0D8               	btfsc	status,0,c
  2709  00058C  0012               	return	
  2710  00058E  D7ED               	goto	i2l306
  2711  000590                     __end_of_getsUSART:
  2712                           	opt stack 0
  2713                           pclatu	equ	0xFFB
  2714                           pclath	equ	0xFFA
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           prodh	equ	0xFF4
  2720                           prodl	equ	0xFF3
  2721                           intcon	equ	0xFF2
  2722                           postinc0	equ	0xFEE
  2723                           fsr0h	equ	0xFEA
  2724                           fsr0l	equ	0xFE9
  2725                           wreg	equ	0xFE8
  2726                           fsr1h	equ	0xFE2
  2727                           fsr1l	equ	0xFE1
  2728                           bsr	equ	0xFE0
  2729                           indf2	equ	0xFDF
  2730                           fsr2h	equ	0xFDA
  2731                           fsr2l	equ	0xFD9
  2732                           status	equ	0xFD8
  2733                           
  2734 ;; *************** function _ReadUSART *****************
  2735 ;; Defined at:
  2736 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  data            1   17[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;Total ram usage:        1 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_getsUSART
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text23
  2764  000614                     __ptext23:
  2765                           	opt stack 0
  2766  000614                     _ReadUSART:
  2767                           	opt stack 24
  2768                           
  2769                           ;incstack = 0
  2770                           ;incstack = 0
  2771  000614  0EF2               	movlw	242
  2772  000616  1660               	andwf	_USART_Status,f,c
  2773  000618  ACAB               	btfss	4011,6,c	;volatile
  2774  00061A  D003               	goto	i2l352
  2775  00061C  9060               	bcf	_USART_Status,0,c
  2776  00061E  B0AB               	btfsc	4011,0,c	;volatile
  2777  000620  8060               	bsf	_USART_Status,0,c
  2778  000622                     i2l352:
  2779  000622  B4AB               	btfsc	4011,2,c	;volatile
  2780  000624  8460               	bsf	_USART_Status,2,c
  2781  000626  B2AB               	btfsc	4011,1,c	;volatile
  2782  000628  8660               	bsf	_USART_Status,3,c
  2783  00062A  CFAE F012          	movff	4014,ReadUSART@data	;volatile
  2784  00062E  5012               	movf	ReadUSART@data,w,c
  2785  000630  0012               	return	
  2786  000632                     __end_of_ReadUSART:
  2787                           	opt stack 0
  2788  0000                     pclatu	equ	0xFFB
  2789                           pclath	equ	0xFFA
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           intcon	equ	0xFF2
  2797                           postinc0	equ	0xFEE
  2798                           fsr0h	equ	0xFEA
  2799                           fsr0l	equ	0xFE9
  2800                           wreg	equ	0xFE8
  2801                           fsr1h	equ	0xFE2
  2802                           fsr1l	equ	0xFE1
  2803                           bsr	equ	0xFE0
  2804                           indf2	equ	0xFDF
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           pclatu	equ	0xFFB
  2809                           pclath	equ	0xFFA
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           prodh	equ	0xFF4
  2815                           prodl	equ	0xFF3
  2816                           intcon	equ	0xFF2
  2817                           postinc0	equ	0xFEE
  2818                           fsr0h	equ	0xFEA
  2819                           fsr0l	equ	0xFE9
  2820                           wreg	equ	0xFE8
  2821                           fsr1h	equ	0xFE2
  2822                           fsr1l	equ	0xFE1
  2823                           bsr	equ	0xFE0
  2824                           indf2	equ	0xFDF
  2825                           fsr2h	equ	0xFDA
  2826                           fsr2l	equ	0xFD9
  2827                           status	equ	0xFD8
  2828                           
  2829                           	psect	rparam
  2830  0000                     pclatu	equ	0xFFB
  2831                           pclath	equ	0xFFA
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           prodh	equ	0xFF4
  2837                           prodl	equ	0xFF3
  2838                           intcon	equ	0xFF2
  2839                           postinc0	equ	0xFEE
  2840                           fsr0h	equ	0xFEA
  2841                           fsr0l	equ	0xFE9
  2842                           wreg	equ	0xFE8
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           bsr	equ	0xFE0
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     54     107
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> recvBuff(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_InitApp
    _recvSPI->_ReadSPI
    _sendSPI->_WriteSPI
    _sendXbee->_WriteUSART
    _InitApp->_initXbee
    _initXbee->_OpenUSART
    _setupSPI->_OpenSPI

Critical Paths under _high_isr in COMRAM

    _high_isr->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     690
                                             50 COMRAM     4     4      0
                _ConfigureOscillator
                            _InitApp
                           _sendXbee
                         _ConvertADC
                            _BusyADC
                            _ReadADC
                            _sendSPI
                            _recvSPI
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (1) _recvSPI                                              1     0      1      15
                                             40 COMRAM     1     0      1
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (2) _ReadSPI                                              1     1      0       0
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendSPI                                              2     0      2      45
                                             41 COMRAM     2     0      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     1      1      15
                                             39 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendXbee                                             2     2      0      60
                                             40 COMRAM     2     2      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      15
                                             39 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              3     3      0     480
                                             47 COMRAM     3     3      0
                        _WriteTimer0
                           _CloseADC
                            _OpenADC
                           _setupSPI
                           _initXbee
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     0      1      30
                                             39 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _initXbee                                             5     5      0     240
                                             42 COMRAM     5     5      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     0      3     150
                                             39 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _setupSPI                                             3     3      0      60
                                             42 COMRAM     3     3      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     0      3      60
                                             39 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     105
                                             39 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2      45
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            15    15      0      75
                                             24 COMRAM    15    15      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (6) _getsUSART                                            6     3      3      75
                                             18 COMRAM     6     3      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _WriteTimer0
     _CloseADC
     _OpenADC
     _setupSPI
       _OpenSPI
     _initXbee
       _OpenUSART
     _OpenTimer0
   _sendXbee
     _WriteUSART
   _ConvertADC
   _BusyADC
   _ReadADC
   _sendSPI
     _WriteSPI
   _recvSPI
     _ReadSPI
   _WriteTimer0

 _low_isr (ROOT)

 _high_isr (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     36      6B       1       84.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       9       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B      34        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Nov 08 01:32:58 2013

          _TemperatureReading 006A                   _SSPSTATbits 000FC7                            l62 00F2  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                   __CFG_OSC$EC 000000  
                __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000  
                         l140 05B4                           l133 0592                           l215 0474  
                         l144 05DA                           l241 04E6                           l242 04E8  
                         l340 0400                           l332 03D4                           l245 0502  
                         l341 0402                           l181 055E                           l246 0520  
                         l334 03E0                           l247 0508                           l239 04E2  
                         l343 041A                           l335 03E2                           l271 064C  
                         l248 050C                           l256 066E                           l273 0646  
                         l338 03F4                           l178 0554                           l339 03F6  
                         l365 0692                           l288 060E                           l289 0610  
                         l995 00E6                           l979 00AE                  getsUSART@len 0015  
                __CFG_CPB$OFF 000000                           u417 0130                  __CFG_CPD$OFF 000000  
                         u427 0158                           u437 0176                           u447 019E  
                         u457 01BC                           u467 01E4                           u477 0202  
                         u487 022A                           u497 0248          __size_of_WriteTimer0 0012  
                         wreg 000FE8                          l1001 00FA                          l1201 04EC  
                        l1105 0594                          l1121 05F2                          l1205 0510  
                        l1109 05A6                          l1119 05E4                          l1161 0362  
                        l1173 0390                 getsUSART@data 0017                          i1l22 005C  
                        i2l17 02F8                          i2l18 02F6                          i2l19 02F8  
                        _main 00A6                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00A2  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000               __end_of_BusyADC 06A8  
             __end_of_ReadADC 06A2               __end_of_InitApp 04D0               __end_of_ReadSPI 0676  
             __end_of_OpenADC 0478               __end_of_OpenSPI 0528                         ?_main 0001  
                       _T0CON 000FD5                         i2l306 056A                         i2l352 0622  
                       i2l961 02E0                         i2l953 02AC                         i2l963 02EC  
                       i2l955 02B4                         i2l957 02C8                         i2l975 0586  
                       i2l959 02D4                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _SPBRG 000FAF  
                       _PORTB 000F81                         _TRISA 000F92                         _TRISB 000F93  
                       _TXREG 000FAD                         _TXSTA 000FAC           _ConfigureOscillator 06B2  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               __end_of_recvSPI 05F6  
             __end_of_sendSPI 05B6                         main@i 0035                    _ConvertADC 06AE  
             __end_of_low_isr 00A2                         tablat 000FF5                         status 000FD8  
        ?_ConfigureOscillator 0001              __end_of_CloseADC 06AE                WriteUSART@data 0028  
             __initialization 064E                  __end_of_main 027A                        ??_main 0033  
               __activetblptr 000002                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ADRESH 000FC4                        _ADRESL 000FC3  
            __end_of_WriteSPI 064E               getsUSART@buffer 0013                    _OpenTimer0 05F6  
          __size_of_ReadUSART 001E                        _SPBRGH 000FB0                        i2u1_40 02B4  
                      i2u1_41 02B2                        i2u2_40 02D4                        i2u2_41 02D2  
                      i2u3_40 02E0                        i2u3_41 02DE                        i2u4_40 02EC  
                      i2u4_41 02EA                        _SSPBUF 000FC9                     ??_BusyADC 0028  
                   ??_ReadADC 002A                     ??_InitApp 0030                     ??_ReadSPI 0028  
       ??_ConfigureOscillator 0028                     ??_OpenADC 002B                     ??_OpenSPI 002B  
              __CFG_XINST$OFF 000000              __end_of_high_isr 0332            __size_of_OpenUSART 005C  
              __CFG_STVREN$ON 000000              OpenTimer0@config 0028              __end_of_initXbee 03C0  
                      clear_0 0654               WriteSPI@TempVar 0029              __end_of_sendXbee 0560  
                   ??_recvSPI 002A                     ??_sendSPI 002C              __end_of_setupSPI 05D8  
                   ??_low_isr 0001                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                   ?_ConvertADC 0001                    __accesstop 0080  
     __end_of__initialization 065A               __CFG_PBADEN$OFF 000000                    _WriteUSART 0688  
              __pcstackCOMRAM 0001             __end_of_ReadUSART 0632            __size_of_getsUSART 0030  
               ReadUSART@data 0012                     ?_CloseADC 0001             __end_of_OpenUSART 041C  
                 ?_OpenTimer0 0028              WriteTimer0@timer 002A                 ??_WriteTimer0 002A  
         __size_of_ConvertADC 0004                     ?_WriteSPI 0028                    ??_CloseADC 0028  
                     _SSPCON1 000FC6                     ?_high_isr 0001                       _SSPSTAT 000FC7  
                   ?_initXbee 0001                       _BusyADC 06A2                       _ReadADC 0698  
                     _InitApp 0478                       _ReadSPI 0664                       _OpenADC 041C  
                   ?_sendXbee 0001                       _OpenSPI 04D0                       __Hparam 0000  
                     __Lparam 0000             __end_of_getsUSART 0590                   ?_WriteUSART 0028  
                   ?_setupSPI 0001                sendSPI@command 002B                       __pcinit 064E  
                     __ramtop 1000                    ??_WriteSPI 0029           __size_of_OpenTimer0 001E  
                     __ptext0 00A6                       __ptext1 05D8                       __ptext2 0664  
                     __ptext3 0590                       __ptext4 0632                       __ptext5 0698  
                     __ptext6 06A2                       __ptext7 06AE                       __ptext8 0528  
                     __ptext9 0688                     _T0CONbits 000FD5                       _recvSPI 05D8  
                     _recvIdx 0062                       _sendSPI 0590                       _sendIdx 0063  
         __end_of_WriteTimer0 0688                       _low_isr 0018                OpenADC@config2 0029  
                  ??_high_isr 0019                __pintcode_body 027A          end_of_initialization 065A  
                  ??_initXbee 002B                 __Lmediumconst 0000                       int_func 027A  
                  ??_sendXbee 0029                     _RCSTAbits 000FAB                    ??_setupSPI 002B  
            WriteSPI@data_out 0028                       postinc0 000FEE                     _PORTBbits 000F81  
                   _TRISAbits 000F92                     _TRISCbits 000F94                  recvSPI@slave 0029  
                  getsUSART@i 0018           __size_of_WriteUSART 0010                  ??_ConvertADC 0028  
 __end_of_ConfigureOscillator 06B4                     _TXSTAbits 000FAC                   _WriteTimer0 0676  
          __end_of_ConvertADC 06B2              OpenSPI@smp_phase 002A           start_initialization 064E  
                   _ReadUSART 0614                ReadSPI@TempVar 0028              OpenSPI@sync_mode 0028  
                ??_OpenTimer0 0029             __size_of_CloseADC 0006                     _OpenUSART 03C0  
                sendSPI@slave 002A              __CFG_LPT1OSC$OFF 000000            __end_of_OpenTimer0 0614  
           __size_of_WriteSPI 001C                   __pbssCOMRAM 0037                    ?_ReadUSART 0001  
                  ?_OpenUSART 0028             __size_of_high_isr 032A                      ?_BusyADC 0001  
                    ?_ReadADC 0028                      ?_InitApp 0001                      ?_ReadSPI 0001  
           OpenADC@portconfig 002A             __size_of_initXbee 008E                      ?_OpenADC 0028  
                    ?_OpenSPI 0028             __CFG_CCP2MX$PORTC 000000                  ??_WriteUSART 0029  
                   __pintcode 0008             __size_of_sendXbee 0038             __size_of_setupSPI 0022  
                   _getsUSART 0560                   __pintcodelo 0018             WriteTimer0@timer0 0028  
                    ?_recvSPI 0029                      ?_sendSPI 002A                      ?_low_isr 0001  
          __end_of_WriteUSART 0698                 OpenADC@config 0028                      _IPR1bits 000F9F  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                    ?_getsUSART 0013                 initXbee@i_743 002E  
             OpenSPI@bus_mode 0029                    _ADCON0bits 000FC2                   ??_ReadUSART 0012  
                    _CloseADC 06A8                   ??_OpenUSART 002B               OpenUSART@config 0028  
            __size_of_BusyADC 0006              __size_of_ReadADC 000A              __size_of_InitApp 0058  
            __size_of_ReadSPI 0012                      __Hrparam 0000                     initXbee@i 002C  
            __size_of_OpenADC 005C                      __Lrparam 0000              __size_of_OpenSPI 0058  
          __CFG_BOREN$SBORDIS 000000                  ?_WriteTimer0 0028                      _WriteSPI 0632  
            __size_of_recvSPI 001E              __size_of_sendSPI 0026              __size_of_low_isr 008A  
                    __ptext10 0478                      __ptext11 05F6                      __ptext12 0332  
                    __ptext13 03C0                      __ptext22 0560                      __ptext14 05B6  
                    __ptext23 0614                      __ptext15 04D0                      __ptext16 041C  
                   sendXbee@i 0029                      __ptext17 06A8                      __ptext18 0676  
                    __ptext19 06B2                      _high_isr 0008                      _initXbee 0332  
               __size_of_main 01D4                      _recvBuff 0064                      _sendBuff 0037  
                    _sendXbee 0528  __size_of_ConfigureOscillator 0002                      _pollRecv 0061  
                    _setupSPI 05B6                   ??_getsUSART 0016                    _INTCONbits 000FF2  
              OpenUSART@spbrg 0029                      intlevel1 0000                      intlevel2 0000  
                 _SSPCON1bits 000FC6                  _USART_Status 0060  
